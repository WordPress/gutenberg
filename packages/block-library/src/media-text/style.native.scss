$media-to-text: 12px;

.wp-block-media-text {
	display: flex;
	align-items: flex-start;
	flex-direction: row;
}

.has-media-on-the-right {
	/* stylelint-disable-next-line declaration-property-value-allowed-list -- This should be refactored to not use the row-reverse value. */
	flex-direction: row-reverse;
}

.is-stacked-on-mobile {
	flex-direction: column;

	&.has-media-on-the-right {
		/* stylelint-disable-next-line declaration-property-value-allowed-list -- This should be refactored to not use the column-reverse value. */
		flex-direction: column-reverse;
	}
}

.is-vertically-aligned-top {
	align-items: flex-start;
}

.is-vertically-aligned-center {
	align-items: center;
}

.is-vertically-aligned-bottom {
	align-items: flex-end;
}

.is-selected {
	padding-bottom: 8;
}

.imageContainer {
	align-items: center;
	background-color: $gray-lighten-30;
	height: 144;
	justify-content: center;
}

.modalIcon {
	width: 24px;
	height: 24px;
	justify-content: center;
	align-items: center;
}

.iconPlaceholder {
	fill: $gray-dark;
	width: 100%;
	height: 100%;
}

.iconPlaceholderDark {
	fill: $white;
}

.iconRetry {
	fill: #fff;
	width: 24px;
	height: 24px;
}

.iconRetryVideo {
	fill: $gray-dark;
}

.iconRetryVideoDark {
	fill: #fff;
}

.mediaVideo {
	flex: 1;
}

.video {
	width: 100%;
	height: 100%;
}

.videoContainer {
	flex: 1;
	flex-direction: row;
}

.videoContent {
	width: 100%;
}

.videoPlayer {
	flex: 1;
	background-color: #000;
}

.videoPlaceholder {
	width: 100%;
	height: 100%;
	align-items: center;
	background-color: $gray-light;
	justify-content: center;
}

.videoPlaceholderDark {
	background-color: $gray-90;
}

.uploadFailed {
	background-color: rgba(0, 0, 0, 0.5);
	flex: 1;
}

.uploadFailedText {
	color: #fff;
	font-size: 14;
	margin-top: 5;
	text-align: center;
}

.uploadFailedTextVideo {
	color: $gray-dark;
}

.uploadFailedTextVideoDark {
	color: $white;
}

// Inner blocks STACK
.innerBlockStackMediaLeft {
	margin-top: $media-to-text;
}

.innerBlockStackMediaRight {
	margin-bottom: $media-to-text;
}

// Inner blocks
.innerBlock {
	padding-right: $media-to-text;
	padding-left: $media-to-text;
}

.innerBlockPaddings {
	padding: 0 $media-to-text $media-to-text;
}

// Media STACK
.mediaStackLeft {
	margin-bottom: $media-to-text;
}

.mediaStackRight {
	margin-top: $media-to-text;
}

// Media
.mediaLeft {
	padding-right: $media-to-text;
}

.mediaRight {
	padding-left: $media-to-text;
}

.imageWithFocalPoint {
	overflow: hidden;
	width: 100%;
	height: 100%;
	position: relative;
}

.imageFill {
	height: 200px;
}

.imageCropped {
	min-height: 100px;
}

.mediaImageContainer {
	height: 100%;
	flex-direction: row;
}

.mediaAreaPadding {
	width: $media-to-text;
}
