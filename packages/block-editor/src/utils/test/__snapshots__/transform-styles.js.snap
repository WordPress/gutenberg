// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`transformStyles URL rewrite should not replace absolute paths 1`] = `
[
  "h1 { background: url(/images/test.png); }",
]
`;

exports[`transformStyles URL rewrite should not replace remote paths 1`] = `
[
  "h1 { background: url(http://wp.org/images/test.png); }",
]
`;

exports[`transformStyles URL rewrite should replace complex relative paths 1`] = `
[
  "h1 { background: url(http://wp-site.local/themes/gut/images/test.png); }",
]
`;

exports[`transformStyles URL rewrite should rewrite relative paths 1`] = `
[
  "h1 { background: url(http://wp-site.local/themes/gut/css/images/test.png); }",
]
`;

exports[`transformStyles selector wrap should ignore font-face selectors 1`] = `
[
  "
			@font-face {
				font-family: myFirstFont;
				src: url(sansation_light.woff);
			}",
]
`;

exports[`transformStyles selector wrap should ignore keyframes 1`] = `
[
  "
			@keyframes edit-post__fade-in-animation {
				from {
					opacity: 0;
				}
			}",
]
`;

exports[`transformStyles selector wrap should ignore selectors 1`] = `
[
  ".my-namespace h1, body { color: red; }",
]
`;

exports[`transformStyles selector wrap should not double wrap selectors 1`] = `
[
  " .my-namespace h1, .my-namespace .red { color: red; }",
]
`;

exports[`transformStyles selector wrap should replace :root selectors 1`] = `
[
  "
			.my-namespace {
				--my-color: #ff0000;
			}",
]
`;

exports[`transformStyles selector wrap should replace root tags 1`] = `
[
  ".my-namespace, .my-namespace h1 { color: red; }",
]
`;

exports[`transformStyles selector wrap should wrap multiple selectors 1`] = `
[
  ".my-namespace h1, .my-namespace h2 { color: red; }",
]
`;

exports[`transformStyles selector wrap should wrap regular selectors 1`] = `
[
  ".my-namespace h1 { color: red; }",
]
`;

exports[`transformStyles selector wrap should wrap selectors inside container queries 1`] = `
[
  "
			@container (width > 400px) {
				  .my-namespace h1 { color: red; }
			}",
]
`;
