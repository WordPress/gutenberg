// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RichText should apply formatting when selection is collapsed 1`] = `
"<!-- wp:paragraph -->
<p>Some <strong>bold</strong>.</p>
<!-- /wp:paragraph -->"
`;

exports[`RichText should apply formatting with primary shortcut 1`] = `
"<!-- wp:paragraph -->
<p><strong>test</strong></p>
<!-- /wp:paragraph -->"
`;

exports[`RichText should apply multiple formats when selection is collapsed 1`] = `
"<!-- wp:paragraph -->
<p><strong><em>1</em></strong>.</p>
<!-- /wp:paragraph -->"
`;

exports[`RichText should handle Home and End keys 1`] = `
"<!-- wp:paragraph -->
<p>-<strong>12</strong>+</p>
<!-- /wp:paragraph -->"
`;

exports[`RichText should handle change in tag name gracefully 1`] = `
"<!-- wp:heading {\\"level\\":3} -->
<h3></h3>
<!-- /wp:heading -->"
`;

exports[`RichText should not format text after code backtick 1`] = `
"<!-- wp:paragraph -->
<p>A <code>backtick</code> and more.</p>
<!-- /wp:paragraph -->"
`;

exports[`RichText should not lose selection direction 1`] = `
"<!-- wp:paragraph -->
<p><strong>1</strong>2-3</p>
<!-- /wp:paragraph -->"
`;

exports[`RichText should only mutate text data on input 1`] = `
"<!-- wp:paragraph -->
<p>1<strong>2</strong>34</p>
<!-- /wp:paragraph -->"
`;

exports[`RichText should return focus when pressing formatting button 1`] = `
"<!-- wp:paragraph -->
<p>Some <strong>bold</strong>.</p>
<!-- /wp:paragraph -->"
`;

exports[`RichText should transform backtick to code 1`] = `
"<!-- wp:paragraph -->
<p>A <code>backtick</code></p>
<!-- /wp:paragraph -->"
`;

exports[`RichText should transform backtick to code 2`] = `
"<!-- wp:paragraph -->
<p>A \`backtick\`</p>
<!-- /wp:paragraph -->"
`;
