"use strict";(self.webpackChunkgutenberg=self.webpackChunkgutenberg||[]).push([[9974],{"./packages/a11y/build-module/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function addContainer(ariaLive="polite"){const container=document.createElement("div");container.id=`a11y-speak-${ariaLive}`,container.className="a11y-speak-region",container.setAttribute("style","position: absolute;margin: -1px;padding: 0;height: 1px;width: 1px;overflow: hidden;clip: rect(1px, 1px, 1px, 1px);-webkit-clip-path: inset(50%);clip-path: inset(50%);border: 0;word-wrap: normal !important;"),container.setAttribute("aria-live",ariaLive),container.setAttribute("aria-relevant","additions text"),container.setAttribute("aria-atomic","true");const{body}=document;return body&&body.appendChild(container),container}__webpack_require__.d(__webpack_exports__,{L:()=>speak});var build_module=__webpack_require__("./packages/i18n/build-module/index.js");let previousMessage="";function speak(message,ariaLive){!function clear(){const regions=document.getElementsByClassName("a11y-speak-region"),introText=document.getElementById("a11y-speak-intro-text");for(let i=0;i<regions.length;i++)regions[i].textContent="";introText&&introText.setAttribute("hidden","hidden")}(),message=function filterMessage(message){return message=message.replace(/<[^<>]+>/g," "),previousMessage===message&&(message+="Â "),previousMessage=message,message}(message);const introText=document.getElementById("a11y-speak-intro-text"),containerAssertive=document.getElementById("a11y-speak-assertive"),containerPolite=document.getElementById("a11y-speak-polite");containerAssertive&&"assertive"===ariaLive?containerAssertive.textContent=message:containerPolite&&(containerPolite.textContent=message),introText&&introText.removeAttribute("hidden")}!function domReady(callback){"undefined"!=typeof document&&("complete"!==document.readyState&&"interactive"!==document.readyState?document.addEventListener("DOMContentLoaded",callback):callback())}((function setup(){const introText=document.getElementById("a11y-speak-intro-text"),containerAssertive=document.getElementById("a11y-speak-assertive"),containerPolite=document.getElementById("a11y-speak-polite");null===introText&&function addIntroText(){const introText=document.createElement("p");introText.id="a11y-speak-intro-text",introText.className="a11y-speak-intro-text",introText.textContent=(0,build_module.__)("Notifications"),introText.setAttribute("style","position: absolute;margin: -1px;padding: 0;height: 1px;width: 1px;overflow: hidden;clip: rect(1px, 1px, 1px, 1px);-webkit-clip-path: inset(50%);clip-path: inset(50%);border: 0;word-wrap: normal !important;"),introText.setAttribute("hidden","hidden");const{body}=document;return body&&body.appendChild(introText),introText}(),null===containerAssertive&&addContainer("assertive"),null===containerPolite&&addContainer("polite")}))},"./packages/components/src/utils/hooks/use-controlled-state.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_values__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/components/src/utils/values.js");const defaultOptions={initial:void 0,fallback:""};const __WEBPACK_DEFAULT_EXPORT__=function useControlledState(currentState,options=defaultOptions){const{initial,fallback}={...defaultOptions,...options},[internalState,setInternalState]=(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(currentState),hasCurrentState=(0,_values__WEBPACK_IMPORTED_MODULE_1__.J5)(currentState);return(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{hasCurrentState&&internalState&&setInternalState(void 0)}),[hasCurrentState,internalState]),[(0,_values__WEBPACK_IMPORTED_MODULE_1__.vD)([currentState,internalState,initial],fallback),(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useCallback)((nextState=>{hasCurrentState||setInternalState(nextState)}),[hasCurrentState])]}},"./packages/icons/build-module/library/check.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/primitives/build-module/svg/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__=(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__.t4,{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__.wA,{d:"M16.7 7.1l-6.3 8.5-3.3-2.5-.9 1.2 4.5 3.4L17.9 8z"})})},"./packages/icons/build-module/library/menu.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/primitives/build-module/svg/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__=(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__.t4,{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__.wA,{d:"M5 5v1.5h14V5H5zm0 7.8h14v-1.5H5v1.5zM5 19h14v-1.5H5V19z"})})},"./packages/icons/build-module/library/more-vertical.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/primitives/build-module/svg/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__=(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__.t4,{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__.wA,{d:"M13 19h-2v-2h2v2zm0-6h-2v-2h2v2zm0-6h-2V5h2v2z"})})},"./packages/components/src/dropdown-menu/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__,r:()=>DropdownMenu});var clsx__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/clsx/dist/clsx.mjs"),_wordpress_icons__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/icons/build-module/library/menu.js"),_context__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/components/src/context/use-context-system.js"),_context__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./packages/components/src/context/context-connect.ts"),_button__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./packages/components/src/button/index.tsx"),_dropdown__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./packages/components/src/dropdown/index.tsx"),_navigable_container__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./packages/components/src/navigable-container/menu.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js");function mergeProps(defaultProps={},props={}){const mergedProps={...defaultProps,...props};return props.className&&defaultProps.className&&(mergedProps.className=(0,clsx__WEBPACK_IMPORTED_MODULE_1__.A)(props.className,defaultProps.className)),mergedProps}function isFunction(maybeFunc){return"function"==typeof maybeFunc}function UnconnectedDropdownMenu(dropdownMenuProps){const{children,className,controls,icon=_wordpress_icons__WEBPACK_IMPORTED_MODULE_2__.A,label,popoverProps,toggleProps,menuProps,disableOpenOnArrowDown=!1,text,noIcons,open,defaultOpen,onToggle:onToggleProp,variant}=(0,_context__WEBPACK_IMPORTED_MODULE_3__.A)(dropdownMenuProps,"DropdownMenu");if(!controls?.length&&!isFunction(children))return null;let controlSets;controls?.length&&(controlSets=controls,Array.isArray(controlSets[0])||(controlSets=[controls]));const mergedPopoverProps=mergeProps({className:"components-dropdown-menu__popover",variant},popoverProps);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_dropdown__WEBPACK_IMPORTED_MODULE_4__.A,{className,popoverProps:mergedPopoverProps,renderToggle:({isOpen,onToggle})=>{var _toggleProps$showTool;const{as:Toggle=_button__WEBPACK_IMPORTED_MODULE_5__.Ay,...restToggleProps}=null!=toggleProps?toggleProps:{},mergedToggleProps=mergeProps({className:(0,clsx__WEBPACK_IMPORTED_MODULE_1__.A)("components-dropdown-menu__toggle",{"is-opened":isOpen})},restToggleProps);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Toggle,{...mergedToggleProps,icon,onClick:event=>{onToggle(),mergedToggleProps.onClick&&mergedToggleProps.onClick(event)},onKeyDown:event=>{(event=>{disableOpenOnArrowDown||isOpen||"ArrowDown"!==event.code||(event.preventDefault(),onToggle())})(event),mergedToggleProps.onKeyDown&&mergedToggleProps.onKeyDown(event)},"aria-haspopup":"true","aria-expanded":isOpen,label,text,showTooltip:null===(_toggleProps$showTool=toggleProps?.showTooltip)||void 0===_toggleProps$showTool||_toggleProps$showTool,children:mergedToggleProps.children})},renderContent:props=>{const mergedMenuProps=mergeProps({"aria-label":label,className:(0,clsx__WEBPACK_IMPORTED_MODULE_1__.A)("components-dropdown-menu__menu",{"no-icons":noIcons})},menuProps);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_navigable_container__WEBPACK_IMPORTED_MODULE_6__.Ay,{...mergedMenuProps,role:"menu",children:[isFunction(children)?children(props):null,controlSets?.flatMap(((controlSet,indexOfSet)=>controlSet.map(((control,indexOfControl)=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_button__WEBPACK_IMPORTED_MODULE_5__.Ay,{onClick:event=>{event.stopPropagation(),props.onClose(),control.onClick&&control.onClick()},className:(0,clsx__WEBPACK_IMPORTED_MODULE_1__.A)("components-dropdown-menu__menu-item",{"has-separator":indexOfSet>0&&0===indexOfControl,"is-active":control.isActive,"is-icon-only":!control.title}),icon:control.icon,label:control.label,"aria-checked":"menuitemcheckbox"===control.role||"menuitemradio"===control.role?control.isActive:void 0,role:"menuitemcheckbox"===control.role||"menuitemradio"===control.role?control.role:"menuitem",accessibleWhenDisabled:!0,disabled:control.isDisabled,children:control.title},[indexOfSet,indexOfControl].join())))))]})},open,defaultOpen,onToggle:onToggleProp})}UnconnectedDropdownMenu.displayName="UnconnectedDropdownMenu";const DropdownMenu=(0,_context__WEBPACK_IMPORTED_MODULE_7__.zS)(UnconnectedDropdownMenu,"DropdownMenu"),__WEBPACK_DEFAULT_EXPORT__=DropdownMenu;try{DropdownMenu.displayName="DropdownMenu",DropdownMenu.__docgenInfo={description:"\nThe DropdownMenu displays a list of actions (each contained in a MenuItem,\nMenuItemsChoice, or MenuGroup) in a compact way. It appears in a Popover\nafter the user has interacted with an element (a button or icon) or when\nthey perform a specific action.\n\nRender a Dropdown Menu with a set of controls:\n\n```jsx\nimport { DropdownMenu } from '@wordpress/components';\nimport {\n\tmore,\n\tarrowLeft,\n\tarrowRight,\n\tarrowUp,\n\tarrowDown,\n} from '@wordpress/icons';\n\nconst MyDropdownMenu = () => (\n\t<DropdownMenu\n\t\ticon={ more }\n\t\tlabel=\"Select a direction\"\n\t\tcontrols={ [\n\t\t\t{\n\t\t\t\ttitle: 'Up',\n\t\t\t\ticon: arrowUp,\n\t\t\t\tonClick: () => console.log( 'up' ),\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'Right',\n\t\t\t\ticon: arrowRight,\n\t\t\t\tonClick: () => console.log( 'right' ),\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'Down',\n\t\t\t\ticon: arrowDown,\n\t\t\t\tonClick: () => console.log( 'down' ),\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'Left',\n\t\t\t\ticon: arrowLeft,\n\t\t\t\tonClick: () => console.log( 'left' ),\n\t\t\t},\n\t\t] }\n\t/>\n);\n```\n\nAlternatively, specify a `children` function which returns elements valid for\nuse in a DropdownMenu: `MenuItem`, `MenuItemsChoice`, or `MenuGroup`.\n\n```jsx\nimport { DropdownMenu, MenuGroup, MenuItem } from '@wordpress/components';\nimport { more, arrowUp, arrowDown, trash } from '@wordpress/icons';\n\nconst MyDropdownMenu = () => (\n\t<DropdownMenu icon={ more } label=\"Select a direction\">\n\t\t{ ( { onClose } ) => (\n\t\t\t<>\n\t\t\t\t<MenuGroup>\n\t\t\t\t\t<MenuItem icon={ arrowUp } onClick={ onClose }>\n\t\t\t\t\t\tMove Up\n\t\t\t\t\t</MenuItem>\n\t\t\t\t\t<MenuItem icon={ arrowDown } onClick={ onClose }>\n\t\t\t\t\t\tMove Down\n\t\t\t\t\t</MenuItem>\n\t\t\t\t</MenuGroup>\n\t\t\t\t<MenuGroup>\n\t\t\t\t\t<MenuItem icon={ trash } onClick={ onClose }>\n\t\t\t\t\t\tRemove\n\t\t\t\t\t</MenuItem>\n\t\t\t\t</MenuGroup>\n\t\t\t</>\n\t\t) }\n\t</DropdownMenu>\n);\n```",displayName:"DropdownMenu",props:{icon:{defaultValue:{value:'"menu"'},description:"The icon to be shown in the collapsed menu button.",name:"icon",required:!1,type:{name:"IconType"}},label:{defaultValue:null,description:"A human-readable label to present as accessibility text on the focused\ncollapsed menu button.",name:"label",required:!0,type:{name:"string"}},className:{defaultValue:null,description:"A class name to apply to the dropdown menu's toggle element wrapper.",name:"className",required:!1,type:{name:"string"}},popoverProps:{defaultValue:null,description:"Properties of `popoverProps` object will be passed as props to the nested\n`Popover` component.\nUse this object to modify props available for the `Popover` component that\nare not already exposed in the `DropdownMenu` component, e.g.: the\ndirection in which the popover should open relative to its parent node\nset with `position` prop.",name:"popoverProps",required:!1,type:{name:'Omit<ComponentPropsWithoutRef<WordPressComponent<ElementType<any, keyof IntrinsicElements>, Omit<WordPressComponentProps<PopoverProps, "div", false>, "onDrag" | ... 55 more ... | "ignoreStrict"> & RefAttributes<...>, boolean>>, "children">'}},toggleProps:{defaultValue:null,description:"Properties of `toggleProps` object will be passed as props to the nested\n`Button` component in the `renderToggle` implementation of the `Dropdown`\ncomponent used internally.\nUse this object to modify props available for the `Button` component that\nare not already exposed in the `DropdownMenu` component, e.g.: the tooltip\ntext displayed on hover set with `tooltip` prop.",name:"toggleProps",required:!1,type:{name:"ToggleProps"}},menuProps:{defaultValue:null,description:"Properties of `menuProps` object will be passed as props to the nested\n`NavigableMenu` component in the `renderContent` implementation of the\n`Dropdown` component used internally.\nUse this object to modify props available for the `NavigableMenu`\ncomponent that are not already exposed in the `DropdownMenu` component,\ne.g.: the orientation of the menu set with `orientation` prop.",name:"menuProps",required:!1,type:{name:'Omit<Partial<NavigableMenuProps>, "children">'}},disableOpenOnArrowDown:{defaultValue:{value:"false"},description:"In some contexts, the arrow down key used to open the dropdown menu might\nneed to be disabledâfor example when that key is used to perform another\naction.",name:"disableOpenOnArrowDown",required:!1,type:{name:"boolean"}},text:{defaultValue:null,description:"Text to display on the nested `Button` component in the `renderToggle`\nimplementation of the `Dropdown` component used internally.",name:"text",required:!1,type:{name:"string"}},noIcons:{defaultValue:null,description:"Whether or not `no-icons` should be added to the menu's `className`.",name:"noIcons",required:!1,type:{name:"boolean"}},children:{defaultValue:null,description:"A [function render prop](https://reactjs.org/docs/render-props.html#using-props-other-than-render)\nwhich should return an element or elements valid for use in a DropdownMenu:\n`MenuItem`, `MenuItemsChoice`, or `MenuGroup`. Its first argument is a\nprops object including the same values as given to a `Dropdown`'s\n`renderContent` (`isOpen`, `onToggle`, `onClose`).\n\nA valid DropdownMenu must specify a `controls` or `children` prop, or both.",name:"children",required:!1,type:{name:"(callbackProps: DropdownCallbackProps) => ReactNode"}},controls:{defaultValue:null,description:"An array or nested array of objects describing the options to be shown in\nthe expanded menu. Each object should include an `icon` Dashicon slug\nstring, a human-readable `title` string, `isDisabled` boolean flag, and\nan `onClick` function callback to invoke when the option is selected.\n\nA valid DropdownMenu must specify a `controls` or `children` prop, or both.",name:"controls",required:!1,type:{name:"DropdownOption[] | DropdownOption[][]"}},open:{defaultValue:null,description:"The controlled open state of the dropdown menu.\nMust be used in conjunction with `onToggle`.",name:"open",required:!1,type:{name:"boolean"}},defaultOpen:{defaultValue:null,description:"The open state of the dropdown menu when initially rendered.\nUse when you do not need to control its open state. It will be overridden\nby the `open` prop if it is specified on the component's first render.",name:"defaultOpen",required:!1,type:{name:"boolean"}},onToggle:{defaultValue:null,description:"A callback invoked when the state of the dropdown menu changes\nfrom open to closed and vice versa.",name:"onToggle",required:!1,type:{name:"(willOpen: boolean) => void"}},as:{defaultValue:null,description:"The HTML element or React component to render the component as.",name:"as",required:!1,type:{name:'"symbol" | "object" | "select" | "a" | "abbr" | "address" | "area" | "article" | "aside" | "audio" | "b" | "base" | "bdi" | "bdo" | "big" | "blockquote" | "body" | "br" | "button" | ... 516 more ... | ("view" & FunctionComponent<...>)'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/dropdown-menu/index.tsx#DropdownMenu"]={docgenInfo:DropdownMenu.__docgenInfo,name:"DropdownMenu",path:"packages/components/src/dropdown-menu/index.tsx#DropdownMenu"})}catch(__react_docgen_typescript_loader_error){}},"./packages/components/src/dropdown/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var clsx__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/clsx/dist/clsx.mjs"),_wordpress_element__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react/index.js"),_wordpress_compose__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./packages/compose/build-module/hooks/use-merge-refs/index.js"),_wordpress_deprecated__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/deprecated/build-module/index.js"),_context__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/components/src/context/use-context-system.js"),_context__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./packages/components/src/context/context-connect.ts"),_utils_hooks__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./packages/components/src/utils/hooks/use-controlled-value.ts"),_popover__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./packages/components/src/popover/index.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js");const UnconnectedDropdown=(props,forwardedRef)=>{const{renderContent,renderToggle,className,contentClassName,expandOnMobile,headerTitle,focusOnMount,popoverProps,onClose,onToggle,style,open,defaultOpen,position,variant}=(0,_context__WEBPACK_IMPORTED_MODULE_1__.A)(props,"Dropdown");void 0!==position&&(0,_wordpress_deprecated__WEBPACK_IMPORTED_MODULE_2__.A)("`position` prop in wp.components.Dropdown",{since:"6.2",alternative:"`popoverProps.placement` prop",hint:"Note that the `position` prop will override any values passed through the `popoverProps.placement` prop."});const[fallbackPopoverAnchor,setFallbackPopoverAnchor]=(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_3__.useState)(null),containerRef=(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_3__.useRef)(),[isOpen,setIsOpen]=(0,_utils_hooks__WEBPACK_IMPORTED_MODULE_4__.j)({defaultValue:defaultOpen,value:open,onChange:onToggle});function close(){onClose?.(),setIsOpen(!1)}const args={isOpen:!!isOpen,onToggle:()=>setIsOpen(!isOpen),onClose:close},popoverPropsHaveAnchor=!!(popoverProps?.anchor||popoverProps?.anchorRef||popoverProps?.getAnchorRect||popoverProps?.anchorRect);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className,ref:(0,_wordpress_compose__WEBPACK_IMPORTED_MODULE_5__.A)([containerRef,forwardedRef,setFallbackPopoverAnchor]),tabIndex:-1,style,children:[renderToggle(args),isOpen&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_popover__WEBPACK_IMPORTED_MODULE_6__.Ay,{position,onClose:close,onFocusOutside:function closeIfFocusOutside(){if(!containerRef.current)return;const{ownerDocument}=containerRef.current,dialog=ownerDocument?.activeElement?.closest('[role="dialog"]');containerRef.current.contains(ownerDocument.activeElement)||dialog&&!dialog.contains(containerRef.current)||close()},expandOnMobile,headerTitle,focusOnMount,offset:13,anchor:popoverPropsHaveAnchor?void 0:fallbackPopoverAnchor,variant,...popoverProps,className:(0,clsx__WEBPACK_IMPORTED_MODULE_7__.A)("components-dropdown__content",popoverProps?.className,contentClassName),children:renderContent(args)})]})};UnconnectedDropdown.displayName="UnconnectedDropdown";const Dropdown=(0,_context__WEBPACK_IMPORTED_MODULE_8__.KZ)(UnconnectedDropdown,"Dropdown"),__WEBPACK_DEFAULT_EXPORT__=Dropdown;try{Dropdown.displayName="Dropdown",Dropdown.__docgenInfo={description:'Renders a button that opens a floating content modal when clicked.\n\n```jsx\nimport { Button, Dropdown } from \'@wordpress/components\';\n\nconst MyDropdown = () => (\n  <Dropdown\n    className="my-container-class-name"\n    contentClassName="my-dropdown-content-classname"\n    popoverProps={ { placement: \'bottom-start\' } }\n    renderToggle={ ( { isOpen, onToggle } ) => (\n      <Button\n        variant="primary"\n        onClick={ onToggle }\n        aria-expanded={ isOpen }\n      >\n        Toggle Dropdown!\n      </Button>\n    ) }\n    renderContent={ () => <div>This is the content of the dropdown.</div> }\n  />\n);\n```',displayName:"Dropdown",props:{className:{defaultValue:null,description:"The className of the global container.",name:"className",required:!1,type:{name:"string"}},contentClassName:{defaultValue:null,description:"If you want to target the dropdown menu for styling purposes,\nyou need to provide a contentClassName because it's not being rendered\nas a child of the container node.",name:"contentClassName",required:!1,type:{name:"string"}},expandOnMobile:{defaultValue:{value:"false"},description:"Opt-in prop to show popovers fullscreen on mobile.",name:"expandOnMobile",required:!1,type:{name:"boolean"}},focusOnMount:{defaultValue:{value:"'firstElement'"},description:'By default, the first tabbable element in the popover will receive focus\nwhen it mounts. This is the same as setting this prop to "firstElement".\nSpecifying a true value will focus the container instead.\nSpecifying a false value disables the focus handling entirely\n(this should only be done when an appropriately accessible\nsubstitute behavior exists).',name:"focusOnMount",required:!1,type:{name:'boolean | "firstElement"'}},headerTitle:{defaultValue:null,description:"Set this to customize the text that is shown in the dropdown's header\nwhen it is fullscreen on mobile.",name:"headerTitle",required:!1,type:{name:"string"}},onClose:{defaultValue:null,description:"A callback invoked when the popover should be closed.",name:"onClose",required:!1,type:{name:"() => void"}},onToggle:{defaultValue:null,description:"A callback invoked when the state of the dropdown changes\nfrom open to closed and vice versa.",name:"onToggle",required:!1,type:{name:"(willOpen: boolean) => void"}},popoverProps:{defaultValue:null,description:"Properties of popoverProps object will be passed as props\nto the Popover component.\nUse this object to access properties/features\nof the Popover component that are not already exposed\nin the Dropdown component,\ne.g.: the ability to have the popover without an arrow.",name:"popoverProps",required:!1,type:{name:'Omit<ComponentPropsWithoutRef<WordPressComponent<ElementType<any, keyof IntrinsicElements>, Omit<WordPressComponentProps<PopoverProps, "div", false>, "onDrag" | ... 55 more ... | "ignoreStrict"> & RefAttributes<...>, boolean>>, "children">'}},renderContent:{defaultValue:null,description:"A callback invoked to render the content of the dropdown menu.\nIts first argument is the same as the renderToggle prop.",name:"renderContent",required:!0,type:{name:"(props: CallbackProps) => ReactNode"}},renderToggle:{defaultValue:null,description:"A callback invoked to render the Dropdown Toggle Button.\n\nThe first argument of the callback is an object\ncontaining the following properties:\n\n- isOpen: whether the dropdown menu is opened or not\n- onToggle: A function switching the dropdown menu's state\nfrom open to closed and vice versa\n- onClose: A function that closes the menu if invoked",name:"renderToggle",required:!0,type:{name:"(props: CallbackProps) => ReactNode"}},style:{defaultValue:null,description:"The style of the global container.",name:"style",required:!1,type:{name:"CSSProperties"}},position:{defaultValue:null,description:"Legacy way to specify the popover's position with respect to its anchor.\nFor details about the possible values, see the `Popover` component's docs.\n_Note: this prop is deprecated. Use the `popoverProps.placement` prop\ninstead._\n@deprecated",name:"position",required:!1,type:{name:"enum",value:[{value:'"middle"'},{value:'"top"'},{value:'"bottom"'},{value:'"middle center"'},{value:'"middle left"'},{value:'"middle right"'},{value:'"top center"'},{value:'"top left"'},{value:'"top right"'},{value:'"bottom center"'},{value:'"bottom left"'},{value:'"bottom right"'},{value:'"middle center left"'},{value:'"middle center right"'},{value:'"middle center top"'},{value:'"middle center bottom"'},{value:'"middle left left"'},{value:'"middle left right"'},{value:'"middle left top"'},{value:'"middle left bottom"'},{value:'"middle right left"'},{value:'"middle right right"'},{value:'"middle right top"'},{value:'"middle right bottom"'},{value:'"top center left"'},{value:'"top center right"'},{value:'"top center top"'},{value:'"top center bottom"'},{value:'"top left left"'},{value:'"top left right"'},{value:'"top left top"'},{value:'"top left bottom"'},{value:'"top right left"'},{value:'"top right right"'},{value:'"top right top"'},{value:'"top right bottom"'},{value:'"bottom center left"'},{value:'"bottom center right"'},{value:'"bottom center top"'},{value:'"bottom center bottom"'},{value:'"bottom left left"'},{value:'"bottom left right"'},{value:'"bottom left top"'},{value:'"bottom left bottom"'},{value:'"bottom right left"'},{value:'"bottom right right"'},{value:'"bottom right top"'},{value:'"bottom right bottom"'}]}},open:{defaultValue:null,description:"The controlled open state of the dropdown.\nMust be used in conjunction with `onToggle`.",name:"open",required:!1,type:{name:"boolean"}},defaultOpen:{defaultValue:null,description:"The open state of the dropdown when initially rendered.\nUse when you do not need to control its open state. It will be overridden\nby the `open` prop if it is specified on the component's first render.",name:"defaultOpen",required:!1,type:{name:"boolean"}},as:{defaultValue:null,description:"The HTML element or React component to render the component as.",name:"as",required:!1,type:{name:'"symbol" | "object" | "select" | "a" | "abbr" | "address" | "area" | "article" | "aside" | "audio" | "b" | "base" | "bdi" | "bdo" | "big" | "blockquote" | "body" | "br" | "button" | ... 516 more ... | ("view" & FunctionComponent<...>)'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/dropdown/index.tsx#Dropdown"]={docgenInfo:Dropdown.__docgenInfo,name:"Dropdown",path:"packages/components/src/dropdown/index.tsx#Dropdown"})}catch(__react_docgen_typescript_loader_error){}},"./packages/components/src/grid/component.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>grid_component});var context_connect=__webpack_require__("./packages/components/src/context/context-connect.ts"),component=__webpack_require__("./packages/components/src/view/component.tsx"),emotion_react_browser_esm=__webpack_require__("./node_modules/@emotion/react/dist/emotion-react.browser.esm.js"),react=__webpack_require__("./node_modules/react/index.js"),use_context_system=__webpack_require__("./packages/components/src/context/use-context-system.js");const ALIGNMENTS={bottom:{alignItems:"flex-end",justifyContent:"center"},bottomLeft:{alignItems:"flex-start",justifyContent:"flex-end"},bottomRight:{alignItems:"flex-end",justifyContent:"flex-end"},center:{alignItems:"center",justifyContent:"center"},spaced:{alignItems:"center",justifyContent:"space-between"},left:{alignItems:"center",justifyContent:"flex-start"},right:{alignItems:"center",justifyContent:"flex-end"},stretch:{alignItems:"stretch"},top:{alignItems:"flex-start",justifyContent:"center"},topLeft:{alignItems:"flex-start",justifyContent:"flex-start"},topRight:{alignItems:"flex-start",justifyContent:"flex-end"}};var use_responsive_value=__webpack_require__("./packages/components/src/utils/use-responsive-value.ts"),config_values=__webpack_require__("./packages/components/src/utils/config-values.js"),use_cx=__webpack_require__("./packages/components/src/utils/hooks/use-cx.ts");function useGrid(props){const{align,alignment,className,columnGap,columns=2,gap=3,isInline=!1,justify,rowGap,rows,templateColumns,templateRows,...otherProps}=(0,use_context_system.A)(props,"Grid"),columnsAsArray=Array.isArray(columns)?columns:[columns],column=(0,use_responsive_value.t)(columnsAsArray),rowsAsArray=Array.isArray(rows)?rows:[rows],row=(0,use_responsive_value.t)(rowsAsArray),gridTemplateColumns=templateColumns||!!columns&&`repeat( ${column}, 1fr )`,gridTemplateRows=templateRows||!!rows&&`repeat( ${row}, 1fr )`,cx=(0,use_cx.l)();return{...otherProps,className:(0,react.useMemo)((()=>{const alignmentProps=function getAlignmentProps(alignment){return alignment?ALIGNMENTS[alignment]:{}}(alignment),gridClasses=(0,emotion_react_browser_esm.AH)({alignItems:align,display:isInline?"inline-grid":"grid",gap:`calc( ${config_values.A.gridBase} * ${gap} )`,gridTemplateColumns:gridTemplateColumns||void 0,gridTemplateRows:gridTemplateRows||void 0,gridRowGap:rowGap,gridColumnGap:columnGap,justifyContent:justify,verticalAlign:isInline?"middle":void 0,...alignmentProps},"","");return cx(gridClasses,className)}),[align,alignment,className,columnGap,cx,gap,gridTemplateColumns,gridTemplateRows,isInline,justify,rowGap])}}var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function UnconnectedGrid(props,forwardedRef){const gridProps=useGrid(props);return(0,jsx_runtime.jsx)(component.A,{...gridProps,ref:forwardedRef})}UnconnectedGrid.displayName="UnconnectedGrid";const Grid=(0,context_connect.KZ)(UnconnectedGrid,"Grid"),grid_component=Grid;try{Grid.displayName="Grid",Grid.__docgenInfo={description:"`Grid` is a primitive layout component that can arrange content in a grid configuration.\n\n```jsx\nimport {\n\t__experimentalGrid as Grid,\n\t__experimentalText as Text\n} from `@wordpress/components`;\n\nfunction Example() {\n\treturn (\n\t\t<Grid columns={ 3 }>\n\t\t\t<Text>Code</Text>\n\t\t\t<Text>is</Text>\n\t\t\t<Text>Poetry</Text>\n\t\t</Grid>\n\t);\n}\n```",displayName:"Grid",props:{align:{defaultValue:null,description:"Adjusts the block alignment of children.",name:"align",required:!1,type:{name:"AlignItems"}},alignment:{defaultValue:null,description:"Adjusts the horizontal and vertical alignment of children.",name:"alignment",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"left"'},{value:'"right"'},{value:'"top"'},{value:'"bottom"'},{value:'"stretch"'},{value:'"bottomLeft"'},{value:'"bottomRight"'},{value:'"topLeft"'},{value:'"topRight"'},{value:'"spaced"'}]}},children:{defaultValue:null,description:"The children elements.",name:"children",required:!0,type:{name:"ReactNode"}},columns:{defaultValue:{value:"2"},description:"Adjusts the number of columns of the `Grid`.",name:"columns",required:!1,type:{name:"ResponsiveCSSValue<number>"}},columnGap:{defaultValue:null,description:"Adjusts the `grid-column-gap`.",name:"columnGap",required:!1,type:{name:"GridColumnGap<string | number>"}},gap:{defaultValue:{value:"3"},description:"Gap between each child.",name:"gap",required:!1,type:{name:"number"}},isInline:{defaultValue:null,description:"Changes the CSS display from `grid` to `inline-grid`.",name:"isInline",required:!1,type:{name:"boolean"}},justify:{defaultValue:null,description:"Adjusts the inline alignment of children.",name:"justify",required:!1,type:{name:"JustifyContent"}},rowGap:{defaultValue:null,description:"Adjusts the `grid-row-gap`.",name:"rowGap",required:!1,type:{name:"GridRowGap<string | number>"}},rows:{defaultValue:null,description:"Adjusts the number of rows of the `Grid`.",name:"rows",required:!1,type:{name:"ResponsiveCSSValue<number>"}},templateColumns:{defaultValue:null,description:"Adjusts the CSS grid `template-columns`.",name:"templateColumns",required:!1,type:{name:"GridTemplateColumns<string | number>"}},templateRows:{defaultValue:null,description:"Adjusts the CSS grid `template-rows`.",name:"templateRows",required:!1,type:{name:"GridTemplateRows<string | number>"}},as:{defaultValue:null,description:"The HTML element or React component to render the component as.",name:"as",required:!1,type:{name:'"symbol" | "object" | "select" | "a" | "abbr" | "address" | "area" | "article" | "aside" | "audio" | "b" | "base" | "bdi" | "bdo" | "big" | "blockquote" | "body" | "br" | "button" | ... 516 more ... | ("view" & FunctionComponent<...>)'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/grid/component.tsx#Grid"]={docgenInfo:Grid.__docgenInfo,name:"Grid",path:"packages/components/src/grid/component.tsx#Grid"})}catch(__react_docgen_typescript_loader_error){}},"./packages/components/src/heading/component.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>heading_component});var context_connect=__webpack_require__("./packages/components/src/context/context-connect.ts"),component=__webpack_require__("./packages/components/src/view/component.tsx"),use_context_system=__webpack_require__("./packages/components/src/context/use-context-system.js"),hook=__webpack_require__("./packages/components/src/text/hook.ts"),font_size=__webpack_require__("./packages/components/src/utils/font-size.ts"),colors_values=__webpack_require__("./packages/components/src/utils/colors-values.js"),config_values=__webpack_require__("./packages/components/src/utils/config-values.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function UnconnectedHeading(props,forwardedRef){const headerProps=function useHeading(props){const{as:asProp,level=2,color=colors_values.l.gray[900],isBlock=!0,weight=config_values.A.fontWeightHeading,...otherProps}=(0,use_context_system.A)(props,"Heading"),as=asProp||`h${level}`,a11yProps={};return"string"==typeof as&&"h"!==as[0]&&(a11yProps.role="heading",a11yProps["aria-level"]="string"==typeof level?parseInt(level):level),{...(0,hook.A)({color,isBlock,weight,size:(0,font_size.fM)(level),...otherProps}),...a11yProps,as}}(props);return(0,jsx_runtime.jsx)(component.A,{...headerProps,ref:forwardedRef})}UnconnectedHeading.displayName="UnconnectedHeading";const Heading=(0,context_connect.KZ)(UnconnectedHeading,"Heading"),heading_component=Heading;try{Heading.displayName="Heading",Heading.__docgenInfo={description:'`Heading` renders headings and titles using the library\'s typography system.\n\n```jsx\nimport { __experimentalHeading as Heading } from "@wordpress/components";\n\nfunction Example() {\n  return <Heading>Code is Poetry</Heading>;\n}\n```',displayName:"Heading",props:{children:{defaultValue:null,description:"The children elements.\n\nNote: text truncation will be attempted only if the `children` are either\nof type `string` or `number`. In any other scenarios, the component will\nnot attempt to truncate the text, and will pass through the `children`.",name:"children",required:!0,type:{name:"ReactNode"}},display:{defaultValue:null,description:"Adjusts the CSS display.",name:"display",required:!1,type:{name:"Display"}},letterSpacing:{defaultValue:null,description:"Adjusts letter-spacing of the text.",name:"letterSpacing",required:!1,type:{name:"LetterSpacing<string | number>"}},size:{defaultValue:null,description:"Adjusts text size based on the typography system. `Text` can render a wide range of font sizes, which are automatically calculated and adapted to the typography system. The `size` value can be a system preset, a `number`, or a custom unit value (`string`) such as `30em`.",name:"size",required:!1,type:{name:"string | number | (string & {})"}},align:{defaultValue:null,description:"Adjusts the text alignment.",name:"align",required:!1,type:{name:"enum",value:[{value:'"center"'},{value:'"inherit"'},{value:'"end"'},{value:'"start"'},{value:'"initial"'},{value:'"left"'},{value:'"right"'},{value:'"justify"'},{value:'"-moz-initial"'},{value:'"revert"'},{value:'"revert-layer"'},{value:'"unset"'},{value:'"match-parent"'}]}},ellipsis:{defaultValue:{value:"'â¦'"},description:"The ellipsis string when truncating the text by the `limit` prop's value.",name:"ellipsis",required:!1,type:{name:"string"}},ellipsizeMode:{defaultValue:{value:"'auto'"},description:"Determines where to truncate.  For example, we can truncate text right in\nthe middle. To do this, we need to set `ellipsizeMode` to `middle` and a\ntext `limit`.\n\n* `auto`: Trims content at the end automatically without a `limit`.\n* `head`: Trims content at the beginning. Requires a `limit`.\n* `middle`: Trims content in the middle. Requires a `limit`.\n* `tail`: Trims content at the end. Requires a `limit`.",name:"ellipsizeMode",required:!1,type:{name:"enum",value:[{value:'"head"'},{value:'"none"'},{value:'"auto"'},{value:'"middle"'},{value:'"tail"'}]}},limit:{defaultValue:{value:"0"},description:"Determines the max number of characters to be displayed before the rest\nof the text gets truncated. Requires `ellipsizeMode` to assume values\ndifferent from `auto` and `none`.",name:"limit",required:!1,type:{name:"number"}},numberOfLines:{defaultValue:{value:"0"},description:"Clamps the text content to the specified `numberOfLines`, adding an\nellipsis at the end. Note: this feature ignores the value of the\n`ellipsis` prop and always displays the default `â¦` ellipsis.",name:"numberOfLines",required:!1,type:{name:"number"}},variant:{defaultValue:null,description:"Adjusts style variation of the text.",name:"variant",required:!1,type:{name:'"muted"'}},adjustLineHeightForInnerControls:{defaultValue:null,description:"Automatically calculate the appropriate line-height value for contents that render text and Control elements (e.g. `TextInput`).",name:"adjustLineHeightForInnerControls",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"large"'},{value:'"medium"'},{value:'"xSmall"'}]}},isDestructive:{defaultValue:{value:"false"},description:"Renders a destructive color.",name:"isDestructive",required:!1,type:{name:"boolean"}},highlightEscape:{defaultValue:{value:"false"},description:"Escape characters in `highlightWords` which are meaningful in regular expressions.",name:"highlightEscape",required:!1,type:{name:"boolean"}},highlightCaseSensitive:{defaultValue:{value:"false"},description:"Determines if `highlightWords` should be case sensitive.",name:"highlightCaseSensitive",required:!1,type:{name:"boolean"}},highlightSanitize:{defaultValue:null,description:"Array of search words. String search terms are automatically cast to RegExps unless `highlightEscape` is true.",name:"highlightSanitize",required:!1,type:{name:"(text: string) => string"}},lineHeight:{defaultValue:null,description:"Adjusts all text line-height based on the typography system.",name:"lineHeight",required:!1,type:{name:"LineHeight<string | number>"}},optimizeReadabilityFor:{defaultValue:null,description:"The `Text` color can be adapted to a background color for optimal readability. `optimizeReadabilityFor` can accept CSS variables, in addition to standard CSS color values (e.g. Hex, RGB, HSL, etc...).",name:"optimizeReadabilityFor",required:!1,type:{name:"Color"}},truncate:{defaultValue:{value:"false"},description:"Enables text truncation. When `truncate` is set, we are able to truncate the long text in a variety of ways. Note: text truncation won't work if the `isBlock` property is set to `true`",name:"truncate",required:!1,type:{name:"boolean"}},upperCase:{defaultValue:{value:"false"},description:"Uppercases the text content.",name:"upperCase",required:!1,type:{name:"boolean"}},highlightWords:{defaultValue:null,description:"Letters or words within `Text` can be highlighted using `highlightWords`.",name:"highlightWords",required:!1,type:{name:"string[]"}},level:{defaultValue:{value:"2"},description:"Passing any of the heading levels to `level` will both render the correct\ntypographic text size as well as the semantic element corresponding to\nthe level (`h1` for `1` for example).",name:"level",required:!1,type:{name:"enum",value:[{value:"1"},{value:"2"},{value:'"1"'},{value:"3"},{value:"4"},{value:"5"},{value:"6"},{value:'"2"'},{value:'"3"'},{value:'"4"'},{value:'"5"'},{value:'"6"'}]}},isBlock:{defaultValue:{value:"true"},description:"Sets `Heading` to have `display: block`. Note: text truncation only works\nwhen `isBlock` is `false`.",name:"isBlock",required:!1,type:{name:"boolean"}},color:{defaultValue:{value:"'#1e1e1e'"},description:"Adjusts the text color.",name:"color",required:!1,type:{name:"Color"}},weight:{defaultValue:{value:"'600'"},description:"Adjusts font-weight of the text.",name:"weight",required:!1,type:{name:"FontWeight | TextWeight"}},as:{defaultValue:null,description:"The HTML element or React component to render the component as.",name:"as",required:!1,type:{name:'"symbol" | "object" | "select" | "a" | "abbr" | "address" | "area" | "article" | "aside" | "audio" | "b" | "base" | "bdi" | "bdo" | "big" | "blockquote" | "body" | "br" | "button" | ... 516 more ... | ("view" & FunctionComponent<...>)'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/heading/component.tsx#Heading"]={docgenInfo:Heading.__docgenInfo,name:"Heading",path:"packages/components/src/heading/component.tsx#Heading"})}catch(__react_docgen_typescript_loader_error){}},"./packages/components/src/menu-group/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var clsx__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/clsx/dist/clsx.mjs"),_wordpress_element__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/index.js"),_wordpress_compose__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/compose/build-module/hooks/use-instance-id/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js");function MenuGroup(props){const{children,className="",label,hideSeparator}=props,instanceId=(0,_wordpress_compose__WEBPACK_IMPORTED_MODULE_1__.A)(MenuGroup);if(!_wordpress_element__WEBPACK_IMPORTED_MODULE_2__.Children.count(children))return null;const labelId=`components-menu-group-label-${instanceId}`,classNames=(0,clsx__WEBPACK_IMPORTED_MODULE_3__.A)(className,"components-menu-group",{"has-hidden-separator":hideSeparator});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:classNames,children:[label&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"components-menu-group__label",id:labelId,"aria-hidden":"true",children:label}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{role:"group","aria-labelledby":label?labelId:void 0,children})]})}MenuGroup.displayName="MenuGroup";const __WEBPACK_DEFAULT_EXPORT__=MenuGroup;try{MenuGroup.displayName="MenuGroup",MenuGroup.__docgenInfo={description:"`MenuGroup` wraps a series of related `MenuItem` components into a common\nsection.\n\n```jsx\nimport { MenuGroup, MenuItem } from '@wordpress/components';\n\nconst MyMenuGroup = () => (\n  <MenuGroup label=\"Settings\">\n    <MenuItem>Setting 1</MenuItem>\n    <MenuItem>Setting 2</MenuItem>\n  </MenuGroup>\n);\n```",displayName:"MenuGroup",props:{className:{defaultValue:null,description:"A CSS `class` to give to the container element.",name:"className",required:!1,type:{name:"string"}},hideSeparator:{defaultValue:null,description:"Hide the top border on the container.",name:"hideSeparator",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"Text to be displayed as the menu group header.",name:"label",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"The children elements.",name:"children",required:!1,type:{name:"ReactNode"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/menu-group/index.tsx#MenuGroup"]={docgenInfo:MenuGroup.__docgenInfo,name:"MenuGroup",path:"packages/components/src/menu-group/index.tsx#MenuGroup"})}catch(__react_docgen_typescript_loader_error){}},"./packages/components/src/menu-item/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var clsx__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/clsx/dist/clsx.mjs"),_wordpress_element__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/index.js"),_shortcut__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./packages/components/src/shortcut/index.tsx"),_button__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/components/src/button/index.tsx"),_icon__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./packages/components/src/icon/index.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js");function UnforwardedMenuItem(props,ref){let{children,info,className,icon,iconPosition="right",shortcut,isSelected,role="menuitem",suffix,...buttonProps}=props;return className=(0,clsx__WEBPACK_IMPORTED_MODULE_1__.A)("components-menu-item__button",className),info&&(children=(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("span",{className:"components-menu-item__info-wrapper",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("span",{className:"components-menu-item__item",children}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("span",{className:"components-menu-item__info",children:info})]})),icon&&"string"!=typeof icon&&(icon=(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_2__.cloneElement)(icon,{className:(0,clsx__WEBPACK_IMPORTED_MODULE_1__.A)("components-menu-items__item-icon",{"has-icon-right":"right"===iconPosition})})),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_button__WEBPACK_IMPORTED_MODULE_3__.Ay,{ref,"aria-checked":"menuitemcheckbox"===role||"menuitemradio"===role?isSelected:void 0,role,icon:"left"===iconPosition?icon:void 0,className,...buttonProps,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("span",{className:"components-menu-item__item",children}),!suffix&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_shortcut__WEBPACK_IMPORTED_MODULE_4__.A,{className:"components-menu-item__shortcut",shortcut}),!suffix&&icon&&"right"===iconPosition&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_icon__WEBPACK_IMPORTED_MODULE_5__.A,{icon}),suffix]})}UnforwardedMenuItem.displayName="UnforwardedMenuItem";const MenuItem=(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_2__.forwardRef)(UnforwardedMenuItem),__WEBPACK_DEFAULT_EXPORT__=MenuItem;try{MenuItem.displayName="MenuItem",MenuItem.__docgenInfo={description:"MenuItem is a component which renders a button intended to be used in combination with the `DropdownMenu` component.\n\n```jsx\nimport { MenuItem } from '@wordpress/components';\nimport { useState } from '@wordpress/element';\n\nconst MyMenuItem = () => {\n\tconst [ isActive, setIsActive ] = useState( true );\n\n\treturn (\n\t\t<MenuItem\n\t\t\ticon={ isActive ? 'yes' : 'no' }\n\t\t\tisSelected={ isActive }\n\t\t\trole=\"menuitemcheckbox\"\n\t\t\tonClick={ () => setIsActive( ( state ) => ! state ) }\n\t\t>\n\t\t\tToggle\n\t\t</MenuItem>\n\t);\n};\n```",displayName:"MenuItem",props:{isDestructive:{defaultValue:null,description:"Renders a red text-based button style to indicate destructive behavior.",name:"isDestructive",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"A CSS `class` to give to the container element.",name:"className",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"The children elements.",name:"children",required:!1,type:{name:"ReactNode"}},info:{defaultValue:null,description:"Text to use as description for button text.",name:"info",required:!1,type:{name:"string"}},icon:{defaultValue:{value:"null"},description:"The icon to render. Supported values are: Dashicons (specified as\nstrings), functions, Component instances and `null`.",name:"icon",required:!1,type:{name:"Element"}},iconPosition:{defaultValue:null,description:"Determines where to display the provided `icon`.",name:"iconPosition",required:!1,type:{name:"enum",value:[{value:'"left"'},{value:'"right"'}]}},isSelected:{defaultValue:null,description:'Whether or not the menu item is currently selected, `isSelected` is only taken into\naccount when the `role` prop is either `"menuitemcheckbox"` or `"menuitemradio"`.',name:"isSelected",required:!1,type:{name:"boolean"}},shortcut:{defaultValue:null,description:"If shortcut is a string, it is expecting the display text. If shortcut is an object,\nit will accept the properties of `display` (string) and `ariaLabel` (string).",name:"shortcut",required:!1,type:{name:"string | { display: string; ariaLabel: string; }"}},role:{defaultValue:{value:"'menuitem'"},description:"If you need to have selectable menu items use menuitemradio for single select,\nand menuitemcheckbox for multiselect.",name:"role",required:!1,type:{name:"string"}},suffix:{defaultValue:null,description:"Allows for markup other than icons or shortcuts to be added to the menu item.",name:"suffix",required:!1,type:{name:"ReactNode"}},label:{defaultValue:null,description:"Human-readable label for item.",name:"label",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/menu-item/index.tsx#MenuItem"]={docgenInfo:MenuItem.__docgenInfo,name:"MenuItem",path:"packages/components/src/menu-item/index.tsx#MenuItem"})}catch(__react_docgen_typescript_loader_error){}try{menuitem.displayName="menuitem",menuitem.__docgenInfo={description:"MenuItem is a component which renders a button intended to be used in combination with the `DropdownMenu` component.\n\n```jsx\nimport { MenuItem } from '@wordpress/components';\nimport { useState } from '@wordpress/element';\n\nconst MyMenuItem = () => {\n\tconst [ isActive, setIsActive ] = useState( true );\n\n\treturn (\n\t\t<MenuItem\n\t\t\ticon={ isActive ? 'yes' : 'no' }\n\t\t\tisSelected={ isActive }\n\t\t\trole=\"menuitemcheckbox\"\n\t\t\tonClick={ () => setIsActive( ( state ) => ! state ) }\n\t\t>\n\t\t\tToggle\n\t\t</MenuItem>\n\t);\n};\n```",displayName:"menuitem",props:{isDestructive:{defaultValue:null,description:"Renders a red text-based button style to indicate destructive behavior.",name:"isDestructive",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"A CSS `class` to give to the container element.",name:"className",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"The children elements.",name:"children",required:!1,type:{name:"ReactNode"}},info:{defaultValue:null,description:"Text to use as description for button text.",name:"info",required:!1,type:{name:"string"}},icon:{defaultValue:{value:"null"},description:"The icon to render. Supported values are: Dashicons (specified as\nstrings), functions, Component instances and `null`.",name:"icon",required:!1,type:{name:"Element"}},iconPosition:{defaultValue:null,description:"Determines where to display the provided `icon`.",name:"iconPosition",required:!1,type:{name:"enum",value:[{value:'"left"'},{value:'"right"'}]}},isSelected:{defaultValue:null,description:'Whether or not the menu item is currently selected, `isSelected` is only taken into\naccount when the `role` prop is either `"menuitemcheckbox"` or `"menuitemradio"`.',name:"isSelected",required:!1,type:{name:"boolean"}},shortcut:{defaultValue:null,description:"If shortcut is a string, it is expecting the display text. If shortcut is an object,\nit will accept the properties of `display` (string) and `ariaLabel` (string).",name:"shortcut",required:!1,type:{name:"string | { display: string; ariaLabel: string; }"}},role:{defaultValue:{value:"'menuitem'"},description:"If you need to have selectable menu items use menuitemradio for single select,\nand menuitemcheckbox for multiselect.",name:"role",required:!1,type:{name:"string"}},suffix:{defaultValue:null,description:"Allows for markup other than icons or shortcuts to be added to the menu item.",name:"suffix",required:!1,type:{name:"ReactNode"}},label:{defaultValue:null,description:"Human-readable label for item.",name:"label",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/menu-item/index.tsx#menuitem"]={docgenInfo:menuitem.__docgenInfo,name:"menuitem",path:"packages/components/src/menu-item/index.tsx#menuitem"})}catch(__react_docgen_typescript_loader_error){}},"./packages/components/src/navigable-container/container.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _wordpress_element__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js"),_wordpress_dom__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/dom/build-module/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js");const noop=()=>{},MENU_ITEM_ROLES=["menuitem","menuitemradio","menuitemcheckbox"];class NavigableContainer extends _wordpress_element__WEBPACK_IMPORTED_MODULE_1__.Component{constructor(args){super(args),this.onKeyDown=this.onKeyDown.bind(this),this.bindContainer=this.bindContainer.bind(this),this.getFocusableContext=this.getFocusableContext.bind(this),this.getFocusableIndex=this.getFocusableIndex.bind(this)}componentDidMount(){this.container&&this.container.addEventListener("keydown",this.onKeyDown)}componentWillUnmount(){this.container&&this.container.removeEventListener("keydown",this.onKeyDown)}bindContainer(ref){const{forwardedRef}=this.props;this.container=ref,"function"==typeof forwardedRef?forwardedRef(ref):forwardedRef&&"current"in forwardedRef&&(forwardedRef.current=ref)}getFocusableContext(target){if(!this.container)return null;const{onlyBrowserTabstops}=this.props,focusables=(onlyBrowserTabstops?_wordpress_dom__WEBPACK_IMPORTED_MODULE_2__.XC.tabbable:_wordpress_dom__WEBPACK_IMPORTED_MODULE_2__.XC.focusable).find(this.container),index=this.getFocusableIndex(focusables,target);return index>-1&&target?{index,target,focusables}:null}getFocusableIndex(focusables,target){return focusables.indexOf(target)}onKeyDown(event){this.props.onKeyDown&&this.props.onKeyDown(event);const{getFocusableContext}=this,{cycle=!0,eventToOffset,onNavigate=noop,stopNavigationEvents}=this.props,offset=eventToOffset(event);if(void 0!==offset&&stopNavigationEvents){event.stopImmediatePropagation();const targetRole=event.target?.getAttribute("role");!!targetRole&&MENU_ITEM_ROLES.includes(targetRole)&&event.preventDefault()}if(!offset)return;const activeElement=event.target?.ownerDocument?.activeElement;if(!activeElement)return;const context=getFocusableContext(activeElement);if(!context)return;const{index,focusables}=context,nextIndex=cycle?function cycleValue(value,total,offset){const nextValue=value+offset;return nextValue<0?total+nextValue:nextValue>=total?nextValue-total:nextValue}(index,focusables.length,offset):index+offset;nextIndex>=0&&nextIndex<focusables.length&&(focusables[nextIndex].focus(),onNavigate(nextIndex,focusables[nextIndex]),"Tab"===event.code&&event.preventDefault())}render(){const{children,stopNavigationEvents,eventToOffset,onNavigate,onKeyDown,cycle,onlyBrowserTabstops,forwardedRef,...restProps}=this.props;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{ref:this.bindContainer,...restProps,children})}}NavigableContainer.displayName="NavigableContainer";const forwardedNavigableContainer=(props,ref)=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(NavigableContainer,{...props,forwardedRef:ref});forwardedNavigableContainer.displayName="forwardedNavigableContainer",forwardedNavigableContainer.displayName="NavigableContainer";const __WEBPACK_DEFAULT_EXPORT__=(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(forwardedNavigableContainer);try{forwardedNavigableContainer.displayName="NavigableContainer",forwardedNavigableContainer.__docgenInfo={description:"",displayName:"NavigableContainer",props:{children:{defaultValue:null,description:"The component children.",name:"children",required:!1,type:{name:"ReactNode"}},cycle:{defaultValue:{value:"true"},description:"A boolean which tells the component whether or not to cycle from the end back to the beginning and vice versa.",name:"cycle",required:!1,type:{name:"boolean"}},onKeyDown:{defaultValue:null,description:"A callback invoked on the keydown event.",name:"onKeyDown",required:!1,type:{name:"(event: KeyboardEvent) => void"}},onNavigate:{defaultValue:null,description:"A callback invoked when the menu navigates to one of its children passing the index and child as an argument",name:"onNavigate",required:!1,type:{name:"(index: number, focusable: HTMLElement) => void"}},eventToOffset:{defaultValue:null,description:"Gets an offset, given an event.",name:"eventToOffset",required:!0,type:{name:"(event: KeyboardEvent) => 0 | 1 | -1"}},forwardedRef:{defaultValue:null,description:"The forwarded ref.",name:"forwardedRef",required:!1,type:{name:"ForwardedRef<any>"}},onlyBrowserTabstops:{defaultValue:{value:"false"},description:"Whether to only consider browser tab stops.",name:"onlyBrowserTabstops",required:!0,type:{name:"boolean"}},stopNavigationEvents:{defaultValue:{value:"false"},description:"Whether to stop navigation events.",name:"stopNavigationEvents",required:!0,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/navigable-container/container.tsx#NavigableContainer"]={docgenInfo:NavigableContainer.__docgenInfo,name:"NavigableContainer",path:"packages/components/src/navigable-container/container.tsx#NavigableContainer"})}catch(__react_docgen_typescript_loader_error){}},"./packages/components/src/navigable-container/menu.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Ay:()=>__WEBPACK_DEFAULT_EXPORT__});var _wordpress_element__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/index.js"),_container__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/components/src/navigable-container/container.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js");function UnforwardedNavigableMenu({role="menu",orientation="vertical",...rest},ref){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_container__WEBPACK_IMPORTED_MODULE_1__.A,{ref,stopNavigationEvents:!0,onlyBrowserTabstops:!1,role,"aria-orientation":"presentation"===role||"vertical"!==orientation&&"horizontal"!==orientation?void 0:orientation,eventToOffset:evt=>{const{code}=evt;let next=["ArrowDown"],previous=["ArrowUp"];return"horizontal"===orientation&&(next=["ArrowRight"],previous=["ArrowLeft"]),"both"===orientation&&(next=["ArrowRight","ArrowDown"],previous=["ArrowLeft","ArrowUp"]),next.includes(code)?1:previous.includes(code)?-1:["ArrowDown","ArrowUp","ArrowLeft","ArrowRight"].includes(code)?0:void 0},...rest})}UnforwardedNavigableMenu.displayName="UnforwardedNavigableMenu";const NavigableMenu=(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_2__.forwardRef)(UnforwardedNavigableMenu),__WEBPACK_DEFAULT_EXPORT__=NavigableMenu;try{NavigableMenu.displayName="NavigableMenu",NavigableMenu.__docgenInfo={description:'A container for a navigable menu.\n\n ```jsx\n import {\n   NavigableMenu,\n   Button,\n } from \'@wordpress/components\';\n\n function onNavigate( index, target ) {\n   console.log( `Navigates to ${ index }`, target );\n }\n\n const MyNavigableContainer = () => (\n   <div>\n     <span>Navigable Menu:</span>\n     <NavigableMenu onNavigate={ onNavigate } orientation="horizontal">\n       <Button variant="secondary">Item 1</Button>\n       <Button variant="secondary">Item 2</Button>\n       <Button variant="secondary">Item 3</Button>\n     </NavigableMenu>\n   </div>\n );\n ```',displayName:"NavigableMenu",props:{children:{defaultValue:null,description:"The component children.",name:"children",required:!1,type:{name:"ReactNode"}},cycle:{defaultValue:{value:"true"},description:"A boolean which tells the component whether or not to cycle from the end back to the beginning and vice versa.",name:"cycle",required:!1,type:{name:"boolean"}},onKeyDown:{defaultValue:null,description:"A callback invoked on the keydown event.",name:"onKeyDown",required:!1,type:{name:"(event: KeyboardEvent) => void"}},onNavigate:{defaultValue:null,description:"A callback invoked when the menu navigates to one of its children passing the index and child as an argument",name:"onNavigate",required:!1,type:{name:"(index: number, focusable: HTMLElement) => void"}},orientation:{defaultValue:{value:"'vertical'"},description:"The orientation of the menu.",name:"orientation",required:!1,type:{name:"enum",value:[{value:'"vertical"'},{value:'"horizontal"'},{value:'"both"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/navigable-container/menu.tsx#NavigableMenu"]={docgenInfo:NavigableMenu.__docgenInfo,name:"NavigableMenu",path:"packages/components/src/navigable-container/menu.tsx#NavigableMenu"})}catch(__react_docgen_typescript_loader_error){}try{menu.displayName="menu",menu.__docgenInfo={description:'A container for a navigable menu.\n\n ```jsx\n import {\n   NavigableMenu,\n   Button,\n } from \'@wordpress/components\';\n\n function onNavigate( index, target ) {\n   console.log( `Navigates to ${ index }`, target );\n }\n\n const MyNavigableContainer = () => (\n   <div>\n     <span>Navigable Menu:</span>\n     <NavigableMenu onNavigate={ onNavigate } orientation="horizontal">\n       <Button variant="secondary">Item 1</Button>\n       <Button variant="secondary">Item 2</Button>\n       <Button variant="secondary">Item 3</Button>\n     </NavigableMenu>\n   </div>\n );\n ```',displayName:"menu",props:{children:{defaultValue:null,description:"The component children.",name:"children",required:!1,type:{name:"ReactNode"}},cycle:{defaultValue:{value:"true"},description:"A boolean which tells the component whether or not to cycle from the end back to the beginning and vice versa.",name:"cycle",required:!1,type:{name:"boolean"}},onKeyDown:{defaultValue:null,description:"A callback invoked on the keydown event.",name:"onKeyDown",required:!1,type:{name:"(event: KeyboardEvent) => void"}},onNavigate:{defaultValue:null,description:"A callback invoked when the menu navigates to one of its children passing the index and child as an argument",name:"onNavigate",required:!1,type:{name:"(index: number, focusable: HTMLElement) => void"}},orientation:{defaultValue:{value:"'vertical'"},description:"The orientation of the menu.",name:"orientation",required:!1,type:{name:"enum",value:[{value:'"vertical"'},{value:'"horizontal"'},{value:'"both"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/navigable-container/menu.tsx#menu"]={docgenInfo:menu.__docgenInfo,name:"menu",path:"packages/components/src/navigable-container/menu.tsx#menu"})}catch(__react_docgen_typescript_loader_error){}},"./packages/components/src/panel/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>src_panel});var clsx=__webpack_require__("./node_modules/clsx/dist/clsx.mjs"),react=__webpack_require__("./node_modules/react/index.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function PanelHeader({label,children}){return(0,jsx_runtime.jsxs)("div",{className:"components-panel__header",children:[label&&(0,jsx_runtime.jsx)("h2",{children:label}),children]})}PanelHeader.displayName="PanelHeader";const panel_header=PanelHeader;try{PanelHeader.displayName="PanelHeader",PanelHeader.__docgenInfo={description:"`PanelHeader` renders the header for the `Panel`.\nThis is used by the `Panel` component under the hood,\nso it does not typically need to be used.",displayName:"PanelHeader",props:{label:{defaultValue:null,description:"The text that will be rendered as the title of the panel.\nWill be rendered in an `<h2>` tag.",name:"label",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"The content to display within the panel header.",name:"children",required:!1,type:{name:"ReactNode"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/panel/header.tsx#PanelHeader"]={docgenInfo:PanelHeader.__docgenInfo,name:"PanelHeader",path:"packages/components/src/panel/header.tsx#PanelHeader"})}catch(__react_docgen_typescript_loader_error){}function UnforwardedPanel({header,className,children},ref){const classNames=(0,clsx.A)(className,"components-panel");return(0,jsx_runtime.jsxs)("div",{className:classNames,ref,children:[header&&(0,jsx_runtime.jsx)(panel_header,{label:header}),children]})}UnforwardedPanel.displayName="UnforwardedPanel";const Panel=(0,react.forwardRef)(UnforwardedPanel),src_panel=Panel;try{Panel.displayName="Panel",Panel.__docgenInfo={description:"`Panel` expands and collapses multiple sections of content.\n\n```jsx\nimport { Panel, PanelBody, PanelRow } from '@wordpress/components';\nimport { more } from '@wordpress/icons';\n\nconst MyPanel = () => (\n\t<Panel header=\"My Panel\">\n\t\t<PanelBody title=\"My Block Settings\" icon={ more } initialOpen={ true }>\n\t\t\t<PanelRow>My Panel Inputs and Labels</PanelRow>\n\t\t</PanelBody>\n\t</Panel>\n);\n```",displayName:"Panel",props:{header:{defaultValue:null,description:"The text that will be rendered as the title of the panel.\nText will be rendered inside an `<h2>` tag.",name:"header",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"The CSS class to apply to the wrapper element.",name:"className",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"The content to display within the panel.",name:"children",required:!0,type:{name:"ReactNode"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/panel/index.tsx#Panel"]={docgenInfo:Panel.__docgenInfo,name:"Panel",path:"packages/components/src/panel/index.tsx#Panel"})}catch(__react_docgen_typescript_loader_error){}try{panel.displayName="panel",panel.__docgenInfo={description:"`Panel` expands and collapses multiple sections of content.\n\n```jsx\nimport { Panel, PanelBody, PanelRow } from '@wordpress/components';\nimport { more } from '@wordpress/icons';\n\nconst MyPanel = () => (\n\t<Panel header=\"My Panel\">\n\t\t<PanelBody title=\"My Block Settings\" icon={ more } initialOpen={ true }>\n\t\t\t<PanelRow>My Panel Inputs and Labels</PanelRow>\n\t\t</PanelBody>\n\t</Panel>\n);\n```",displayName:"panel",props:{header:{defaultValue:null,description:"The text that will be rendered as the title of the panel.\nText will be rendered inside an `<h2>` tag.",name:"header",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"The CSS class to apply to the wrapper element.",name:"className",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"The content to display within the panel.",name:"children",required:!0,type:{name:"ReactNode"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/panel/index.tsx#panel"]={docgenInfo:panel.__docgenInfo,name:"panel",path:"packages/components/src/panel/index.tsx#panel"})}catch(__react_docgen_typescript_loader_error){}},"./packages/components/src/toggle-group-control/toggle-group-control-option/component.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _wordpress_element__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/index.js"),_toggle_group_control_option_base__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/components/src/toggle-group-control/toggle-group-control-option-base/component.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js");function UnforwardedToggleGroupControlOption(props,ref){const{label,...restProps}=props,optionLabel=restProps["aria-label"]||label;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_toggle_group_control_option_base__WEBPACK_IMPORTED_MODULE_1__.A,{...restProps,"aria-label":optionLabel,ref,children:label})}UnforwardedToggleGroupControlOption.displayName="UnforwardedToggleGroupControlOption";const ToggleGroupControlOption=(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_2__.forwardRef)(UnforwardedToggleGroupControlOption),__WEBPACK_DEFAULT_EXPORT__=ToggleGroupControlOption;try{ToggleGroupControlOption.displayName="ToggleGroupControlOption",ToggleGroupControlOption.__docgenInfo={description:'`ToggleGroupControlOption` is a form component and is meant to be used as a\nchild of `ToggleGroupControl`.\n\n```jsx\nimport {\n  __experimentalToggleGroupControl as ToggleGroupControl,\n  __experimentalToggleGroupControlOption as ToggleGroupControlOption,\n} from \'@wordpress/components\';\n\nfunction Example() {\n  return (\n    <ToggleGroupControl\n      label="my label"\n      value="vertical"\n      isBlock\n      __nextHasNoMarginBottom\n    >\n      <ToggleGroupControlOption value="horizontal" label="Horizontal" />\n      <ToggleGroupControlOption value="vertical" label="Vertical" />\n    </ToggleGroupControl>\n  );\n}\n```',displayName:"ToggleGroupControlOption",props:{value:{defaultValue:null,description:"",name:"value",required:!0,type:{name:"string | number"}},showTooltip:{defaultValue:{value:"false"},description:"Whether to display a Tooltip for the control option. If set to `true`, the tooltip will\nshow the aria-label or the label prop text.",name:"showTooltip",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"Label for the option. If needed, the `aria-label` prop can be used in addition\nto specify a different label for assistive technologies.",name:"label",required:!0,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/toggle-group-control/toggle-group-control-option/component.tsx#ToggleGroupControlOption"]={docgenInfo:ToggleGroupControlOption.__docgenInfo,name:"ToggleGroupControlOption",path:"packages/components/src/toggle-group-control/toggle-group-control-option/component.tsx#ToggleGroupControlOption"})}catch(__react_docgen_typescript_loader_error){}try{component.displayName="component",component.__docgenInfo={description:'`ToggleGroupControlOption` is a form component and is meant to be used as a\nchild of `ToggleGroupControl`.\n\n```jsx\nimport {\n  __experimentalToggleGroupControl as ToggleGroupControl,\n  __experimentalToggleGroupControlOption as ToggleGroupControlOption,\n} from \'@wordpress/components\';\n\nfunction Example() {\n  return (\n    <ToggleGroupControl\n      label="my label"\n      value="vertical"\n      isBlock\n      __nextHasNoMarginBottom\n    >\n      <ToggleGroupControlOption value="horizontal" label="Horizontal" />\n      <ToggleGroupControlOption value="vertical" label="Vertical" />\n    </ToggleGroupControl>\n  );\n}\n```',displayName:"component",props:{value:{defaultValue:null,description:"",name:"value",required:!0,type:{name:"string | number"}},showTooltip:{defaultValue:{value:"false"},description:"Whether to display a Tooltip for the control option. If set to `true`, the tooltip will\nshow the aria-label or the label prop text.",name:"showTooltip",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"Label for the option. If needed, the `aria-label` prop can be used in addition\nto specify a different label for assistive technologies.",name:"label",required:!0,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/toggle-group-control/toggle-group-control-option/component.tsx#component"]={docgenInfo:component.__docgenInfo,name:"component",path:"packages/components/src/toggle-group-control/toggle-group-control-option/component.tsx#component"})}catch(__react_docgen_typescript_loader_error){}},"./packages/components/src/utils/hooks/use-controlled-value.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{j:()=>useControlledValue});var _wordpress_element__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function useControlledValue({defaultValue,onChange,value:valueProp}){const hasValue=void 0!==valueProp,initialValue=hasValue?valueProp:defaultValue,[state,setState]=(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_0__.useState)(initialValue);let setValue;return setValue=hasValue&&"function"==typeof onChange?onChange:hasValue||"function"!=typeof onChange?setState:nextValue=>{onChange(nextValue),setState(nextValue)},[hasValue?valueProp:state,setValue]}},"./packages/components/src/tools-panel/stories/index.story.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,WithConditionalDefaultControl:()=>WithConditionalDefaultControl,WithConditionallyRenderedControl:()=>WithConditionallyRenderedControl,WithNonToolsPanelItems:()=>WithNonToolsPanelItems,WithOptionalItemsPlusIcon:()=>WithOptionalItemsPlusIcon,WithSlotFillItems:()=>WithSlotFillItems,default:()=>index_story});var emotion_styled_base_browser_esm=__webpack_require__("./node_modules/@emotion/styled/base/dist/emotion-styled-base.browser.esm.js"),react=__webpack_require__("./node_modules/react/index.js"),component=__webpack_require__("./packages/components/src/toggle-group-control/toggle-group-control/component.tsx"),toggle_group_control_option_component=__webpack_require__("./packages/components/src/toggle-group-control/toggle-group-control-option/component.tsx"),build_module=__webpack_require__("./packages/a11y/build-module/index.js"),check=__webpack_require__("./packages/icons/build-module/library/check.js"),plus=__webpack_require__("./packages/icons/build-module/library/plus.js"),more_vertical=__webpack_require__("./packages/icons/build-module/library/more-vertical.js"),i18n_build_module=__webpack_require__("./packages/i18n/build-module/index.js"),dropdown_menu=__webpack_require__("./packages/components/src/dropdown-menu/index.tsx"),menu_group=__webpack_require__("./packages/components/src/menu-group/index.tsx"),menu_item=__webpack_require__("./packages/components/src/menu-item/index.tsx"),h_stack_component=__webpack_require__("./packages/components/src/h-stack/component.tsx"),heading_component=__webpack_require__("./packages/components/src/heading/component.tsx"),emotion_react_browser_esm=__webpack_require__("./node_modules/@emotion/react/dist/emotion-react.browser.esm.js"),base_control_styles=__webpack_require__("./packages/components/src/base-control/styles/base-control-styles.ts"),input_control_styles=__webpack_require__("./packages/components/src/input-control/styles/input-control-styles.tsx"),config_values=__webpack_require__("./packages/components/src/utils/config-values.js"),colors_values=__webpack_require__("./packages/components/src/utils/colors-values.js"),rtl=__webpack_require__("./packages/components/src/utils/rtl.js"),space=__webpack_require__("./packages/components/src/utils/space.ts");const toolsPanelGrid={columns:columns=>(0,emotion_react_browser_esm.AH)("grid-template-columns:",`repeat( ${columns}, minmax(0, 1fr) )`,";",""),spacing:(0,emotion_react_browser_esm.AH)("column-gap:",(0,space.x)(4),";row-gap:",(0,space.x)(4),";",""),item:{fullWidth:{name:"18iuzk9",styles:"grid-column:1/-1"}}},ToolsPanelHiddenInnerWrapper={name:"huufmu",styles:">div:not( :first-of-type ){display:none;}"},ToolsPanelHeader=(0,emotion_react_browser_esm.AH)(toolsPanelGrid.item.fullWidth," gap:",(0,space.x)(2),";.components-dropdown-menu{margin:",(0,space.x)(-1)," 0;line-height:0;}&&&& .components-dropdown-menu__toggle{padding:0;min-width:",(0,space.x)(6),";}",""),ToolsPanelHeading={name:"1pmxm02",styles:"font-size:inherit;font-weight:500;line-height:normal;&&{margin:0;}"},ToolsPanelItem=(0,emotion_react_browser_esm.AH)(toolsPanelGrid.item.fullWidth,"&>div,&>fieldset{padding-bottom:0;margin-bottom:0;max-width:100%;}&& ",base_control_styles.mO,"{margin-bottom:0;",base_control_styles.mh,":last-child{margin-bottom:0;}}",base_control_styles.te,"{margin-bottom:0;}&& ",input_control_styles.cR,"{label{line-height:1.4em;}}",""),ToolsPanelItemPlaceholder={name:"eivff4",styles:"display:none"},DropdownMenu={name:"16gsvie",styles:"min-width:200px"},ResetLabel=(0,emotion_styled_base_browser_esm.A)("span",{target:"ews648u0"})("color:",colors_values.l.theme.accentDarker10,";font-size:11px;font-weight:500;line-height:1.4;",(0,rtl.h)({marginLeft:(0,space.x)(3)})," text-transform:uppercase;"),DefaultControlsItem=(0,emotion_react_browser_esm.AH)("color:",colors_values.l.gray[900],";&&[aria-disabled='true']{color:",colors_values.l.gray[700],";opacity:1;&:hover{color:",colors_values.l.gray[700],";}",ResetLabel,"{opacity:0.3;}}",""),noop=()=>{},ToolsPanelContext=(0,react.createContext)({menuItems:{default:{},optional:{}},hasMenuItems:!1,isResetting:!1,shouldRenderPlaceholderItems:!1,registerPanelItem:noop,deregisterPanelItem:noop,flagItemCustomization:noop,registerResetAllFilter:noop,deregisterResetAllFilter:noop,areAllOptionalControlsHidden:!0}),useToolsPanelContext=()=>(0,react.useContext)(ToolsPanelContext);var use_context_system=__webpack_require__("./packages/components/src/context/use-context-system.js"),use_cx=__webpack_require__("./packages/components/src/utils/hooks/use-cx.ts");var context_connect=__webpack_require__("./packages/components/src/context/context-connect.ts"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const DefaultControlsGroup=({itemClassName,items,toggleItem})=>{if(!items.length)return null;const resetSuffix=(0,jsx_runtime.jsx)(ResetLabel,{"aria-hidden":!0,children:(0,i18n_build_module.__)("Reset")});return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:items.map((([label,hasValue])=>hasValue?(0,jsx_runtime.jsx)(menu_item.A,{className:itemClassName,role:"menuitem",label:(0,i18n_build_module.nv)((0,i18n_build_module.__)("Reset %s"),label),onClick:()=>{toggleItem(label),(0,build_module.L)((0,i18n_build_module.nv)((0,i18n_build_module.__)("%s reset to default"),label),"assertive")},suffix:resetSuffix,children:label},label):(0,jsx_runtime.jsx)(menu_item.A,{icon:check.A,className:itemClassName,role:"menuitemcheckbox",isSelected:!0,"aria-disabled":!0,children:label},label)))})},OptionalControlsGroup=({items,toggleItem})=>items.length?(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:items.map((([label,isSelected])=>{const itemLabel=isSelected?(0,i18n_build_module.nv)((0,i18n_build_module.__)("Hide and reset %s"),label):(0,i18n_build_module.nv)((0,i18n_build_module.__)("Show %s"),label);return(0,jsx_runtime.jsx)(menu_item.A,{icon:isSelected?check.A:null,isSelected,label:itemLabel,onClick:()=>{isSelected?(0,build_module.L)((0,i18n_build_module.nv)((0,i18n_build_module.__)("%s hidden and reset to default"),label),"assertive"):(0,build_module.L)((0,i18n_build_module.nv)((0,i18n_build_module.__)("%s is now visible"),label),"assertive"),toggleItem(label)},role:"menuitemcheckbox",children:label},label)}))}):null,component_ToolsPanelHeader=(props,forwardedRef)=>{const{areAllOptionalControlsHidden,defaultControlsItemClassName,dropdownMenuClassName,hasMenuItems,headingClassName,headingLevel=2,label:labelText,menuItems,resetAll,toggleItem,dropdownMenuProps,...headerProps}=function useToolsPanelHeader(props){const{className,headingLevel=2,...otherProps}=(0,use_context_system.A)(props,"ToolsPanelHeader"),cx=(0,use_cx.l)(),classes=(0,react.useMemo)((()=>cx(ToolsPanelHeader,className)),[className,cx]),dropdownMenuClassName=(0,react.useMemo)((()=>cx(DropdownMenu)),[cx]),headingClassName=(0,react.useMemo)((()=>cx(ToolsPanelHeading)),[cx]),defaultControlsItemClassName=(0,react.useMemo)((()=>cx(DefaultControlsItem)),[cx]),{menuItems,hasMenuItems,areAllOptionalControlsHidden}=useToolsPanelContext();return{...otherProps,areAllOptionalControlsHidden,defaultControlsItemClassName,dropdownMenuClassName,hasMenuItems,headingClassName,headingLevel,menuItems,className:classes}}(props);if(!labelText)return null;const defaultItems=Object.entries(menuItems?.default||{}),optionalItems=Object.entries(menuItems?.optional||{}),dropDownMenuIcon=areAllOptionalControlsHidden?plus.A:more_vertical.A,dropDownMenuLabelText=(0,i18n_build_module.nv)((0,i18n_build_module._x)("%s options","Button label to reveal tool panel options"),labelText),dropdownMenuDescriptionText=areAllOptionalControlsHidden?(0,i18n_build_module.__)("All options are currently hidden"):void 0,canResetAll=[...defaultItems,...optionalItems].some((([,isSelected])=>isSelected));return(0,jsx_runtime.jsxs)(h_stack_component.A,{...headerProps,ref:forwardedRef,children:[(0,jsx_runtime.jsx)(heading_component.A,{level:headingLevel,className:headingClassName,children:labelText}),hasMenuItems&&(0,jsx_runtime.jsx)(dropdown_menu.A,{...dropdownMenuProps,icon:dropDownMenuIcon,label:dropDownMenuLabelText,menuProps:{className:dropdownMenuClassName},toggleProps:{size:"small",description:dropdownMenuDescriptionText},children:()=>(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsxs)(menu_group.A,{label:labelText,children:[(0,jsx_runtime.jsx)(DefaultControlsGroup,{items:defaultItems,toggleItem,itemClassName:defaultControlsItemClassName}),(0,jsx_runtime.jsx)(OptionalControlsGroup,{items:optionalItems,toggleItem})]}),(0,jsx_runtime.jsx)(menu_group.A,{children:(0,jsx_runtime.jsx)(menu_item.A,{"aria-disabled":!canResetAll,variant:"tertiary",onClick:()=>{canResetAll&&(resetAll(),(0,build_module.L)((0,i18n_build_module.__)("All options reset"),"assertive"))},children:(0,i18n_build_module.__)("Reset all")})})]})})]})};component_ToolsPanelHeader.displayName="ToolsPanelHeader";const tools_panel_header_component=(0,context_connect.KZ)(component_ToolsPanelHeader,"ToolsPanelHeader");function emptyState(){return{panelItems:[],menuItemOrder:[],menuItems:{default:{},optional:{}}}}const generateMenuItems=({panelItems,shouldReset,currentMenuItems,menuItemOrder})=>{const newMenuItems={default:{},optional:{}},menuItems={default:{},optional:{}};return panelItems.forEach((({hasValue,isShownByDefault,label})=>{const group=isShownByDefault?"default":"optional",existingItemValue=currentMenuItems?.[group]?.[label],value=existingItemValue||hasValue();newMenuItems[group][label]=!shouldReset&&value})),menuItemOrder.forEach((key=>{newMenuItems.default.hasOwnProperty(key)&&(menuItems.default[key]=newMenuItems.default[key]),newMenuItems.optional.hasOwnProperty(key)&&(menuItems.optional[key]=newMenuItems.optional[key])})),Object.keys(newMenuItems.default).forEach((key=>{menuItems.default.hasOwnProperty(key)||(menuItems.default[key]=newMenuItems.default[key])})),Object.keys(newMenuItems.optional).forEach((key=>{menuItems.optional.hasOwnProperty(key)||(menuItems.optional[key]=newMenuItems.optional[key])})),menuItems};function panelReducer(state,action){const panelItems=function panelItemsReducer(panelItems,action){switch(action.type){case"REGISTER_PANEL":{const newItems=[...panelItems],existingIndex=newItems.findIndex((oldItem=>oldItem.label===action.item.label));return-1!==existingIndex&&newItems.splice(existingIndex,1),newItems.push(action.item),newItems}case"UNREGISTER_PANEL":{const index=panelItems.findIndex((item=>item.label===action.label));if(-1!==index){const newItems=[...panelItems];return newItems.splice(index,1),newItems}return panelItems}default:return panelItems}}(state.panelItems,action),menuItemOrder=function menuItemOrderReducer(menuItemOrder,action){return"REGISTER_PANEL"===action.type?menuItemOrder.includes(action.item.label)?menuItemOrder:[...menuItemOrder,action.item.label]:menuItemOrder}(state.menuItemOrder,action),menuItems=function menuItemsReducer(state,action){switch(action.type){case"REGISTER_PANEL":case"UNREGISTER_PANEL":return generateMenuItems({currentMenuItems:state.menuItems,panelItems:state.panelItems,menuItemOrder:state.menuItemOrder,shouldReset:!1});case"RESET_ALL":return generateMenuItems({panelItems:state.panelItems,menuItemOrder:state.menuItemOrder,shouldReset:!0});case"UPDATE_VALUE":{const oldValue=state.menuItems[action.group][action.label];return action.value===oldValue?state.menuItems:{...state.menuItems,[action.group]:{...state.menuItems[action.group],[action.label]:action.value}}}case"TOGGLE_VALUE":{const currentItem=state.panelItems.find((item=>item.label===action.label));if(!currentItem)return state.menuItems;const menuGroup=currentItem.isShownByDefault?"default":"optional";return{...state.menuItems,[menuGroup]:{...state.menuItems[menuGroup],[action.label]:!state.menuItems[menuGroup][action.label]}}}default:return state.menuItems}}({panelItems,menuItemOrder,menuItems:state.menuItems},action);return{panelItems,menuItemOrder,menuItems}}function resetAllFiltersReducer(filters,action){switch(action.type){case"REGISTER":return[...filters,action.filter];case"UNREGISTER":return filters.filter((f=>f!==action.filter));default:return filters}}const isMenuItemTypeEmpty=obj=>0===Object.keys(obj).length;function useToolsPanel(props){const{className,headingLevel=2,resetAll,panelId,hasInnerWrapper=!1,shouldRenderPlaceholderItems=!1,__experimentalFirstVisibleItemClass,__experimentalLastVisibleItemClass,...otherProps}=(0,use_context_system.A)(props,"ToolsPanel"),isResettingRef=(0,react.useRef)(!1),wasResetting=isResettingRef.current;(0,react.useEffect)((()=>{wasResetting&&(isResettingRef.current=!1)}),[wasResetting]);const[{panelItems,menuItems},panelDispatch]=(0,react.useReducer)(panelReducer,void 0,emptyState),[resetAllFilters,dispatchResetAllFilters]=(0,react.useReducer)(resetAllFiltersReducer,[]),registerPanelItem=(0,react.useCallback)((item=>{panelDispatch({type:"REGISTER_PANEL",item})}),[]),deregisterPanelItem=(0,react.useCallback)((label=>{panelDispatch({type:"UNREGISTER_PANEL",label})}),[]),registerResetAllFilter=(0,react.useCallback)((filter=>{dispatchResetAllFilters({type:"REGISTER",filter})}),[]),deregisterResetAllFilter=(0,react.useCallback)((filter=>{dispatchResetAllFilters({type:"UNREGISTER",filter})}),[]),flagItemCustomization=(0,react.useCallback)(((value,label,group="default")=>{panelDispatch({type:"UPDATE_VALUE",group,label,value})}),[]),areAllOptionalControlsHidden=(0,react.useMemo)((()=>isMenuItemTypeEmpty(menuItems.default)&&!isMenuItemTypeEmpty(menuItems.optional)&&Object.values(menuItems.optional).every((isSelected=>!isSelected))),[menuItems]),cx=(0,use_cx.l)(),classes=(0,react.useMemo)((()=>{const wrapperStyle=hasInnerWrapper&&(columns=2,(0,emotion_react_browser_esm.AH)(">div:not( :first-of-type ){display:grid;",toolsPanelGrid.columns(columns)," ",toolsPanelGrid.spacing," ",toolsPanelGrid.item.fullWidth,";}",""));var columns;const emptyStyle=areAllOptionalControlsHidden&&ToolsPanelHiddenInnerWrapper;return cx((columns=>(0,emotion_react_browser_esm.AH)(toolsPanelGrid.columns(columns)," ",toolsPanelGrid.spacing," border-top:",config_values.A.borderWidth," solid ",colors_values.l.gray[300],";margin-top:-1px;padding:",(0,space.x)(4),";",""))(2),wrapperStyle,emptyStyle,className)}),[areAllOptionalControlsHidden,className,cx,hasInnerWrapper]),toggleItem=(0,react.useCallback)((label=>{panelDispatch({type:"TOGGLE_VALUE",label})}),[]),resetAllItems=(0,react.useCallback)((()=>{"function"==typeof resetAll&&(isResettingRef.current=!0,resetAll(resetAllFilters)),panelDispatch({type:"RESET_ALL"})}),[resetAllFilters,resetAll]),getFirstVisibleItemLabel=items=>{const optionalItems=menuItems.optional||{},firstItem=items.find((item=>item.isShownByDefault||optionalItems[item.label]));return firstItem?.label},firstDisplayedItem=getFirstVisibleItemLabel(panelItems),lastDisplayedItem=getFirstVisibleItemLabel([...panelItems].reverse()),hasMenuItems=panelItems.length>0;return{...otherProps,headingLevel,panelContext:(0,react.useMemo)((()=>({areAllOptionalControlsHidden,deregisterPanelItem,deregisterResetAllFilter,firstDisplayedItem,flagItemCustomization,hasMenuItems,isResetting:isResettingRef.current,lastDisplayedItem,menuItems,panelId,registerPanelItem,registerResetAllFilter,shouldRenderPlaceholderItems,__experimentalFirstVisibleItemClass,__experimentalLastVisibleItemClass})),[areAllOptionalControlsHidden,deregisterPanelItem,deregisterResetAllFilter,firstDisplayedItem,flagItemCustomization,lastDisplayedItem,menuItems,panelId,hasMenuItems,registerResetAllFilter,registerPanelItem,shouldRenderPlaceholderItems,__experimentalFirstVisibleItemClass,__experimentalLastVisibleItemClass]),resetAllItems,toggleItem,className:classes}}var grid_component=__webpack_require__("./packages/components/src/grid/component.tsx");const UnconnectedToolsPanel=(props,forwardedRef)=>{const{children,label,panelContext,resetAllItems,toggleItem,headingLevel,dropdownMenuProps,...toolsPanelProps}=useToolsPanel(props);return(0,jsx_runtime.jsx)(grid_component.A,{...toolsPanelProps,columns:2,ref:forwardedRef,children:(0,jsx_runtime.jsxs)(ToolsPanelContext.Provider,{value:panelContext,children:[(0,jsx_runtime.jsx)(tools_panel_header_component,{label,resetAll:resetAllItems,toggleItem,headingLevel,dropdownMenuProps}),children]})})};UnconnectedToolsPanel.displayName="UnconnectedToolsPanel";const component_ToolsPanel=(0,context_connect.KZ)(UnconnectedToolsPanel,"ToolsPanel"),tools_panel_component=component_ToolsPanel;try{component_ToolsPanel.displayName="ToolsPanel",component_ToolsPanel.__docgenInfo={description:"The `ToolsPanel` is a container component that displays its children preceded\nby a header. The header includes a dropdown menu which is automatically\ngenerated from the panel's inner `ToolsPanelItems`.\n\n```jsx\nimport { __ } from '@wordpress/i18n';\nimport {\n  __experimentalToolsPanel as ToolsPanel,\n  __experimentalToolsPanelItem as ToolsPanelItem,\n  __experimentalUnitControl as UnitControl\n} from '@wordpress/components';\n\nfunction Example() {\n  const [ height, setHeight ] = useState();\n  const [ width, setWidth ] = useState();\n\n  const resetAll = () => {\n    setHeight();\n    setWidth();\n  }\n\n  return (\n    <ToolsPanel label={ __( 'Dimensions' ) } resetAll={ resetAll }>\n      <ToolsPanelItem\n        hasValue={ () => !! height }\n        label={ __( 'Height' ) }\n        onDeselect={ () => setHeight() }\n      >\n        <UnitControl\n          label={ __( 'Height' ) }\n          onChange={ setHeight }\n          value={ height }\n        />\n      </ToolsPanelItem>\n      <ToolsPanelItem\n        hasValue={ () => !! width }\n        label={ __( 'Width' ) }\n        onDeselect={ () => setWidth() }\n      >\n        <UnitControl\n          label={ __( 'Width' ) }\n          onChange={ setWidth }\n          value={ width }\n        />\n      </ToolsPanelItem>\n    </ToolsPanel>\n  );\n}\n```",displayName:"ToolsPanel",props:{children:{defaultValue:null,description:"The child elements.",name:"children",required:!0,type:{name:"ReactNode"}},dropdownMenuProps:{defaultValue:null,description:"The dropdown menu props to configure the panel's `DropdownMenu`.",name:"dropdownMenuProps",required:!1,type:{name:"WordPressComponentProps<DropdownMenuProps, ElementType<any, keyof IntrinsicElements>, boolean>"}},hasInnerWrapper:{defaultValue:{value:"false"},description:"Flags that the items in this ToolsPanel will be contained within an inner\nwrapper element allowing the panel to lay them out accordingly.",name:"hasInnerWrapper",required:!1,type:{name:"boolean"}},headingLevel:{defaultValue:{value:"2"},description:"The heading level of the panel's header.",name:"headingLevel",required:!1,type:{name:"enum",value:[{value:"1"},{value:"2"},{value:'"1"'},{value:"3"},{value:"4"},{value:"5"},{value:"6"},{value:'"2"'},{value:'"3"'},{value:'"4"'},{value:'"5"'},{value:'"6"'}]}},label:{defaultValue:null,description:"Text to be displayed within the panel's header and as the `aria-label`\nfor the panel's dropdown menu.",name:"label",required:!0,type:{name:"string"}},panelId:{defaultValue:null,description:"If a `panelId` is set, it is passed through the `ToolsPanelContext` and\nused to restrict panel items. When a `panelId` is set, items can only\nregister themselves if the `panelId` is explicitly `null` or the item's\n`panelId` matches exactly.",name:"panelId",required:!1,type:{name:"string"}},resetAll:{defaultValue:null,description:"A function to call when the `Reset all` menu option is selected. As an\nargument, it receives an array containing the `resetAllFilter` callbacks\nof all the valid registered `ToolsPanelItems`.",name:"resetAll",required:!0,type:{name:"ResetAll"}},shouldRenderPlaceholderItems:{defaultValue:{value:"false"},description:"Advises the `ToolsPanel` that its child `ToolsPanelItem`s should render\nplaceholder content instead of null when they are toggled off and hidden.\nNote that placeholder items won't apply the `className` that would be\nnormally applied to a visible `ToolsPanelItem` via the `className` prop.",name:"shouldRenderPlaceholderItems",required:!1,type:{name:"boolean"}},__experimentalFirstVisibleItemClass:{defaultValue:null,description:"Experimental prop allowing for a custom CSS class to be applied to the\nfirst visible `ToolsPanelItem` within the `ToolsPanel`.",name:"__experimentalFirstVisibleItemClass",required:!1,type:{name:"string"}},__experimentalLastVisibleItemClass:{defaultValue:null,description:"Experimental prop allowing for a custom CSS class to be applied to the\nlast visible `ToolsPanelItem` within the `ToolsPanel`.",name:"__experimentalLastVisibleItemClass",required:!1,type:{name:"string"}},as:{defaultValue:null,description:"The HTML element or React component to render the component as.",name:"as",required:!1,type:{name:'"symbol" | "object" | "select" | "a" | "abbr" | "address" | "area" | "article" | "aside" | "audio" | "b" | "base" | "bdi" | "bdo" | "big" | "blockquote" | "body" | "br" | "button" | ... 516 more ... | ("view" & FunctionComponent<...>)'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/tools-panel/tools-panel/component.tsx#ToolsPanel"]={docgenInfo:component_ToolsPanel.__docgenInfo,name:"ToolsPanel",path:"packages/components/src/tools-panel/tools-panel/component.tsx#ToolsPanel"})}catch(__react_docgen_typescript_loader_error){}var use_previous=__webpack_require__("./packages/compose/build-module/hooks/use-previous/index.js");const hook_noop=()=>{};var view_component=__webpack_require__("./packages/components/src/view/component.tsx");const UnconnectedToolsPanelItem=(props,forwardedRef)=>{const{children,isShown,shouldRenderPlaceholder,...toolsPanelItemProps}=function useToolsPanelItem(props){const{className,hasValue,isShownByDefault=!1,label,panelId,resetAllFilter=hook_noop,onDeselect,onSelect,...otherProps}=(0,use_context_system.A)(props,"ToolsPanelItem"),{panelId:currentPanelId,menuItems,registerResetAllFilter,deregisterResetAllFilter,registerPanelItem,deregisterPanelItem,flagItemCustomization,isResetting,shouldRenderPlaceholderItems:shouldRenderPlaceholder,firstDisplayedItem,lastDisplayedItem,__experimentalFirstVisibleItemClass,__experimentalLastVisibleItemClass}=useToolsPanelContext(),hasValueCallback=(0,react.useCallback)(hasValue,[panelId]),resetAllFilterCallback=(0,react.useCallback)(resetAllFilter,[panelId]),previousPanelId=(0,use_previous.A)(currentPanelId),hasMatchingPanel=currentPanelId===panelId||null===currentPanelId;(0,react.useLayoutEffect)((()=>(hasMatchingPanel&&null!==previousPanelId&&registerPanelItem({hasValue:hasValueCallback,isShownByDefault,label,panelId}),()=>{(null===previousPanelId&&currentPanelId||currentPanelId===panelId)&&deregisterPanelItem(label)})),[currentPanelId,hasMatchingPanel,isShownByDefault,label,hasValueCallback,panelId,previousPanelId,registerPanelItem,deregisterPanelItem]),(0,react.useEffect)((()=>(hasMatchingPanel&&registerResetAllFilter(resetAllFilterCallback),()=>{hasMatchingPanel&&deregisterResetAllFilter(resetAllFilterCallback)})),[registerResetAllFilter,deregisterResetAllFilter,resetAllFilterCallback,hasMatchingPanel]);const menuGroup=isShownByDefault?"default":"optional",isMenuItemChecked=menuItems?.[menuGroup]?.[label],wasMenuItemChecked=(0,use_previous.A)(isMenuItemChecked),isRegistered=void 0!==menuItems?.[menuGroup]?.[label],isValueSet=hasValue();(0,react.useEffect)((()=>{(isShownByDefault||isValueSet)&&flagItemCustomization(isValueSet,label,menuGroup)}),[isValueSet,menuGroup,label,flagItemCustomization,isShownByDefault]),(0,react.useEffect)((()=>{isRegistered&&!isResetting&&hasMatchingPanel&&(!isMenuItemChecked||isValueSet||wasMenuItemChecked||onSelect?.(),!isMenuItemChecked&&isValueSet&&wasMenuItemChecked&&onDeselect?.())}),[hasMatchingPanel,isMenuItemChecked,isRegistered,isResetting,isValueSet,wasMenuItemChecked,onSelect,onDeselect]);const isShown=isShownByDefault?void 0!==menuItems?.[menuGroup]?.[label]:isMenuItemChecked,cx=(0,use_cx.l)(),classes=(0,react.useMemo)((()=>{const shouldApplyPlaceholderStyles=shouldRenderPlaceholder&&!isShown;return cx(ToolsPanelItem,shouldApplyPlaceholderStyles&&ToolsPanelItemPlaceholder,!shouldApplyPlaceholderStyles&&className,firstDisplayedItem===label&&__experimentalFirstVisibleItemClass,lastDisplayedItem===label&&__experimentalLastVisibleItemClass)}),[isShown,shouldRenderPlaceholder,className,cx,firstDisplayedItem,lastDisplayedItem,__experimentalFirstVisibleItemClass,__experimentalLastVisibleItemClass,label]);return{...otherProps,isShown,shouldRenderPlaceholder,className:classes}}(props);return isShown?(0,jsx_runtime.jsx)(view_component.A,{...toolsPanelItemProps,ref:forwardedRef,children}):shouldRenderPlaceholder?(0,jsx_runtime.jsx)(view_component.A,{...toolsPanelItemProps,ref:forwardedRef}):null};UnconnectedToolsPanelItem.displayName="UnconnectedToolsPanelItem";const component_ToolsPanelItem=(0,context_connect.KZ)(UnconnectedToolsPanelItem,"ToolsPanelItem"),tools_panel_item_component=component_ToolsPanelItem;try{component_ToolsPanelItem.displayName="ToolsPanelItem",component_ToolsPanelItem.__docgenInfo={description:"",displayName:"ToolsPanelItem",props:{hasValue:{defaultValue:null,description:"This is called when building the `ToolsPanel` menu to determine the\nitem's initial checked state.",name:"hasValue",required:!0,type:{name:"() => boolean"}},isShownByDefault:{defaultValue:{value:"false"},description:"This prop identifies the current item as being displayed by default. This\nmeans it will show regardless of whether it has a value set or is toggled\non in the panel's menu.",name:"isShownByDefault",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"The supplied label is dual purpose. It is used as:\n1. the human-readable label for the panel's dropdown menu\n2. a key to locate the corresponding item in the panel's menu context to\ndetermine if the panel item should be displayed.\nA panel item's `label` should be unique among all items within a single\npanel.",name:"label",required:!0,type:{name:"string"}},panelId:{defaultValue:null,description:"Panel items will ensure they are only registering with their intended panel\nby comparing the `panelId` props set on both the item and the panel itself,\nor if the `panelId` is explicitly `null`. This allows items to be injected\nfrom a shared source.",name:"panelId",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"The child elements.",name:"children",required:!1,type:{name:"ReactNode"}},onDeselect:{defaultValue:null,description:"Called when this item is deselected in the `ToolsPanel` menu. This is\nnormally used to reset the panel item control's value.",name:"onDeselect",required:!1,type:{name:"() => void"}},onSelect:{defaultValue:null,description:"A callback to take action when this item is selected in the `ToolsPanel`\nmenu.",name:"onSelect",required:!1,type:{name:"() => void"}},resetAllFilter:{defaultValue:{value:"noop"},description:"A `ToolsPanel` will collect each item's `resetAllFilter` and pass an\narray of these functions through to the panel's `resetAll` callback. They\ncan then be iterated over to perform additional tasks.",name:"resetAllFilter",required:!1,type:{name:"ResetAllFilter"}},as:{defaultValue:null,description:"The HTML element or React component to render the component as.",name:"as",required:!1,type:{name:'"symbol" | "object" | "select" | "a" | "abbr" | "address" | "area" | "article" | "aside" | "audio" | "b" | "base" | "bdi" | "bdo" | "big" | "blockquote" | "body" | "br" | "button" | ... 516 more ... | ("view" & FunctionComponent<...>)'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/tools-panel/tools-panel-item/component.tsx#ToolsPanelItem"]={docgenInfo:component_ToolsPanelItem.__docgenInfo,name:"ToolsPanelItem",path:"packages/components/src/tools-panel/tools-panel-item/component.tsx#ToolsPanelItem"})}catch(__react_docgen_typescript_loader_error){}var panel=__webpack_require__("./packages/components/src/panel/index.tsx"),unit_control=__webpack_require__("./packages/components/src/unit-control/index.tsx"),slot_fill=__webpack_require__("./packages/components/src/slot-fill/index.tsx");const index_story={title:"Components (Experimental)/ToolsPanel",component:tools_panel_component,subcomponents:{ToolsPanelItem:tools_panel_item_component},argTypes:{as:{control:{type:null}},children:{control:{type:null}},panelId:{control:{type:null}},resetAll:{action:"resetAll"}},parameters:{sourceLink:"packages/components/src/tools-panel",badges:[],actions:{argTypesRegex:"^on.*"},controls:{expanded:!0},docs:{canvas:{sourceState:"shown"}}}},Default=({resetAll:resetAllProp,...props})=>{const[height,setHeight]=(0,react.useState)(),[minHeight,setMinHeight]=(0,react.useState)(),[width,setWidth]=(0,react.useState)(),[scale,setScale]=(0,react.useState)();return(0,jsx_runtime.jsx)(PanelWrapperView,{children:(0,jsx_runtime.jsx)(panel.A,{children:(0,jsx_runtime.jsxs)(tools_panel_component,{...props,resetAll:filters=>{setHeight(void 0),setWidth(void 0),setMinHeight(void 0),setScale(void 0),resetAllProp(filters)},children:[(0,jsx_runtime.jsx)(SingleColumnItem,{hasValue:()=>!!width,label:"Width",onDeselect:()=>setWidth(void 0),isShownByDefault:!0,children:(0,jsx_runtime.jsx)(unit_control.Ay,{label:"Width",value:width,onChange:next=>setWidth(next)})}),(0,jsx_runtime.jsx)(SingleColumnItem,{hasValue:()=>!!height,label:"Height",onDeselect:()=>setHeight(void 0),isShownByDefault:!0,children:(0,jsx_runtime.jsx)(unit_control.Ay,{label:"Height",value:height,onChange:next=>setHeight(next)})}),(0,jsx_runtime.jsx)(tools_panel_item_component,{hasValue:()=>!!minHeight,label:"Minimum height",onDeselect:()=>setMinHeight(void 0),isShownByDefault:!0,children:(0,jsx_runtime.jsx)(unit_control.Ay,{label:"Minimum height",value:minHeight,onChange:next=>setMinHeight(next)})}),(0,jsx_runtime.jsx)(tools_panel_item_component,{hasValue:()=>!!scale,label:"Scale",onDeselect:()=>setScale(void 0),children:(0,jsx_runtime.jsxs)(component.A,{__nextHasNoMarginBottom:!0,label:"Scale",value:scale,onChange:next=>setScale(next),isBlock:!0,children:[(0,jsx_runtime.jsx)(toggle_group_control_option_component.A,{value:"cover",label:"Cover"}),(0,jsx_runtime.jsx)(toggle_group_control_option_component.A,{value:"contain",label:"Contain"}),(0,jsx_runtime.jsx)(toggle_group_control_option_component.A,{value:"fill",label:"Fill"})]})})]})})})};Default.displayName="Default",Default.args={label:"Tools Panel (default example)"};const WithNonToolsPanelItems=({resetAll:resetAllProp,...props})=>{const[height,setHeight]=(0,react.useState)(),[width,setWidth]=(0,react.useState)();return(0,jsx_runtime.jsx)(PanelWrapperView,{children:(0,jsx_runtime.jsx)(panel.A,{children:(0,jsx_runtime.jsxs)(tools_panel_component,{...props,resetAll:filters=>{setHeight(void 0),setWidth(void 0),resetAllProp(filters)},children:[(0,jsx_runtime.jsx)(IntroText,{children:"This text illustrates not all items must be wrapped in a ToolsPanelItem and represented in the panel menu."}),(0,jsx_runtime.jsx)(SingleColumnItem,{hasValue:()=>!!width,label:"Width",onDeselect:()=>setWidth(void 0),isShownByDefault:!0,children:(0,jsx_runtime.jsx)(unit_control.Ay,{label:"Width",value:width,onChange:next=>setWidth(next)})}),(0,jsx_runtime.jsx)(SingleColumnItem,{hasValue:()=>!!height,label:"Height",onDeselect:()=>setHeight(void 0),isShownByDefault:!0,children:(0,jsx_runtime.jsx)(unit_control.Ay,{label:"Height",value:height,onChange:next=>setHeight(next)})})]})})})};WithNonToolsPanelItems.displayName="WithNonToolsPanelItems",WithNonToolsPanelItems.args={...Default.args,label:"ToolsPanel (with non-menu items)"};const WithOptionalItemsPlusIcon=({resetAll:resetAllProp,...props})=>{const[isFirstToolsPanelItemShownByDefault,setIsFirstToolsPanelItemShownByDefault]=(0,react.useState)(!1),[height,setHeight]=(0,react.useState)(),[width,setWidth]=(0,react.useState)(),[minWidth,setMinWidth]=(0,react.useState)();return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(PanelWrapperView,{children:(0,jsx_runtime.jsx)(panel.A,{children:(0,react.createElement)(tools_panel_component,{...props,resetAll:filters=>{setHeight(void 0),setWidth(void 0),setMinWidth(void 0),resetAllProp(filters)},key:isFirstToolsPanelItemShownByDefault?"true":"false"},(0,jsx_runtime.jsx)(SingleColumnItem,{hasValue:()=>!!minWidth,label:"Minimum width",onDeselect:()=>setMinWidth(void 0),isShownByDefault:isFirstToolsPanelItemShownByDefault,children:(0,jsx_runtime.jsx)(unit_control.Ay,{label:"Minimum width",value:minWidth,onChange:next=>setMinWidth(next)})}),(0,jsx_runtime.jsx)(SingleColumnItem,{hasValue:()=>!!width,label:"Width",onDeselect:()=>setWidth(void 0),isShownByDefault:!1,children:(0,jsx_runtime.jsx)(unit_control.Ay,{label:"Width",value:width,onChange:next=>setWidth(next)})}),(0,jsx_runtime.jsx)(SingleColumnItem,{hasValue:()=>!!height,label:"Height",onDeselect:()=>setHeight(void 0),isShownByDefault:!1,children:(0,jsx_runtime.jsx)(unit_control.Ay,{label:"Height",value:height,onChange:next=>setHeight(next)})}))})}),(0,jsx_runtime.jsx)("button",{onClick:()=>setIsFirstToolsPanelItemShownByDefault(!isFirstToolsPanelItemShownByDefault),"aria-pressed":isFirstToolsPanelItemShownByDefault?"true":"false",style:{marginTop:"2rem"},children:isFirstToolsPanelItemShownByDefault?"Make first PanelItem hidden by default":"Make first PanelItem shown by default"})]})};WithOptionalItemsPlusIcon.args={...Default.args,label:"Tools Panel (optional items only)"};const{Fill:ToolsPanelItems,Slot}=(0,slot_fill.QJ)("ToolsPanelSlot"),WithSlotFillItems=({resetAll:resetAllProp,panelId,...props})=>{const[attributes,setAttributes]=(0,react.useState)({}),{width,height}=attributes,updateAttribute=(name,value)=>{setAttributes({...attributes,[name]:value})};return(0,jsx_runtime.jsxs)(slot_fill.Kq,{children:[(0,jsx_runtime.jsxs)(ToolsPanelItems,{children:[(0,jsx_runtime.jsx)(SingleColumnItem,{hasValue:()=>!!width,label:"Injected Width",onDeselect:()=>updateAttribute("width",void 0),resetAllFilter:()=>({width:void 0}),panelId,children:(0,jsx_runtime.jsx)(unit_control.Ay,{label:"Injected Width",value:width,onChange:next=>updateAttribute("width",next)})}),(0,jsx_runtime.jsx)(SingleColumnItem,{hasValue:()=>!!height,label:"Injected Height",onDeselect:()=>updateAttribute("height",void 0),resetAllFilter:()=>({height:void 0}),panelId,children:(0,jsx_runtime.jsx)(unit_control.Ay,{label:"Injected Height",value:height,onChange:next=>updateAttribute("height",next)})}),(0,jsx_runtime.jsx)(tools_panel_item_component,{hasValue:()=>!0,label:"Item for alternate panel",onDeselect:()=>{},resetAllFilter:()=>{},panelId:"intended-for-another-panel-via-shared-slot",children:(0,jsx_runtime.jsx)("p",{children:"This panel item will not be displayed in the demo as its panelId does not match the panel being rendered."})})]}),(0,jsx_runtime.jsx)(PanelWrapperView,{children:(0,jsx_runtime.jsx)(panel.A,{children:(0,jsx_runtime.jsx)(tools_panel_component,{...props,resetAll:(resetFilters=[])=>{let newAttributes={};resetFilters.forEach((resetFilter=>{newAttributes={...newAttributes,...resetFilter(newAttributes)}})),setAttributes(newAttributes),resetAllProp(resetFilters)},panelId,children:(0,jsx_runtime.jsx)(Slot,{})})})})]})};WithSlotFillItems.displayName="WithSlotFillItems",WithSlotFillItems.args={...Default.args,label:"Tools Panel With SlotFill Items",panelId:"unique-tools-panel-id"};const WithConditionalDefaultControl=({resetAll:resetAllProp,panelId,...props})=>{const[attributes,setAttributes]=(0,react.useState)({}),{height,scale}=attributes,updateAttribute=(name,value)=>{setAttributes({...attributes,[name]:value})};return(0,jsx_runtime.jsxs)(slot_fill.Kq,{children:[(0,jsx_runtime.jsxs)(ToolsPanelItems,{children:[(0,jsx_runtime.jsx)(SingleColumnItem,{hasValue:()=>!!height,label:"Injected Height",onDeselect:()=>updateAttribute("height",void 0),resetAllFilter:()=>({height:void 0}),panelId,isShownByDefault:!0,children:(0,jsx_runtime.jsx)(unit_control.Ay,{label:"Injected Height",value:height,onChange:next=>updateAttribute("height",next)})}),(0,jsx_runtime.jsx)(tools_panel_item_component,{hasValue:()=>!!scale,label:"Scale",onDeselect:()=>updateAttribute("scale",void 0),resetAllFilter:()=>({scale:void 0}),panelId,isShownByDefault:!!height,children:(0,jsx_runtime.jsxs)(component.A,{__nextHasNoMarginBottom:!0,label:"Scale",value:scale,onChange:next=>updateAttribute("scale",next),isBlock:!0,children:[(0,jsx_runtime.jsx)(toggle_group_control_option_component.A,{value:"cover",label:"Cover"}),(0,jsx_runtime.jsx)(toggle_group_control_option_component.A,{value:"contain",label:"Contain"}),(0,jsx_runtime.jsx)(toggle_group_control_option_component.A,{value:"fill",label:"Fill"})]})})]}),(0,jsx_runtime.jsx)(PanelWrapperView,{children:(0,jsx_runtime.jsx)(panel.A,{children:(0,jsx_runtime.jsx)(tools_panel_component,{...props,resetAll:(resetFilters=[])=>{let newAttributes={};resetFilters.forEach((resetFilter=>{newAttributes={...newAttributes,...resetFilter(newAttributes)}})),setAttributes(newAttributes),resetAllProp(resetFilters)},panelId,children:(0,jsx_runtime.jsx)(Slot,{})})})})]})};WithConditionalDefaultControl.displayName="WithConditionalDefaultControl",WithConditionalDefaultControl.args={...Default.args,label:"Tools Panel With Conditional Default via SlotFill",panelId:"unique-tools-panel-id"};const WithConditionallyRenderedControl=({resetAll:resetAllProp,panelId,...props})=>{const[attributes,setAttributes]=(0,react.useState)({}),{height,scale}=attributes,updateAttribute=(name,value)=>{setAttributes({...attributes,[name]:value})};return(0,jsx_runtime.jsxs)(slot_fill.Kq,{children:[(0,jsx_runtime.jsxs)(ToolsPanelItems,{children:[(0,jsx_runtime.jsx)(SingleColumnItem,{hasValue:()=>!!height,label:"Injected Height",onDeselect:()=>{updateAttribute("scale",void 0),updateAttribute("height",void 0)},resetAllFilter:()=>({height:void 0}),panelId,isShownByDefault:!0,children:(0,jsx_runtime.jsx)(unit_control.Ay,{label:"Injected Height",value:height,onChange:next=>updateAttribute("height",next)})}),!!height&&(0,jsx_runtime.jsx)(tools_panel_item_component,{hasValue:()=>!!scale,label:"Scale",onDeselect:()=>updateAttribute("scale",void 0),resetAllFilter:()=>({scale:void 0}),panelId,isShownByDefault:!0,children:(0,jsx_runtime.jsxs)(component.A,{__nextHasNoMarginBottom:!0,label:"Scale",value:scale,onChange:next=>updateAttribute("scale",next),isBlock:!0,children:[(0,jsx_runtime.jsx)(toggle_group_control_option_component.A,{value:"cover",label:"Cover"}),(0,jsx_runtime.jsx)(toggle_group_control_option_component.A,{value:"contain",label:"Contain"}),(0,jsx_runtime.jsx)(toggle_group_control_option_component.A,{value:"fill",label:"Fill"})]})})]}),(0,jsx_runtime.jsx)(PanelWrapperView,{children:(0,jsx_runtime.jsx)(panel.A,{children:(0,jsx_runtime.jsx)(tools_panel_component,{...props,resetAll:(resetFilters=[])=>{let newAttributes={};resetFilters.forEach((resetFilter=>{newAttributes={...newAttributes,...resetFilter(newAttributes)}})),setAttributes(newAttributes),resetAllProp(resetFilters)},panelId,children:(0,jsx_runtime.jsx)(Slot,{})})})})]})};WithConditionallyRenderedControl.displayName="WithConditionallyRenderedControl",WithConditionallyRenderedControl.args={...Default.args,label:"Tools Panel With Conditionally Rendered Item via SlotFill",panelId:"unique-tools-panel-id"};const PanelWrapperView=(0,emotion_styled_base_browser_esm.A)("div",{target:"ej9vgij2"})({name:"1gwq18j",styles:"font-size:13px;.components-dropdown-menu__menu{max-width:220px;}"}),SingleColumnItem=(0,emotion_styled_base_browser_esm.A)(tools_panel_item_component,{target:"ej9vgij1"})({name:"957xgf",styles:"grid-column:span 1"}),IntroText=(0,emotion_styled_base_browser_esm.A)("div",{target:"ej9vgij0"})({name:"1kmi7xh",styles:"grid-column:span 2"});Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'({\n  resetAll: resetAllProp,\n  ...props\n}) => {\n  const [height, setHeight] = useState<string | undefined>();\n  const [minHeight, setMinHeight] = useState<string | undefined>();\n  const [width, setWidth] = useState<string | undefined>();\n  const [scale, setScale] = useState<React.ReactText | undefined>();\n  const resetAll: typeof resetAllProp = filters => {\n    setHeight(undefined);\n    setWidth(undefined);\n    setMinHeight(undefined);\n    setScale(undefined);\n    resetAllProp(filters);\n  };\n  return <PanelWrapperView>\n            <Panel>\n                <ToolsPanel {...props} resetAll={resetAll}>\n                    <SingleColumnItem hasValue={() => !!width} label="Width" onDeselect={() => setWidth(undefined)} isShownByDefault>\n                        <UnitControl label="Width" value={width} onChange={next => setWidth(next)} />\n                    </SingleColumnItem>\n                    <SingleColumnItem hasValue={() => !!height} label="Height" onDeselect={() => setHeight(undefined)} isShownByDefault>\n                        <UnitControl label="Height" value={height} onChange={next => setHeight(next)} />\n                    </SingleColumnItem>\n                    <ToolsPanelItem hasValue={() => !!minHeight} label="Minimum height" onDeselect={() => setMinHeight(undefined)} isShownByDefault>\n                        <UnitControl label="Minimum height" value={minHeight} onChange={next => setMinHeight(next)} />\n                    </ToolsPanelItem>\n                    <ToolsPanelItem hasValue={() => !!scale} label="Scale" onDeselect={() => setScale(undefined)}>\n                        <ToggleGroupControl __nextHasNoMarginBottom label="Scale" value={scale} onChange={next => setScale(next)} isBlock>\n                            <ToggleGroupControlOption value="cover" label="Cover" />\n                            <ToggleGroupControlOption value="contain" label="Contain" />\n                            <ToggleGroupControlOption value="fill" label="Fill" />\n                        </ToggleGroupControl>\n                    </ToolsPanelItem>\n                </ToolsPanel>\n            </Panel>\n        </PanelWrapperView>;\n}',...Default.parameters?.docs?.source}}},WithNonToolsPanelItems.parameters={...WithNonToolsPanelItems.parameters,docs:{...WithNonToolsPanelItems.parameters?.docs,source:{originalSource:'({\n  resetAll: resetAllProp,\n  ...props\n}) => {\n  const [height, setHeight] = useState<string | undefined>();\n  const [width, setWidth] = useState<string | undefined>();\n  const resetAll: typeof resetAllProp = filters => {\n    setHeight(undefined);\n    setWidth(undefined);\n    resetAllProp(filters);\n  };\n  return <PanelWrapperView>\n            <Panel>\n                <ToolsPanel {...props} resetAll={resetAll}>\n                    <IntroText>\n                        This text illustrates not all items must be wrapped in a\n                        ToolsPanelItem and represented in the panel menu.\n                    </IntroText>\n                    <SingleColumnItem hasValue={() => !!width} label="Width" onDeselect={() => setWidth(undefined)} isShownByDefault>\n                        <UnitControl label="Width" value={width} onChange={next => setWidth(next)} />\n                    </SingleColumnItem>\n                    <SingleColumnItem hasValue={() => !!height} label="Height" onDeselect={() => setHeight(undefined)} isShownByDefault>\n                        <UnitControl label="Height" value={height} onChange={next => setHeight(next)} />\n                    </SingleColumnItem>\n                </ToolsPanel>\n            </Panel>\n        </PanelWrapperView>;\n}',...WithNonToolsPanelItems.parameters?.docs?.source}}},WithOptionalItemsPlusIcon.parameters={...WithOptionalItemsPlusIcon.parameters,docs:{...WithOptionalItemsPlusIcon.parameters?.docs,source:{originalSource:"({\n  resetAll: resetAllProp,\n  ...props\n}) => {\n  const [isFirstToolsPanelItemShownByDefault, setIsFirstToolsPanelItemShownByDefault] = useState(false);\n  const [height, setHeight] = useState<string | undefined>();\n  const [width, setWidth] = useState<string | undefined>();\n  const [minWidth, setMinWidth] = useState<string | undefined>();\n  const resetAll: typeof resetAllProp = filters => {\n    setHeight(undefined);\n    setWidth(undefined);\n    setMinWidth(undefined);\n    resetAllProp(filters);\n  };\n  return <>\n            <PanelWrapperView>\n                <Panel>\n                    <ToolsPanel {...props} resetAll={resetAll}\n        // `key` property here is used as a hack to force `ToolsPanel` to re-render\n        // See https://github.com/WordPress/gutenberg/pull/38262/files#r793422991\n        key={isFirstToolsPanelItemShownByDefault ? 'true' : 'false'}>\n                        <SingleColumnItem hasValue={() => !!minWidth} label=\"Minimum width\" onDeselect={() => setMinWidth(undefined)} isShownByDefault={isFirstToolsPanelItemShownByDefault}>\n                            <UnitControl label=\"Minimum width\" value={minWidth} onChange={next => setMinWidth(next)} />\n                        </SingleColumnItem>\n                        <SingleColumnItem hasValue={() => !!width} label=\"Width\" onDeselect={() => setWidth(undefined)} isShownByDefault={false}>\n                            <UnitControl label=\"Width\" value={width} onChange={next => setWidth(next)} />\n                        </SingleColumnItem>\n                        <SingleColumnItem hasValue={() => !!height} label=\"Height\" onDeselect={() => setHeight(undefined)} isShownByDefault={false}>\n                            <UnitControl label=\"Height\" value={height} onChange={next => setHeight(next)} />\n                        </SingleColumnItem>\n                    </ToolsPanel>\n                </Panel>\n            </PanelWrapperView>\n\n            <button onClick={() => setIsFirstToolsPanelItemShownByDefault(!isFirstToolsPanelItemShownByDefault)} aria-pressed={isFirstToolsPanelItemShownByDefault ? 'true' : 'false'} style={{\n      marginTop: '2rem'\n    }}>\n                {isFirstToolsPanelItemShownByDefault ? 'Make first PanelItem hidden by default' : 'Make first PanelItem shown by default'}\n            </button>\n        </>;\n}",...WithOptionalItemsPlusIcon.parameters?.docs?.source}}},WithSlotFillItems.parameters={...WithSlotFillItems.parameters,docs:{...WithSlotFillItems.parameters?.docs,source:{originalSource:'({\n  resetAll: resetAllProp,\n  panelId,\n  ...props\n}) => {\n  const [attributes, setAttributes] = useState<{\n    width?: string;\n    height?: string;\n  }>({});\n  const {\n    width,\n    height\n  } = attributes;\n  const resetAll: typeof resetAllProp = (resetFilters = []) => {\n    let newAttributes: typeof attributes = {};\n    resetFilters.forEach(resetFilter => {\n      newAttributes = {\n        ...newAttributes,\n        ...resetFilter(newAttributes)\n      };\n    });\n    setAttributes(newAttributes);\n    resetAllProp(resetFilters);\n  };\n  const updateAttribute = (name: string, value?: any) => {\n    setAttributes({\n      ...attributes,\n      [name]: value\n    });\n  };\n  return <SlotFillProvider>\n            <ToolsPanelItems>\n                <SingleColumnItem hasValue={() => !!width} label="Injected Width" onDeselect={() => updateAttribute(\'width\', undefined)} resetAllFilter={() => ({\n        width: undefined\n      })} panelId={panelId}>\n                    <UnitControl label="Injected Width" value={width} onChange={next => updateAttribute(\'width\', next)} />\n                </SingleColumnItem>\n                <SingleColumnItem hasValue={() => !!height} label="Injected Height" onDeselect={() => updateAttribute(\'height\', undefined)} resetAllFilter={() => ({\n        height: undefined\n      })} panelId={panelId}>\n                    <UnitControl label="Injected Height" value={height} onChange={next => updateAttribute(\'height\', next)} />\n                </SingleColumnItem>\n                <ToolsPanelItem hasValue={() => true} label="Item for alternate panel" onDeselect={() => undefined} resetAllFilter={() => undefined} panelId="intended-for-another-panel-via-shared-slot">\n                    <p>\n                        This panel item will not be displayed in the demo as its\n                        panelId does not match the panel being rendered.\n                    </p>\n                </ToolsPanelItem>\n            </ToolsPanelItems>\n            <PanelWrapperView>\n                <Panel>\n                    <ToolsPanel {...props} resetAll={resetAll} panelId={panelId}>\n                        <Slot />\n                    </ToolsPanel>\n                </Panel>\n            </PanelWrapperView>\n        </SlotFillProvider>;\n}',...WithSlotFillItems.parameters?.docs?.source}}},WithConditionalDefaultControl.parameters={...WithConditionalDefaultControl.parameters,docs:{...WithConditionalDefaultControl.parameters?.docs,source:{originalSource:'({\n  resetAll: resetAllProp,\n  panelId,\n  ...props\n}) => {\n  const [attributes, setAttributes] = useState<{\n    height?: string;\n    scale?: React.ReactText;\n  }>({});\n  const {\n    height,\n    scale\n  } = attributes;\n  const resetAll: typeof resetAllProp = (resetFilters = []) => {\n    let newAttributes: typeof attributes = {};\n    resetFilters.forEach(resetFilter => {\n      newAttributes = {\n        ...newAttributes,\n        ...resetFilter(newAttributes)\n      };\n    });\n    setAttributes(newAttributes);\n    resetAllProp(resetFilters);\n  };\n  const updateAttribute = (name: string, value?: any) => {\n    setAttributes({\n      ...attributes,\n      [name]: value\n    });\n  };\n  return <SlotFillProvider>\n            <ToolsPanelItems>\n                <SingleColumnItem hasValue={() => !!height} label="Injected Height" onDeselect={() => updateAttribute(\'height\', undefined)} resetAllFilter={() => ({\n        height: undefined\n      })} panelId={panelId} isShownByDefault>\n                    <UnitControl label="Injected Height" value={height} onChange={next => updateAttribute(\'height\', next)} />\n                </SingleColumnItem>\n                <ToolsPanelItem hasValue={() => !!scale} label="Scale" onDeselect={() => updateAttribute(\'scale\', undefined)} resetAllFilter={() => ({\n        scale: undefined\n      })} panelId={panelId} isShownByDefault={!!height}>\n                    <ToggleGroupControl __nextHasNoMarginBottom label="Scale" value={scale} onChange={next => updateAttribute(\'scale\', next)} isBlock>\n                        <ToggleGroupControlOption value="cover" label="Cover" />\n                        <ToggleGroupControlOption value="contain" label="Contain" />\n                        <ToggleGroupControlOption value="fill" label="Fill" />\n                    </ToggleGroupControl>\n                </ToolsPanelItem>\n            </ToolsPanelItems>\n            <PanelWrapperView>\n                <Panel>\n                    <ToolsPanel {...props} resetAll={resetAll} panelId={panelId}>\n                        <Slot />\n                    </ToolsPanel>\n                </Panel>\n            </PanelWrapperView>\n        </SlotFillProvider>;\n}',...WithConditionalDefaultControl.parameters?.docs?.source}}},WithConditionallyRenderedControl.parameters={...WithConditionallyRenderedControl.parameters,docs:{...WithConditionallyRenderedControl.parameters?.docs,source:{originalSource:'({\n  resetAll: resetAllProp,\n  panelId,\n  ...props\n}) => {\n  const [attributes, setAttributes] = useState<{\n    height?: string;\n    scale?: React.ReactText;\n  }>({});\n  const {\n    height,\n    scale\n  } = attributes;\n  const resetAll: typeof resetAllProp = (resetFilters = []) => {\n    let newAttributes: typeof attributes = {};\n    resetFilters.forEach(resetFilter => {\n      newAttributes = {\n        ...newAttributes,\n        ...resetFilter(newAttributes)\n      };\n    });\n    setAttributes(newAttributes);\n    resetAllProp(resetFilters);\n  };\n  const updateAttribute = (name: string, value?: any) => {\n    setAttributes({\n      ...attributes,\n      [name]: value\n    });\n  };\n  return <SlotFillProvider>\n            <ToolsPanelItems>\n                <SingleColumnItem hasValue={() => !!height} label="Injected Height" onDeselect={() => {\n        updateAttribute(\'scale\', undefined);\n        updateAttribute(\'height\', undefined);\n      }} resetAllFilter={() => ({\n        height: undefined\n      })} panelId={panelId} isShownByDefault>\n                    <UnitControl label="Injected Height" value={height} onChange={next => updateAttribute(\'height\', next)} />\n                </SingleColumnItem>\n                {!!height && <ToolsPanelItem hasValue={() => !!scale} label="Scale" onDeselect={() => updateAttribute(\'scale\', undefined)} resetAllFilter={() => ({\n        scale: undefined\n      })} panelId={panelId} isShownByDefault>\n                        <ToggleGroupControl __nextHasNoMarginBottom label="Scale" value={scale} onChange={next => updateAttribute(\'scale\', next)} isBlock>\n                            <ToggleGroupControlOption value="cover" label="Cover" />\n                            <ToggleGroupControlOption value="contain" label="Contain" />\n                            <ToggleGroupControlOption value="fill" label="Fill" />\n                        </ToggleGroupControl>\n                    </ToolsPanelItem>}\n            </ToolsPanelItems>\n            <PanelWrapperView>\n                <Panel>\n                    <ToolsPanel {...props} resetAll={resetAll} panelId={panelId}>\n                        <Slot />\n                    </ToolsPanel>\n                </Panel>\n            </PanelWrapperView>\n        </SlotFillProvider>;\n}',...WithConditionallyRenderedControl.parameters?.docs?.source}}}}}]);