"use strict";(self.webpackChunkgutenberg=self.webpackChunkgutenberg||[]).push([[5649],{"./packages/icons/build-module/library/fullscreen.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/primitives/build-module/svg/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__=(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__.t4,{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__.wA,{d:"M6 4a2 2 0 0 0-2 2v3h1.5V6a.5.5 0 0 1 .5-.5h3V4H6Zm3 14.5H6a.5.5 0 0 1-.5-.5v-3H4v3a2 2 0 0 0 2 2h3v-1.5Zm6 1.5v-1.5h3a.5.5 0 0 0 .5-.5v-3H20v3a2 2 0 0 1-2 2h-3Zm3-16a2 2 0 0 1 2 2v3h-1.5V6a.5.5 0 0 0-.5-.5h-3V4h3Z"})})},"./packages/components/src/input-control/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{ey:()=>InputControl,Ay:()=>input_control});var clsx=__webpack_require__("./node_modules/clsx/dist/clsx.mjs"),use_instance_id=__webpack_require__("./packages/compose/build-module/hooks/use-instance-id/index.js"),react=__webpack_require__("./node_modules/react/index.js"),input_base=__webpack_require__("./packages/components/src/input-control/input-base.tsx"),use_gesture_react_esm=__webpack_require__("./node_modules/@use-gesture/react/dist/use-gesture-react.esm.js");var input_control_styles=__webpack_require__("./packages/components/src/input-control/styles/input-control-styles.tsx");const initialStateReducer=state=>state,initialInputControlState={error:null,initialValue:"",isDirty:!1,isDragEnabled:!1,isDragging:!1,isPressEnterToChange:!1,value:""};var actions=__webpack_require__("./packages/components/src/input-control/reducer/actions.ts");function useInputControlStateReducer(stateReducer=initialStateReducer,initialState=initialInputControlState,onChangeHandler){const[state,dispatch]=(0,react.useReducer)(function inputControlStateReducer(composedStateReducers){return(state,action)=>{const nextState={...state};switch(action.type){case actions.W3:return nextState.value=action.payload.value,nextState.isDirty=!1,nextState._event=void 0,nextState;case actions.wX:case actions.r7:nextState.isDirty=!1;break;case actions.Qf:nextState.isDragging=!0;break;case actions.Ry:nextState.isDragging=!1;break;case actions.PL:nextState.error=null,nextState.value=action.payload.value,state.isPressEnterToChange&&(nextState.isDirty=!0);break;case actions.cJ:nextState.value=action.payload.value,nextState.isDirty=!1;break;case actions.Ut:nextState.error=null,nextState.isDirty=!1,nextState.value=action.payload.value||state.initialValue;break;case actions.uY:nextState.error=action.payload.error}return nextState._event=action.payload.event,composedStateReducers(nextState,action)}}(stateReducer),function mergeInitialState(initialState=initialInputControlState){const{value}=initialState;return{...initialInputControlState,...initialState,initialValue:value}}(initialState)),createChangeEvent=type=>(nextValue,event)=>{dispatch({type,payload:{value:nextValue,event}})},createKeyEvent=type=>event=>{dispatch({type,payload:{event}})},createDragEvent=type=>payload=>{dispatch({type,payload})},change=createChangeEvent(actions.PL),reset=createChangeEvent(actions.Ut),commit=createChangeEvent(actions.cJ),dragStart=createDragEvent(actions.Qf),drag=createDragEvent(actions.j),dragEnd=createDragEvent(actions.Ry),pressUp=createKeyEvent(actions.wX),pressDown=createKeyEvent(actions.r7),pressEnter=createKeyEvent(actions.bR),currentStateRef=(0,react.useRef)(state),refPropsRef=(0,react.useRef)({value:initialState.value,onChangeHandler});return(0,react.useLayoutEffect)((()=>{currentStateRef.current=state,refPropsRef.current={value:initialState.value,onChangeHandler}})),(0,react.useLayoutEffect)((()=>{var _state$value;void 0===currentStateRef.current._event||state.value===refPropsRef.current.value||state.isDirty||refPropsRef.current.onChangeHandler(null!==(_state$value=state.value)&&void 0!==_state$value?_state$value:"",{event:currentStateRef.current._event})}),[state.value,state.isDirty]),(0,react.useLayoutEffect)((()=>{var _initialState$value;initialState.value===currentStateRef.current.value||currentStateRef.current.isDirty||dispatch({type:actions.W3,payload:{value:null!==(_initialState$value=initialState.value)&&void 0!==_initialState$value?_initialState$value:""}})}),[initialState.value]),{change,commit,dispatch,drag,dragEnd,dragStart,invalidate:(error,event)=>dispatch({type:actions.uY,payload:{error,event}}),pressDown,pressEnter,pressUp,reset,state}}var with_ignore_ime_events=__webpack_require__("./packages/components/src/utils/with-ignore-ime-events.ts"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const noop=()=>{};function InputField({disabled=!1,dragDirection="n",dragThreshold=10,id,isDragEnabled=!1,isPressEnterToChange=!1,onBlur=noop,onChange=noop,onDrag=noop,onDragEnd=noop,onDragStart=noop,onKeyDown=noop,onValidate=noop,size="default",stateReducer=state=>state,value:valueProp,type,...props},ref){const{state,change,commit,drag,dragEnd,dragStart,invalidate,pressDown,pressEnter,pressUp,reset}=useInputControlStateReducer(stateReducer,{isDragEnabled,value:valueProp,isPressEnterToChange},onChange),{value,isDragging,isDirty}=state,wasDirtyOnBlur=(0,react.useRef)(!1),dragCursor=function useDragCursor(isDragging,dragDirection){const dragCursor=function getDragCursor(dragDirection){let dragCursor="ns-resize";switch(dragDirection){case"n":case"s":dragCursor="ns-resize";break;case"e":case"w":dragCursor="ew-resize"}return dragCursor}(dragDirection);return(0,react.useEffect)((()=>{document.documentElement.style.cursor=isDragging?dragCursor:null}),[isDragging,dragCursor]),dragCursor}(isDragging,dragDirection),handleOnCommit=event=>{const nextValue=event.currentTarget.value;try{onValidate(nextValue),commit(nextValue,event)}catch(err){invalidate(err,event)}},dragGestureProps=(0,use_gesture_react_esm.useDrag)((dragProps=>{const{distance,dragging,event,target}=dragProps;if(dragProps.event={...dragProps.event,target},distance){if(event.stopPropagation(),!dragging)return onDragEnd(dragProps),void dragEnd(dragProps);onDrag(dragProps),drag(dragProps),isDragging||(onDragStart(dragProps),dragStart(dragProps))}}),{axis:"e"===dragDirection||"w"===dragDirection?"x":"y",threshold:dragThreshold,enabled:isDragEnabled,pointer:{capture:!1}}),dragProps=isDragEnabled?dragGestureProps():{};let handleOnMouseDown;return"number"===type&&(handleOnMouseDown=event=>{props.onMouseDown?.(event),event.currentTarget!==event.currentTarget.ownerDocument.activeElement&&event.currentTarget.focus()}),(0,jsx_runtime.jsx)(input_control_styles.pd,{...props,...dragProps,className:"components-input-control__input",disabled,dragCursor,isDragging,id,onBlur:event=>{onBlur(event),!isDirty&&event.target.validity.valid||(wasDirtyOnBlur.current=!0,handleOnCommit(event))},onChange:event=>{const nextValue=event.target.value;change(nextValue,event)},onKeyDown:(0,with_ignore_ime_events.n)((event=>{const{key}=event;switch(onKeyDown(event),key){case"ArrowUp":pressUp(event);break;case"ArrowDown":pressDown(event);break;case"Enter":pressEnter(event),isPressEnterToChange&&(event.preventDefault(),handleOnCommit(event));break;case"Escape":isPressEnterToChange&&isDirty&&(event.preventDefault(),reset(valueProp,event))}})),onMouseDown:handleOnMouseDown,ref,inputSize:size,value:null!=value?value:"",type})}InputField.displayName="InputField";const input_field=(0,react.forwardRef)(InputField);try{inputfield.displayName="inputfield",inputfield.__docgenInfo={description:"",displayName:"inputfield",props:{dragDirection:{defaultValue:{value:"'n'"},description:"Determines the drag axis.",name:"dragDirection",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"n"'},{value:'"e"'},{value:'"w"'}]}},dragThreshold:{defaultValue:{value:"10"},description:"If `isDragEnabled` is true, this controls the amount of `px` to have been dragged before\nthe drag gesture is actually triggered.",name:"dragThreshold",required:!1,type:{name:"number"}},isDragEnabled:{defaultValue:{value:"false"},description:"If true, enables mouse drag gestures.",name:"isDragEnabled",required:!1,type:{name:"boolean"}},isPressEnterToChange:{defaultValue:{value:"false"},description:"If true, the `ENTER` key press is required in order to trigger an `onChange`.\nIf enabled, a change is also triggered when tabbing away (`onBlur`).",name:"isPressEnterToChange",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"A function that receives the value of the input.",name:"onChange",required:!1,type:{name:"InputChangeCallback<{}>"}},onValidate:{defaultValue:null,description:"",name:"onValidate",required:!1,type:{name:"(nextValue: string, event?: SyntheticEvent<HTMLInputElement, Event>) => void"}},paddingInlineStart:{defaultValue:null,description:"",name:"paddingInlineStart",required:!1,type:{name:"PaddingInlineStart<string | number>"}},paddingInlineEnd:{defaultValue:null,description:"",name:"paddingInlineEnd",required:!1,type:{name:"PaddingInlineEnd<string | number>"}},stateReducer:{defaultValue:null,description:"",name:"stateReducer",required:!1,type:{name:"StateReducer"}},value:{defaultValue:null,description:"The current value of the input.",name:"value",required:!1,type:{name:"string"}},onDragEnd:{defaultValue:null,description:"",name:"onDragEnd",required:!1,type:{name:'(dragProps: Omit<FullGestureState<"drag">, "event"> & { event: unknown; }) => void'}},onDragStart:{defaultValue:null,description:"",name:"onDragStart",required:!1,type:{name:'(dragProps: Omit<FullGestureState<"drag">, "event"> & { event: unknown; }) => void'}},onDrag:{defaultValue:null,description:"",name:"onDrag",required:!1,type:{name:'(dragProps: Omit<FullGestureState<"drag">, "event"> & { event: unknown; }) => void'}},type:{defaultValue:{value:"'text'"},description:"Type of the input element to render.",name:"type",required:!1,type:{name:"HTMLInputTypeAttribute"}},size:{defaultValue:{value:"'default'"},description:"Adjusts the size of the input.",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"default"'},{value:'"compact"'},{value:'"__unstable-large"'}]}},__next40pxDefaultSize:{defaultValue:{value:"false"},description:"Start opting into the larger default height that will become the default size in a future version.",name:"__next40pxDefaultSize",required:!1,type:{name:"boolean"}},__unstableInputWidth:{defaultValue:null,description:"",name:"__unstableInputWidth",required:!1,type:{name:"Width<string | number>"}},hideLabelFromVision:{defaultValue:{value:"false"},description:"If true, the label will only be visible to screen readers.",name:"hideLabelFromVision",required:!1,type:{name:"boolean"}},labelPosition:{defaultValue:{value:"'top'"},description:"The position of the label.",name:"labelPosition",required:!1,type:{name:"enum",value:[{value:'"top"'},{value:'"bottom"'},{value:'"edge"'},{value:'"side"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/input-control/input-field.tsx#inputfield"]={docgenInfo:inputfield.__docgenInfo,name:"inputfield",path:"packages/components/src/input-control/input-field.tsx#inputfield"})}catch(__react_docgen_typescript_loader_error){}var space=__webpack_require__("./packages/components/src/utils/space.ts"),base_control=__webpack_require__("./packages/components/src/base-control/index.tsx"),use_deprecated_props=__webpack_require__("./packages/components/src/utils/use-deprecated-props.ts");const input_control_noop=()=>{};function UnforwardedInputControl(props,ref){const{__next40pxDefaultSize,__unstableStateReducer:stateReducer=state=>state,__unstableInputWidth,className,disabled=!1,help,hideLabelFromVision=!1,id:idProp,isPressEnterToChange=!1,label,labelPosition="top",onChange=input_control_noop,onValidate=input_control_noop,onKeyDown=input_control_noop,prefix,size="default",style,suffix,value,...restProps}=(0,use_deprecated_props.R)(props),id=function useUniqueId(idProp){const instanceId=(0,use_instance_id.A)(InputControl);return idProp||`inspector-input-control-${instanceId}`}(idProp),classes=(0,clsx.A)("components-input-control",className),draftHookProps=function useDraft(props){const previousValueRef=(0,react.useRef)(props.value),[draft,setDraft]=(0,react.useState)({}),value=void 0!==draft.value?draft.value:props.value;return(0,react.useLayoutEffect)((()=>{const{current:previousValue}=previousValueRef;previousValueRef.current=props.value,void 0===draft.value||draft.isStale?draft.isStale&&props.value!==previousValue&&setDraft({}):setDraft({...draft,isStale:!0})}),[props.value,draft]),{value,onBlur:event=>{setDraft({}),props.onBlur?.(event)},onChange:(nextValue,extra)=>{setDraft((current=>Object.assign(current,{value:nextValue,isStale:!1}))),props.onChange(nextValue,extra)}}}({value,onBlur:restProps.onBlur,onChange}),helpProp=help?{"aria-describedby":`${id}__help`}:{};return(0,jsx_runtime.jsx)(base_control.Ay,{className:classes,help,id,__nextHasNoMarginBottom:!0,children:(0,jsx_runtime.jsx)(input_base.A,{__next40pxDefaultSize,__unstableInputWidth,disabled,gap:3,hideLabelFromVision,id,justify:"left",label,labelPosition,prefix,size,style,suffix,children:(0,jsx_runtime.jsx)(input_field,{...restProps,...helpProp,__next40pxDefaultSize,className:"components-input-control__input",disabled,id,isPressEnterToChange,onKeyDown,onValidate,paddingInlineStart:prefix?(0,space.x)(1):void 0,paddingInlineEnd:suffix?(0,space.x)(1):void 0,ref,size,stateReducer,...draftHookProps})})})}UnforwardedInputControl.displayName="UnforwardedInputControl";const InputControl=(0,react.forwardRef)(UnforwardedInputControl),input_control=InputControl;try{UnforwardedInputControl.displayName="UnforwardedInputControl",UnforwardedInputControl.__docgenInfo={description:"",displayName:"UnforwardedInputControl",props:{__unstableStateReducer:{defaultValue:null,description:"",name:"__unstableStateReducer",required:!1,type:{name:"StateReducer"}},label:{defaultValue:null,description:"If this property is added, a label will be generated using label property as the content.",name:"label",required:!1,type:{name:"ReactNode"}},prefix:{defaultValue:null,description:"Renders an element on the left side of the input.\n\nBy default, the prefix is aligned with the edge of the input border, with no padding.\nIf you want to apply standard padding in accordance with the size variant, wrap the element in\nthe provided `<InputControlPrefixWrapper>` component.\n@example import {\n  __experimentalInputControl as InputControl,\n  __experimentalInputControlPrefixWrapper as InputControlPrefixWrapper,\n} from '@wordpress/components';\n\n<InputControl\n  prefix={<InputControlPrefixWrapper>@</InputControlPrefixWrapper>}\n/>",name:"prefix",required:!1,type:{name:"ReactNode"}},disabled:{defaultValue:{value:"false"},description:"If true, the `input` will be disabled.",name:"disabled",required:!1,type:{name:"boolean"}},size:{defaultValue:{value:"'default'"},description:"Adjusts the size of the input.",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"default"'},{value:'"compact"'},{value:'"__unstable-large"'}]}},suffix:{defaultValue:null,description:"Renders an element on the right side of the input.\n\nBy default, the suffix is aligned with the edge of the input border, with no padding.\nIf you want to apply standard padding in accordance with the size variant, wrap the element in\nthe provided `<InputControlSuffixWrapper>` component.\n@example import {\n  __experimentalInputControl as InputControl,\n  __experimentalInputControlSuffixWrapper as InputControlSuffixWrapper,\n} from '@wordpress/components';\n\n<InputControl\n  suffix={<InputControlSuffixWrapper>%</InputControlSuffixWrapper>}\n/>",name:"suffix",required:!1,type:{name:"ReactNode"}},__next36pxDefaultSize:{defaultValue:{value:"false"},description:"Deprecated. Use `__next40pxDefaultSize` instead.\n@deprecated\n@ignore",name:"__next36pxDefaultSize",required:!1,type:{name:"boolean"}},__next40pxDefaultSize:{defaultValue:{value:"false"},description:"Start opting into the larger default height that will become the default size in a future version.",name:"__next40pxDefaultSize",required:!1,type:{name:"boolean"}},__unstableInputWidth:{defaultValue:null,description:"",name:"__unstableInputWidth",required:!1,type:{name:"Width<string | number>"}},hideLabelFromVision:{defaultValue:{value:"false"},description:"If true, the label will only be visible to screen readers.",name:"hideLabelFromVision",required:!1,type:{name:"boolean"}},labelPosition:{defaultValue:{value:"'top'"},description:"The position of the label.",name:"labelPosition",required:!1,type:{name:"enum",value:[{value:'"top"'},{value:'"bottom"'},{value:'"edge"'},{value:'"side"'}]}},help:{defaultValue:null,description:"Additional description for the control.\n\nOnly use for meaningful description or instructions for the control. An element containing the description will be programmatically associated to the BaseControl by the means of an `aria-describedby` attribute.",name:"help",required:!1,type:{name:"ReactNode"}},type:{defaultValue:{value:"'text'"},description:"Type of the input element to render.",name:"type",required:!1,type:{name:"HTMLInputTypeAttribute"}},onChange:{defaultValue:null,description:"A function that receives the value of the input.",name:"onChange",required:!1,type:{name:"InputChangeCallback<{}>"}},onDrag:{defaultValue:null,description:"",name:"onDrag",required:!1,type:{name:'(dragProps: Omit<FullGestureState<"drag">, "event"> & { event: unknown; }) => void'}},onDragEnd:{defaultValue:null,description:"",name:"onDragEnd",required:!1,type:{name:'(dragProps: Omit<FullGestureState<"drag">, "event"> & { event: unknown; }) => void'}},onDragStart:{defaultValue:null,description:"",name:"onDragStart",required:!1,type:{name:'(dragProps: Omit<FullGestureState<"drag">, "event"> & { event: unknown; }) => void'}},value:{defaultValue:null,description:"The current value of the input.",name:"value",required:!1,type:{name:"string"}},isDragEnabled:{defaultValue:{value:"false"},description:"If true, enables mouse drag gestures.",name:"isDragEnabled",required:!1,type:{name:"boolean"}},dragDirection:{defaultValue:{value:"'n'"},description:"Determines the drag axis.",name:"dragDirection",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"n"'},{value:'"e"'},{value:'"w"'}]}},dragThreshold:{defaultValue:{value:"10"},description:"If `isDragEnabled` is true, this controls the amount of `px` to have been dragged before\nthe drag gesture is actually triggered.",name:"dragThreshold",required:!1,type:{name:"number"}},isPressEnterToChange:{defaultValue:{value:"false"},description:"If true, the `ENTER` key press is required in order to trigger an `onChange`.\nIf enabled, a change is also triggered when tabbing away (`onBlur`).",name:"isPressEnterToChange",required:!1,type:{name:"boolean"}},onValidate:{defaultValue:null,description:"",name:"onValidate",required:!1,type:{name:"(nextValue: string, event?: SyntheticEvent<HTMLInputElement, Event>) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/input-control/index.tsx#UnforwardedInputControl"]={docgenInfo:UnforwardedInputControl.__docgenInfo,name:"UnforwardedInputControl",path:"packages/components/src/input-control/index.tsx#UnforwardedInputControl"})}catch(__react_docgen_typescript_loader_error){}try{InputControl.displayName="InputControl",InputControl.__docgenInfo={description:"InputControl components let users enter and edit text. This is an experimental component\nintended to (in time) merge with or replace `TextControl`.\n\n```jsx\nimport { __experimentalInputControl as InputControl } from '@wordpress/components';\nimport { useState } from 'react';\n\nconst Example = () => {\n  const [ value, setValue ] = useState( '' );\n\n  return (\n \t<InputControl\n \t\tvalue={ value }\n \t\tonChange={ ( nextValue ) => setValue( nextValue ?? '' ) }\n \t/>\n  );\n};\n```",displayName:"InputControl",props:{__unstableStateReducer:{defaultValue:null,description:"",name:"__unstableStateReducer",required:!1,type:{name:"StateReducer"}},label:{defaultValue:null,description:"If this property is added, a label will be generated using label property as the content.",name:"label",required:!1,type:{name:"ReactNode"}},prefix:{defaultValue:null,description:"Renders an element on the left side of the input.\n\nBy default, the prefix is aligned with the edge of the input border, with no padding.\nIf you want to apply standard padding in accordance with the size variant, wrap the element in\nthe provided `<InputControlPrefixWrapper>` component.\n@example import {\n  __experimentalInputControl as InputControl,\n  __experimentalInputControlPrefixWrapper as InputControlPrefixWrapper,\n} from '@wordpress/components';\n\n<InputControl\n  prefix={<InputControlPrefixWrapper>@</InputControlPrefixWrapper>}\n/>",name:"prefix",required:!1,type:{name:"ReactNode"}},disabled:{defaultValue:{value:"false"},description:"If true, the `input` will be disabled.",name:"disabled",required:!1,type:{name:"boolean"}},size:{defaultValue:{value:"'default'"},description:"Adjusts the size of the input.",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"default"'},{value:'"compact"'},{value:'"__unstable-large"'}]}},suffix:{defaultValue:null,description:"Renders an element on the right side of the input.\n\nBy default, the suffix is aligned with the edge of the input border, with no padding.\nIf you want to apply standard padding in accordance with the size variant, wrap the element in\nthe provided `<InputControlSuffixWrapper>` component.\n@example import {\n  __experimentalInputControl as InputControl,\n  __experimentalInputControlSuffixWrapper as InputControlSuffixWrapper,\n} from '@wordpress/components';\n\n<InputControl\n  suffix={<InputControlSuffixWrapper>%</InputControlSuffixWrapper>}\n/>",name:"suffix",required:!1,type:{name:"ReactNode"}},__next36pxDefaultSize:{defaultValue:{value:"false"},description:"Deprecated. Use `__next40pxDefaultSize` instead.\n@deprecated\n@ignore",name:"__next36pxDefaultSize",required:!1,type:{name:"boolean"}},__next40pxDefaultSize:{defaultValue:{value:"false"},description:"Start opting into the larger default height that will become the default size in a future version.",name:"__next40pxDefaultSize",required:!1,type:{name:"boolean"}},__unstableInputWidth:{defaultValue:null,description:"",name:"__unstableInputWidth",required:!1,type:{name:"Width<string | number>"}},hideLabelFromVision:{defaultValue:{value:"false"},description:"If true, the label will only be visible to screen readers.",name:"hideLabelFromVision",required:!1,type:{name:"boolean"}},labelPosition:{defaultValue:{value:"'top'"},description:"The position of the label.",name:"labelPosition",required:!1,type:{name:"enum",value:[{value:'"top"'},{value:'"bottom"'},{value:'"edge"'},{value:'"side"'}]}},help:{defaultValue:null,description:"Additional description for the control.\n\nOnly use for meaningful description or instructions for the control. An element containing the description will be programmatically associated to the BaseControl by the means of an `aria-describedby` attribute.",name:"help",required:!1,type:{name:"ReactNode"}},type:{defaultValue:{value:"'text'"},description:"Type of the input element to render.",name:"type",required:!1,type:{name:"HTMLInputTypeAttribute"}},onChange:{defaultValue:null,description:"A function that receives the value of the input.",name:"onChange",required:!1,type:{name:"InputChangeCallback<{}>"}},onDrag:{defaultValue:null,description:"",name:"onDrag",required:!1,type:{name:'(dragProps: Omit<FullGestureState<"drag">, "event"> & { event: unknown; }) => void'}},onDragEnd:{defaultValue:null,description:"",name:"onDragEnd",required:!1,type:{name:'(dragProps: Omit<FullGestureState<"drag">, "event"> & { event: unknown; }) => void'}},onDragStart:{defaultValue:null,description:"",name:"onDragStart",required:!1,type:{name:'(dragProps: Omit<FullGestureState<"drag">, "event"> & { event: unknown; }) => void'}},value:{defaultValue:null,description:"The current value of the input.",name:"value",required:!1,type:{name:"string"}},isDragEnabled:{defaultValue:{value:"false"},description:"If true, enables mouse drag gestures.",name:"isDragEnabled",required:!1,type:{name:"boolean"}},dragDirection:{defaultValue:{value:"'n'"},description:"Determines the drag axis.",name:"dragDirection",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"n"'},{value:'"e"'},{value:'"w"'}]}},dragThreshold:{defaultValue:{value:"10"},description:"If `isDragEnabled` is true, this controls the amount of `px` to have been dragged before\nthe drag gesture is actually triggered.",name:"dragThreshold",required:!1,type:{name:"number"}},isPressEnterToChange:{defaultValue:{value:"false"},description:"If true, the `ENTER` key press is required in order to trigger an `onChange`.\nIf enabled, a change is also triggered when tabbing away (`onBlur`).",name:"isPressEnterToChange",required:!1,type:{name:"boolean"}},onValidate:{defaultValue:null,description:"",name:"onValidate",required:!1,type:{name:"(nextValue: string, event?: SyntheticEvent<HTMLInputElement, Event>) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/input-control/index.tsx#InputControl"]={docgenInfo:InputControl.__docgenInfo,name:"InputControl",path:"packages/components/src/input-control/index.tsx#InputControl"})}catch(__react_docgen_typescript_loader_error){}try{inputcontrol.displayName="inputcontrol",inputcontrol.__docgenInfo={description:"InputControl components let users enter and edit text. This is an experimental component\nintended to (in time) merge with or replace `TextControl`.\n\n```jsx\nimport { __experimentalInputControl as InputControl } from '@wordpress/components';\nimport { useState } from 'react';\n\nconst Example = () => {\n  const [ value, setValue ] = useState( '' );\n\n  return (\n \t<InputControl\n \t\tvalue={ value }\n \t\tonChange={ ( nextValue ) => setValue( nextValue ?? '' ) }\n \t/>\n  );\n};\n```",displayName:"inputcontrol",props:{__unstableStateReducer:{defaultValue:null,description:"",name:"__unstableStateReducer",required:!1,type:{name:"StateReducer"}},label:{defaultValue:null,description:"If this property is added, a label will be generated using label property as the content.",name:"label",required:!1,type:{name:"ReactNode"}},prefix:{defaultValue:null,description:"Renders an element on the left side of the input.\n\nBy default, the prefix is aligned with the edge of the input border, with no padding.\nIf you want to apply standard padding in accordance with the size variant, wrap the element in\nthe provided `<InputControlPrefixWrapper>` component.\n@example import {\n  __experimentalInputControl as InputControl,\n  __experimentalInputControlPrefixWrapper as InputControlPrefixWrapper,\n} from '@wordpress/components';\n\n<InputControl\n  prefix={<InputControlPrefixWrapper>@</InputControlPrefixWrapper>}\n/>",name:"prefix",required:!1,type:{name:"ReactNode"}},disabled:{defaultValue:{value:"false"},description:"If true, the `input` will be disabled.",name:"disabled",required:!1,type:{name:"boolean"}},size:{defaultValue:{value:"'default'"},description:"Adjusts the size of the input.",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"default"'},{value:'"compact"'},{value:'"__unstable-large"'}]}},suffix:{defaultValue:null,description:"Renders an element on the right side of the input.\n\nBy default, the suffix is aligned with the edge of the input border, with no padding.\nIf you want to apply standard padding in accordance with the size variant, wrap the element in\nthe provided `<InputControlSuffixWrapper>` component.\n@example import {\n  __experimentalInputControl as InputControl,\n  __experimentalInputControlSuffixWrapper as InputControlSuffixWrapper,\n} from '@wordpress/components';\n\n<InputControl\n  suffix={<InputControlSuffixWrapper>%</InputControlSuffixWrapper>}\n/>",name:"suffix",required:!1,type:{name:"ReactNode"}},__next36pxDefaultSize:{defaultValue:{value:"false"},description:"Deprecated. Use `__next40pxDefaultSize` instead.\n@deprecated\n@ignore",name:"__next36pxDefaultSize",required:!1,type:{name:"boolean"}},__next40pxDefaultSize:{defaultValue:{value:"false"},description:"Start opting into the larger default height that will become the default size in a future version.",name:"__next40pxDefaultSize",required:!1,type:{name:"boolean"}},__unstableInputWidth:{defaultValue:null,description:"",name:"__unstableInputWidth",required:!1,type:{name:"Width<string | number>"}},hideLabelFromVision:{defaultValue:{value:"false"},description:"If true, the label will only be visible to screen readers.",name:"hideLabelFromVision",required:!1,type:{name:"boolean"}},labelPosition:{defaultValue:{value:"'top'"},description:"The position of the label.",name:"labelPosition",required:!1,type:{name:"enum",value:[{value:'"top"'},{value:'"bottom"'},{value:'"edge"'},{value:'"side"'}]}},help:{defaultValue:null,description:"Additional description for the control.\n\nOnly use for meaningful description or instructions for the control. An element containing the description will be programmatically associated to the BaseControl by the means of an `aria-describedby` attribute.",name:"help",required:!1,type:{name:"ReactNode"}},type:{defaultValue:{value:"'text'"},description:"Type of the input element to render.",name:"type",required:!1,type:{name:"HTMLInputTypeAttribute"}},onChange:{defaultValue:null,description:"A function that receives the value of the input.",name:"onChange",required:!1,type:{name:"InputChangeCallback<{}>"}},onDrag:{defaultValue:null,description:"",name:"onDrag",required:!1,type:{name:'(dragProps: Omit<FullGestureState<"drag">, "event"> & { event: unknown; }) => void'}},onDragEnd:{defaultValue:null,description:"",name:"onDragEnd",required:!1,type:{name:'(dragProps: Omit<FullGestureState<"drag">, "event"> & { event: unknown; }) => void'}},onDragStart:{defaultValue:null,description:"",name:"onDragStart",required:!1,type:{name:'(dragProps: Omit<FullGestureState<"drag">, "event"> & { event: unknown; }) => void'}},value:{defaultValue:null,description:"The current value of the input.",name:"value",required:!1,type:{name:"string"}},isDragEnabled:{defaultValue:{value:"false"},description:"If true, enables mouse drag gestures.",name:"isDragEnabled",required:!1,type:{name:"boolean"}},dragDirection:{defaultValue:{value:"'n'"},description:"Determines the drag axis.",name:"dragDirection",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"n"'},{value:'"e"'},{value:'"w"'}]}},dragThreshold:{defaultValue:{value:"10"},description:"If `isDragEnabled` is true, this controls the amount of `px` to have been dragged before\nthe drag gesture is actually triggered.",name:"dragThreshold",required:!1,type:{name:"number"}},isPressEnterToChange:{defaultValue:{value:"false"},description:"If true, the `ENTER` key press is required in order to trigger an `onChange`.\nIf enabled, a change is also triggered when tabbing away (`onBlur`).",name:"isPressEnterToChange",required:!1,type:{name:"boolean"}},onValidate:{defaultValue:null,description:"",name:"onValidate",required:!1,type:{name:"(nextValue: string, event?: SyntheticEvent<HTMLInputElement, Event>) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/input-control/index.tsx#inputcontrol"]={docgenInfo:inputcontrol.__docgenInfo,name:"inputcontrol",path:"packages/components/src/input-control/index.tsx#inputcontrol"})}catch(__react_docgen_typescript_loader_error){}},"./packages/components/src/input-control/reducer/actions.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{PL:()=>CHANGE,Qf:()=>DRAG_START,Ry:()=>DRAG_END,Ut:()=>RESET,W3:()=>CONTROL,bR:()=>PRESS_ENTER,cJ:()=>COMMIT,j:()=>DRAG,r7:()=>PRESS_DOWN,uY:()=>INVALIDATE,wX:()=>PRESS_UP});const CHANGE="CHANGE",COMMIT="COMMIT",CONTROL="CONTROL",DRAG_END="DRAG_END",DRAG_START="DRAG_START",DRAG="DRAG",INVALIDATE="INVALIDATE",PRESS_DOWN="PRESS_DOWN",PRESS_ENTER="PRESS_ENTER",PRESS_UP="PRESS_UP",RESET="RESET"},"./packages/components/node_modules/uuid/dist/esm-browser/v4.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{var getRandomValues;__webpack_require__.d(__webpack_exports__,{A:()=>esm_browser_v4});var rnds8=new Uint8Array(16);function rng(){if(!getRandomValues&&!(getRandomValues="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto)))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return getRandomValues(rnds8)}const regex=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;const esm_browser_validate=function validate(uuid){return"string"==typeof uuid&&regex.test(uuid)};for(var byteToHex=[],i=0;i<256;++i)byteToHex.push((i+256).toString(16).substr(1));const esm_browser_stringify=function stringify(arr){var offset=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,uuid=(byteToHex[arr[offset+0]]+byteToHex[arr[offset+1]]+byteToHex[arr[offset+2]]+byteToHex[arr[offset+3]]+"-"+byteToHex[arr[offset+4]]+byteToHex[arr[offset+5]]+"-"+byteToHex[arr[offset+6]]+byteToHex[arr[offset+7]]+"-"+byteToHex[arr[offset+8]]+byteToHex[arr[offset+9]]+"-"+byteToHex[arr[offset+10]]+byteToHex[arr[offset+11]]+byteToHex[arr[offset+12]]+byteToHex[arr[offset+13]]+byteToHex[arr[offset+14]]+byteToHex[arr[offset+15]]).toLowerCase();if(!esm_browser_validate(uuid))throw TypeError("Stringified UUID is invalid");return uuid};const esm_browser_v4=function v4(options,buf,offset){var rnds=(options=options||{}).random||(options.rng||rng)();if(rnds[6]=15&rnds[6]|64,rnds[8]=63&rnds[8]|128,buf){offset=offset||0;for(var i=0;i<16;++i)buf[offset+i]=rnds[i];return buf}return esm_browser_stringify(rnds)}},"./packages/components/src/modal/stories/index.story.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,WithHeaderActions:()=>WithHeaderActions,WithsizeSmall:()=>WithsizeSmall,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _wordpress_element__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/index.js"),_wordpress_icons__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./packages/icons/build-module/library/fullscreen.js"),_button__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/components/src/button/index.tsx"),_input_control__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./packages/components/src/input-control/index.tsx"),___WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/components/src/modal/index.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={component:___WEBPACK_IMPORTED_MODULE_1__.A,title:"Components/Modal",argTypes:{children:{control:{type:null}},onKeyDown:{control:{type:null}},focusOnMount:{options:[!0,!1,"firstElement","firstContentElement"],control:{type:"select"}},role:{control:{type:"text"}},onRequestClose:{action:"onRequestClose"},isDismissible:{control:{type:"boolean"}}},parameters:{sourceLink:"packages/components/src/modal",badges:[],controls:{expanded:!0}}},Template=({onRequestClose,...args})=>{const[isOpen,setOpen]=(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_2__.useState)(!1),closeModal=event=>{setOpen(!1),onRequestClose(event)};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_button__WEBPACK_IMPORTED_MODULE_3__.Ay,{variant:"secondary",onClick:()=>setOpen(!0),children:"Open Modal"}),isOpen&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(___WEBPACK_IMPORTED_MODULE_1__.A,{onRequestClose:closeModal,...args,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("p",{children:"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_input_control__WEBPACK_IMPORTED_MODULE_4__.Ay,{style:{marginBottom:"20px"}}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_button__WEBPACK_IMPORTED_MODULE_3__.Ay,{variant:"secondary",onClick:closeModal,children:"Close Modal"})]})]})},Default=Template.bind({});Default.args={title:"Title"},Default.parameters={docs:{source:{code:""}}};const WithsizeSmall=Template.bind({});WithsizeSmall.args={size:"small"},WithsizeSmall.storyName="With size: small";const WithHeaderActions=Template.bind({});WithHeaderActions.args={...Default.args,headerActions:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_button__WEBPACK_IMPORTED_MODULE_3__.Ay,{icon:_wordpress_icons__WEBPACK_IMPORTED_MODULE_5__.A,label:"Fullscreen mode",size:"small"}),children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{height:"200px"}})},WithHeaderActions.parameters={...Default.parameters},Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"({\n  onRequestClose,\n  ...args\n}) => {\n  const [isOpen, setOpen] = useState(false);\n  const openModal = () => setOpen(true);\n  const closeModal: ModalProps['onRequestClose'] = event => {\n    setOpen(false);\n    onRequestClose(event);\n  };\n  return <>\n            <Button variant=\"secondary\" onClick={openModal}>\n                Open Modal\n            </Button>\n            {isOpen && <Modal onRequestClose={closeModal} {...args}>\n                    <p>\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit,\n                        sed do eiusmod tempor incididunt ut labore et magna\n                        aliqua. Ut enim ad minim veniam, quis nostrud\n                        exercitation ullamco laboris nisi ut aliquip ex ea ea\n                        commodo consequat. Duis aute irure dolor in\n                        reprehenderit in voluptate velit esse cillum dolore eu\n                        fugiat nulla pariatur. Excepteur sint occaecat cupidatat\n                        non proident, sunt in culpa qui officia deserunt mollit\n                        anim id est laborum.\n                    </p>\n\n                    <InputControl style={{\n        marginBottom: '20px'\n      }} />\n\n                    <Button variant=\"secondary\" onClick={closeModal}>\n                        Close Modal\n                    </Button>\n                </Modal>}\n        </>;\n}",...Default.parameters?.docs?.source}}},WithsizeSmall.parameters={...WithsizeSmall.parameters,docs:{...WithsizeSmall.parameters?.docs,source:{originalSource:"({\n  onRequestClose,\n  ...args\n}) => {\n  const [isOpen, setOpen] = useState(false);\n  const openModal = () => setOpen(true);\n  const closeModal: ModalProps['onRequestClose'] = event => {\n    setOpen(false);\n    onRequestClose(event);\n  };\n  return <>\n            <Button variant=\"secondary\" onClick={openModal}>\n                Open Modal\n            </Button>\n            {isOpen && <Modal onRequestClose={closeModal} {...args}>\n                    <p>\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit,\n                        sed do eiusmod tempor incididunt ut labore et magna\n                        aliqua. Ut enim ad minim veniam, quis nostrud\n                        exercitation ullamco laboris nisi ut aliquip ex ea ea\n                        commodo consequat. Duis aute irure dolor in\n                        reprehenderit in voluptate velit esse cillum dolore eu\n                        fugiat nulla pariatur. Excepteur sint occaecat cupidatat\n                        non proident, sunt in culpa qui officia deserunt mollit\n                        anim id est laborum.\n                    </p>\n\n                    <InputControl style={{\n        marginBottom: '20px'\n      }} />\n\n                    <Button variant=\"secondary\" onClick={closeModal}>\n                        Close Modal\n                    </Button>\n                </Modal>}\n        </>;\n}",...WithsizeSmall.parameters?.docs?.source}}},WithHeaderActions.parameters={...WithHeaderActions.parameters,docs:{...WithHeaderActions.parameters?.docs,source:{originalSource:"({\n  onRequestClose,\n  ...args\n}) => {\n  const [isOpen, setOpen] = useState(false);\n  const openModal = () => setOpen(true);\n  const closeModal: ModalProps['onRequestClose'] = event => {\n    setOpen(false);\n    onRequestClose(event);\n  };\n  return <>\n            <Button variant=\"secondary\" onClick={openModal}>\n                Open Modal\n            </Button>\n            {isOpen && <Modal onRequestClose={closeModal} {...args}>\n                    <p>\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit,\n                        sed do eiusmod tempor incididunt ut labore et magna\n                        aliqua. Ut enim ad minim veniam, quis nostrud\n                        exercitation ullamco laboris nisi ut aliquip ex ea ea\n                        commodo consequat. Duis aute irure dolor in\n                        reprehenderit in voluptate velit esse cillum dolore eu\n                        fugiat nulla pariatur. Excepteur sint occaecat cupidatat\n                        non proident, sunt in culpa qui officia deserunt mollit\n                        anim id est laborum.\n                    </p>\n\n                    <InputControl style={{\n        marginBottom: '20px'\n      }} />\n\n                    <Button variant=\"secondary\" onClick={closeModal}>\n                        Close Modal\n                    </Button>\n                </Modal>}\n        </>;\n}",...WithHeaderActions.parameters?.docs?.source},description:{story:"The `headerActions` prop can be used to add auxiliary actions to the header, for example a fullscreen mode toggle.",...WithHeaderActions.parameters?.docs?.description}}};try{WithHeaderActions.displayName="WithHeaderActions",WithHeaderActions.__docgenInfo={description:"The `headerActions` prop can be used to add auxiliary actions to the header, for example a fullscreen mode toggle.",displayName:"WithHeaderActions",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/modal/stories/index.story.tsx#WithHeaderActions"]={docgenInfo:WithHeaderActions.__docgenInfo,name:"WithHeaderActions",path:"packages/components/src/modal/stories/index.story.tsx#WithHeaderActions"})}catch(__react_docgen_typescript_loader_error){}}}]);