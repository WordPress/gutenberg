"use strict";(self.webpackChunkgutenberg=self.webpackChunkgutenberg||[]).push([[3944],{"./packages/icons/build-module/library/check.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/primitives/build-module/svg/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__=(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__.t4,{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_wordpress_primitives__WEBPACK_IMPORTED_MODULE_1__.wA,{d:"M16.7 7.1l-6.3 8.5-3.3-2.5-.9 1.2 4.5 3.4L17.9 8z"})})},"./packages/components/src/circular-option-picker/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Ay:()=>src_circular_option_picker});var clsx=__webpack_require__("./node_modules/clsx/dist/clsx.mjs"),use_instance_id=__webpack_require__("./packages/compose/build-module/hooks/use-instance-id/index.js"),build_module=__webpack_require__("./packages/i18n/build-module/index.js"),react=__webpack_require__("./node_modules/react/index.js");const CircularOptionPickerContext=(0,react.createContext)({});var composite=__webpack_require__("./packages/components/src/composite/index.tsx"),icon=__webpack_require__("./packages/icons/build-module/icon/index.js"),check=__webpack_require__("./packages/icons/build-module/library/check.js"),src_button=__webpack_require__("./packages/components/src/button/index.tsx"),tooltip=__webpack_require__("./packages/components/src/tooltip/index.tsx"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function UnforwardedOptionAsButton(props,forwardedRef){const{isPressed,...additionalProps}=props;return(0,jsx_runtime.jsx)(src_button.Ay,{...additionalProps,"aria-pressed":isPressed,ref:forwardedRef})}UnforwardedOptionAsButton.displayName="UnforwardedOptionAsButton";const OptionAsButton=(0,react.forwardRef)(UnforwardedOptionAsButton);function UnforwardedOptionAsOption(props,forwardedRef){const{id,isSelected,...additionalProps}=props,{setActiveId,activeId}=(0,react.useContext)(CircularOptionPickerContext);return(0,react.useEffect)((()=>{isSelected&&!activeId&&window.setTimeout((()=>setActiveId?.(id)),0)}),[isSelected,setActiveId,activeId,id]),(0,jsx_runtime.jsx)(composite.e.Item,{render:(0,jsx_runtime.jsx)(src_button.Ay,{...additionalProps,role:"option","aria-selected":!!isSelected,ref:forwardedRef}),id})}UnforwardedOptionAsOption.displayName="UnforwardedOptionAsOption";const OptionAsOption=(0,react.forwardRef)(UnforwardedOptionAsOption);function circular_option_picker_option_Option({className,isSelected,selectedIconProps={},tooltipText,...additionalProps}){const{baseId,setActiveId}=(0,react.useContext)(CircularOptionPickerContext),commonProps={id:(0,use_instance_id.A)(circular_option_picker_option_Option,baseId||"components-circular-option-picker__option"),className:"components-circular-option-picker__option",...additionalProps},optionControl=void 0!==setActiveId?(0,jsx_runtime.jsx)(OptionAsOption,{...commonProps,isSelected}):(0,jsx_runtime.jsx)(OptionAsButton,{...commonProps,isPressed:isSelected});return(0,jsx_runtime.jsxs)("div",{className:(0,clsx.A)(className,"components-circular-option-picker__option-wrapper"),children:[tooltipText?(0,jsx_runtime.jsx)(tooltip.Ay,{text:tooltipText,children:optionControl}):optionControl,isSelected&&(0,jsx_runtime.jsx)(icon.A,{icon:check.A,...selectedIconProps})]})}circular_option_picker_option_Option.displayName="Option";try{circular_option_picker_option_Option.displayName="Option",circular_option_picker_option_Option.__docgenInfo={description:"",displayName:"Option",props:{label:{defaultValue:null,description:"Sets the `aria-label` of the component, if none is provided.\nSets the Tooltip content if `showTooltip` is provided.",name:"label",required:!1,type:{name:"string"}},text:{defaultValue:null,description:"If provided, displays the given text inside the button. If the button contains children elements, the text is displayed before them.",name:"text",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"The button's children.",name:"children",required:!1,type:{name:"ReactNode"}},disabled:{defaultValue:null,description:"Whether the button is disabled. If `true`, this will force a `button` element\nto be rendered, even when an `href` is given.\n\nIn most cases, it is recommended to also set the `accessibleWhenDisabled` prop to `true`.",name:"disabled",required:!1,type:{name:"boolean"}},size:{defaultValue:{value:"'default'"},description:"The size of the button.\n\n- `'default'`: For normal text-label buttons, unless it is a toggle button.\n- `'compact'`: For toggle buttons, icon buttons, and buttons when used in context of either.\n- `'small'`: For icon buttons associated with more advanced or auxiliary features.\n\nIf the deprecated `isSmall` prop is also defined, this prop will take precedence.",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"default"'},{value:'"compact"'}]}},description:{defaultValue:null,description:"A visually hidden accessible description for the button.",name:"description",required:!1,type:{name:"string"}},__next40pxDefaultSize:{defaultValue:{value:"false"},description:"Start opting into the larger default height that will become the\ndefault size in a future version.",name:"__next40pxDefaultSize",required:!1,type:{name:"boolean"}},variant:{defaultValue:null,description:"Specifies the button's style.\nThe accepted values are:\n'primary' (the primary button styles)\n'secondary' (the default button styles)\n'tertiary' (the text-based button styles)\n'link' (the link button styles)",name:"variant",required:!1,type:{name:"enum",value:[{value:'"link"'},{value:'"primary"'},{value:'"secondary"'},{value:'"tertiary"'}]}},shortcut:{defaultValue:null,description:"If provided with `showTooltip`, appends the Shortcut label to the tooltip content.\nIf an object is provided, it should contain `display` and `ariaLabel` keys.",name:"shortcut",required:!1,type:{name:"string | { display: string; ariaLabel: string; }"}},icon:{defaultValue:null,description:"If provided, renders an Icon component inside the button.",name:"icon",required:!1,type:{name:"IconType"}},isDestructive:{defaultValue:null,description:"Renders a red text-based button style to indicate destructive behavior.",name:"isDestructive",required:!1,type:{name:"boolean"}},accessibleWhenDisabled:{defaultValue:{value:"false"},description:"Whether to keep the button focusable when disabled.\n\nIn most cases, it is recommended to set this to `true`. Disabling a control without maintaining focusability\ncan cause accessibility issues, by hiding their presence from screen reader users,\nor by preventing focus from returning to a trigger element.\n\nLearn more about the [focusability of disabled controls](https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/#focusabilityofdisabledcontrols)\nin the WAI-ARIA Authoring Practices Guide.",name:"accessibleWhenDisabled",required:!1,type:{name:"boolean"}},showTooltip:{defaultValue:null,description:"If provided, renders a Tooltip component for the button.",name:"showTooltip",required:!1,type:{name:"boolean"}},iconPosition:{defaultValue:{value:"'left'"},description:"If provided with `icon`, sets the position of icon relative to the `text`.",name:"iconPosition",required:!1,type:{name:"enum",value:[{value:'"left"'},{value:'"right"'}]}},iconSize:{defaultValue:null,description:"If provided with `icon`, sets the icon size.\nPlease refer to the Icon component for more details regarding\nthe default value of its `size` prop.",name:"iconSize",required:!1,type:{name:"number"}},isBusy:{defaultValue:null,description:"Indicates activity while a action is being performed.",name:"isBusy",required:!1,type:{name:"boolean"}},tooltipPosition:{defaultValue:null,description:"If provided with `showTooltip`, sets the position of the tooltip.\nPlease refer to the Tooltip component for more details regarding the defaults.",name:"tooltipPosition",required:!1,type:{name:"enum",value:[{value:'"middle"'},{value:'"top"'},{value:'"bottom"'},{value:'"middle center"'},{value:'"middle left"'},{value:'"middle right"'},{value:'"top center"'},{value:'"top left"'},{value:'"top right"'},{value:'"bottom center"'},{value:'"bottom left"'},{value:'"bottom right"'},{value:'"middle center left"'},{value:'"middle center right"'},{value:'"middle center top"'},{value:'"middle center bottom"'},{value:'"middle left left"'},{value:'"middle left right"'},{value:'"middle left top"'},{value:'"middle left bottom"'},{value:'"middle right left"'},{value:'"middle right right"'},{value:'"middle right top"'},{value:'"middle right bottom"'},{value:'"top center left"'},{value:'"top center right"'},{value:'"top center top"'},{value:'"top center bottom"'},{value:'"top left left"'},{value:'"top left right"'},{value:'"top left top"'},{value:'"top left bottom"'},{value:'"top right left"'},{value:'"top right right"'},{value:'"top right top"'},{value:'"top right bottom"'},{value:'"bottom center left"'},{value:'"bottom center right"'},{value:'"bottom center top"'},{value:'"bottom center bottom"'},{value:'"bottom left left"'},{value:'"bottom left right"'},{value:'"bottom left top"'},{value:'"bottom left bottom"'},{value:'"bottom right left"'},{value:'"bottom right right"'},{value:'"bottom right top"'},{value:'"bottom right bottom"'}]}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},tooltipText:{defaultValue:null,description:"",name:"tooltipText",required:!1,type:{name:"string"}},isSelected:{defaultValue:null,description:"",name:"isSelected",required:!1,type:{name:"boolean"}},selectedIconProps:{defaultValue:{value:"{}"},description:"",name:"selectedIconProps",required:!1,type:{name:'Omit<{ icon: Element; size?: number; } & { isPressed?: boolean; } & Omit<SVGProps<SVGSVGElement>, "ref"> & RefAttributes<HTMLElement>, "size" | "icon">'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/circular-option-picker/circular-option-picker-option.tsx#Option"]={docgenInfo:circular_option_picker_option_Option.__docgenInfo,name:"Option",path:"packages/components/src/circular-option-picker/circular-option-picker-option.tsx#Option"})}catch(__react_docgen_typescript_loader_error){}function circular_option_picker_option_group_OptionGroup({className,options,...additionalProps}){const role="aria-label"in additionalProps||"aria-labelledby"in additionalProps?"group":void 0;return(0,jsx_runtime.jsx)("div",{...additionalProps,role,className:(0,clsx.A)("components-circular-option-picker__option-group","components-circular-option-picker__swatches",className),children:options})}circular_option_picker_option_group_OptionGroup.displayName="OptionGroup";try{circular_option_picker_option_group_OptionGroup.displayName="OptionGroup",circular_option_picker_option_group_OptionGroup.__docgenInfo={description:"",displayName:"OptionGroup",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},options:{defaultValue:null,description:"",name:"options",required:!0,type:{name:"ReactNode"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/circular-option-picker/circular-option-picker-option-group.tsx#OptionGroup"]={docgenInfo:circular_option_picker_option_group_OptionGroup.__docgenInfo,name:"OptionGroup",path:"packages/components/src/circular-option-picker/circular-option-picker-option-group.tsx#OptionGroup"})}catch(__react_docgen_typescript_loader_error){}var dropdown=__webpack_require__("./packages/components/src/dropdown/index.tsx");function circular_option_picker_actions_DropdownLinkAction({buttonProps,className,dropdownProps,linkText}){return(0,jsx_runtime.jsx)(dropdown.A,{className:(0,clsx.A)("components-circular-option-picker__dropdown-link-action",className),renderToggle:({isOpen,onToggle})=>(0,jsx_runtime.jsx)(src_button.Ay,{"aria-expanded":isOpen,"aria-haspopup":"true",onClick:onToggle,variant:"link",...buttonProps,children:linkText}),...dropdownProps})}function circular_option_picker_actions_ButtonAction({className,children,...additionalProps}){return(0,jsx_runtime.jsx)(src_button.Ay,{className:(0,clsx.A)("components-circular-option-picker__clear",className),variant:"tertiary",...additionalProps,children})}circular_option_picker_actions_DropdownLinkAction.displayName="DropdownLinkAction",circular_option_picker_actions_ButtonAction.displayName="ButtonAction";try{circular_option_picker_actions_DropdownLinkAction.displayName="DropdownLinkAction",circular_option_picker_actions_DropdownLinkAction.__docgenInfo={description:"",displayName:"DropdownLinkAction",props:{buttonProps:{defaultValue:null,description:"",name:"buttonProps",required:!1,type:{name:'Omit<WordPressComponentProps<ButtonAsButtonProps, "button", false>, "children">'}},linkText:{defaultValue:null,description:"",name:"linkText",required:!0,type:{name:"string"}},dropdownProps:{defaultValue:null,description:"",name:"dropdownProps",required:!0,type:{name:'Omit<DropdownProps, "className" | "renderToggle">'}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/circular-option-picker/circular-option-picker-actions.tsx#DropdownLinkAction"]={docgenInfo:circular_option_picker_actions_DropdownLinkAction.__docgenInfo,name:"DropdownLinkAction",path:"packages/components/src/circular-option-picker/circular-option-picker-actions.tsx#DropdownLinkAction"})}catch(__react_docgen_typescript_loader_error){}try{circular_option_picker_actions_ButtonAction.displayName="ButtonAction",circular_option_picker_actions_ButtonAction.__docgenInfo={description:"",displayName:"ButtonAction",props:{__next40pxDefaultSize:{defaultValue:{value:"false"},description:"Start opting into the larger default height that will become the\ndefault size in a future version.",name:"__next40pxDefaultSize",required:!1,type:{name:"boolean"}},accessibleWhenDisabled:{defaultValue:{value:"false"},description:"Whether to keep the button focusable when disabled.\n\nIn most cases, it is recommended to set this to `true`. Disabling a control without maintaining focusability\ncan cause accessibility issues, by hiding their presence from screen reader users,\nor by preventing focus from returning to a trigger element.\n\nLearn more about the [focusability of disabled controls](https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/#focusabilityofdisabledcontrols)\nin the WAI-ARIA Authoring Practices Guide.",name:"accessibleWhenDisabled",required:!1,type:{name:"boolean"}},children:{defaultValue:null,description:"The button's children.",name:"children",required:!1,type:{name:"ReactNode"}},description:{defaultValue:null,description:"A visually hidden accessible description for the button.",name:"description",required:!1,type:{name:"string"}},icon:{defaultValue:null,description:"If provided, renders an Icon component inside the button.",name:"icon",required:!1,type:{name:"IconType"}},iconPosition:{defaultValue:{value:"'left'"},description:"If provided with `icon`, sets the position of icon relative to the `text`.",name:"iconPosition",required:!1,type:{name:"enum",value:[{value:'"left"'},{value:'"right"'}]}},iconSize:{defaultValue:null,description:"If provided with `icon`, sets the icon size.\nPlease refer to the Icon component for more details regarding\nthe default value of its `size` prop.",name:"iconSize",required:!1,type:{name:"number"}},isBusy:{defaultValue:null,description:"Indicates activity while a action is being performed.",name:"isBusy",required:!1,type:{name:"boolean"}},isDestructive:{defaultValue:null,description:"Renders a red text-based button style to indicate destructive behavior.",name:"isDestructive",required:!1,type:{name:"boolean"}},isPressed:{defaultValue:null,description:"Renders a pressed button style.",name:"isPressed",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"Sets the `aria-label` of the component, if none is provided.\nSets the Tooltip content if `showTooltip` is provided.",name:"label",required:!1,type:{name:"string"}},shortcut:{defaultValue:null,description:"If provided with `showTooltip`, appends the Shortcut label to the tooltip content.\nIf an object is provided, it should contain `display` and `ariaLabel` keys.",name:"shortcut",required:!1,type:{name:"string | { display: string; ariaLabel: string; }"}},showTooltip:{defaultValue:null,description:"If provided, renders a Tooltip component for the button.",name:"showTooltip",required:!1,type:{name:"boolean"}},size:{defaultValue:{value:"'default'"},description:"The size of the button.\n\n- `'default'`: For normal text-label buttons, unless it is a toggle button.\n- `'compact'`: For toggle buttons, icon buttons, and buttons when used in context of either.\n- `'small'`: For icon buttons associated with more advanced or auxiliary features.\n\nIf the deprecated `isSmall` prop is also defined, this prop will take precedence.",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"default"'},{value:'"compact"'}]}},text:{defaultValue:null,description:"If provided, displays the given text inside the button. If the button contains children elements, the text is displayed before them.",name:"text",required:!1,type:{name:"string"}},tooltipPosition:{defaultValue:null,description:"If provided with `showTooltip`, sets the position of the tooltip.\nPlease refer to the Tooltip component for more details regarding the defaults.",name:"tooltipPosition",required:!1,type:{name:"enum",value:[{value:'"middle"'},{value:'"top"'},{value:'"bottom"'},{value:'"middle center"'},{value:'"middle left"'},{value:'"middle right"'},{value:'"top center"'},{value:'"top left"'},{value:'"top right"'},{value:'"bottom center"'},{value:'"bottom left"'},{value:'"bottom right"'},{value:'"middle center left"'},{value:'"middle center right"'},{value:'"middle center top"'},{value:'"middle center bottom"'},{value:'"middle left left"'},{value:'"middle left right"'},{value:'"middle left top"'},{value:'"middle left bottom"'},{value:'"middle right left"'},{value:'"middle right right"'},{value:'"middle right top"'},{value:'"middle right bottom"'},{value:'"top center left"'},{value:'"top center right"'},{value:'"top center top"'},{value:'"top center bottom"'},{value:'"top left left"'},{value:'"top left right"'},{value:'"top left top"'},{value:'"top left bottom"'},{value:'"top right left"'},{value:'"top right right"'},{value:'"top right top"'},{value:'"top right bottom"'},{value:'"bottom center left"'},{value:'"bottom center right"'},{value:'"bottom center top"'},{value:'"bottom center bottom"'},{value:'"bottom left left"'},{value:'"bottom left right"'},{value:'"bottom left top"'},{value:'"bottom left bottom"'},{value:'"bottom right left"'},{value:'"bottom right right"'},{value:'"bottom right top"'},{value:'"bottom right bottom"'}]}},variant:{defaultValue:null,description:"Specifies the button's style.\nThe accepted values are:\n'primary' (the primary button styles)\n'secondary' (the default button styles)\n'tertiary' (the text-based button styles)\n'link' (the link button styles)",name:"variant",required:!1,type:{name:"enum",value:[{value:'"link"'},{value:'"primary"'},{value:'"secondary"'},{value:'"tertiary"'}]}},disabled:{defaultValue:null,description:"Whether the button is disabled. If `true`, this will force a `button` element\nto be rendered, even when an `href` is given.\n\nIn most cases, it is recommended to also set the `accessibleWhenDisabled` prop to `true`.",name:"disabled",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/circular-option-picker/circular-option-picker-actions.tsx#ButtonAction"]={docgenInfo:circular_option_picker_actions_ButtonAction.__docgenInfo,name:"ButtonAction",path:"packages/components/src/circular-option-picker/circular-option-picker-actions.tsx#ButtonAction"})}catch(__react_docgen_typescript_loader_error){}function ListboxCircularOptionPicker(props){const{actions,options,baseId,className,loop=!0,children,...additionalProps}=props,[activeId,setActiveId]=(0,react.useState)(void 0),contextValue=(0,react.useMemo)((()=>({baseId,activeId,setActiveId})),[baseId,activeId,setActiveId]);return(0,jsx_runtime.jsx)("div",{className,children:(0,jsx_runtime.jsxs)(CircularOptionPickerContext.Provider,{value:contextValue,children:[(0,jsx_runtime.jsx)(composite.e,{...additionalProps,id:baseId,focusLoop:loop,rtl:(0,build_module.V8)(),role:"listbox",activeId,setActiveId,children:options}),children,actions]})})}function ButtonsCircularOptionPicker(props){const{actions,options,children,baseId,...additionalProps}=props,contextValue=(0,react.useMemo)((()=>({baseId})),[baseId]);return(0,jsx_runtime.jsx)("div",{...additionalProps,id:baseId,children:(0,jsx_runtime.jsxs)(CircularOptionPickerContext.Provider,{value:contextValue,children:[options,children,actions]})})}function circular_option_picker_CircularOptionPicker(props){const{asButtons,actions:actionsProp,options:optionsProp,children,className,...additionalProps}=props,baseId=(0,use_instance_id.A)(circular_option_picker_CircularOptionPicker,"components-circular-option-picker",additionalProps.id),OptionPickerImplementation=asButtons?ButtonsCircularOptionPicker:ListboxCircularOptionPicker,actions=actionsProp?(0,jsx_runtime.jsx)("div",{className:"components-circular-option-picker__custom-clear-wrapper",children:actionsProp}):void 0,options=(0,jsx_runtime.jsx)("div",{className:"components-circular-option-picker__swatches",children:optionsProp});return(0,jsx_runtime.jsx)(OptionPickerImplementation,{...additionalProps,baseId,className:(0,clsx.A)("components-circular-option-picker",className),actions,options,children})}ListboxCircularOptionPicker.displayName="ListboxCircularOptionPicker",ButtonsCircularOptionPicker.displayName="ButtonsCircularOptionPicker",circular_option_picker_CircularOptionPicker.displayName="CircularOptionPicker",circular_option_picker_CircularOptionPicker.Option=circular_option_picker_option_Option,circular_option_picker_CircularOptionPicker.OptionGroup=circular_option_picker_option_group_OptionGroup,circular_option_picker_CircularOptionPicker.ButtonAction=circular_option_picker_actions_ButtonAction,circular_option_picker_CircularOptionPicker.DropdownLinkAction=circular_option_picker_actions_DropdownLinkAction;const circular_option_picker=circular_option_picker_CircularOptionPicker;try{circular_option_picker_CircularOptionPicker.displayName="CircularOptionPicker",circular_option_picker_CircularOptionPicker.__docgenInfo={description:"",displayName:"CircularOptionPicker",props:{id:{defaultValue:null,description:"An ID to apply to the component.",name:"id",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"A CSS class to apply to the wrapper element.",name:"className",required:!1,type:{name:"string"}},actions:{defaultValue:null,description:"The action(s) to be rendered after the options,\nsuch as a 'clear' button as seen in `ColorPalette`.\nUsually a `CircularOptionPicker.ButtonAction` or\n`CircularOptionPicker.DropdownLinkAction` component.",name:"actions",required:!1,type:{name:"ReactNode"}},options:{defaultValue:null,description:"The options to be rendered, such as color swatches.\nUsually a `CircularOptionPicker.Option` component.",name:"options",required:!0,type:{name:"ReactNode"}},children:{defaultValue:null,description:"The child elements.",name:"children",required:!1,type:{name:"ReactNode"}},asButtons:{defaultValue:{value:"false"},description:"Whether the control should present as a set of buttons,\neach with its own tab stop.",name:"asButtons",required:!1,type:{name:"boolean"}},loop:{defaultValue:{value:"true"},description:"Prevents keyboard interaction from wrapping around.\nOnly used when `asButtons` is not true.",name:"loop",required:!1,type:{name:"boolean"}},"aria-label":{defaultValue:null,description:"",name:"aria-label",required:!1,type:{name:"string"}},"aria-labelledby":{defaultValue:null,description:"",name:"aria-labelledby",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/circular-option-picker/circular-option-picker.tsx#CircularOptionPicker"]={docgenInfo:circular_option_picker_CircularOptionPicker.__docgenInfo,name:"CircularOptionPicker",path:"packages/components/src/circular-option-picker/circular-option-picker.tsx#CircularOptionPicker"})}catch(__react_docgen_typescript_loader_error){}const src_circular_option_picker=circular_option_picker;try{Option.displayName="Option",Option.__docgenInfo={description:"",displayName:"Option",props:{label:{defaultValue:null,description:"Sets the `aria-label` of the component, if none is provided.\nSets the Tooltip content if `showTooltip` is provided.",name:"label",required:!1,type:{name:"string"}},text:{defaultValue:null,description:"If provided, displays the given text inside the button. If the button contains children elements, the text is displayed before them.",name:"text",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"The button's children.",name:"children",required:!1,type:{name:"ReactNode"}},disabled:{defaultValue:null,description:"Whether the button is disabled. If `true`, this will force a `button` element\nto be rendered, even when an `href` is given.\n\nIn most cases, it is recommended to also set the `accessibleWhenDisabled` prop to `true`.",name:"disabled",required:!1,type:{name:"boolean"}},size:{defaultValue:{value:"'default'"},description:"The size of the button.\n\n- `'default'`: For normal text-label buttons, unless it is a toggle button.\n- `'compact'`: For toggle buttons, icon buttons, and buttons when used in context of either.\n- `'small'`: For icon buttons associated with more advanced or auxiliary features.\n\nIf the deprecated `isSmall` prop is also defined, this prop will take precedence.",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"default"'},{value:'"compact"'}]}},description:{defaultValue:null,description:"A visually hidden accessible description for the button.",name:"description",required:!1,type:{name:"string"}},__next40pxDefaultSize:{defaultValue:{value:"false"},description:"Start opting into the larger default height that will become the\ndefault size in a future version.",name:"__next40pxDefaultSize",required:!1,type:{name:"boolean"}},variant:{defaultValue:null,description:"Specifies the button's style.\nThe accepted values are:\n'primary' (the primary button styles)\n'secondary' (the default button styles)\n'tertiary' (the text-based button styles)\n'link' (the link button styles)",name:"variant",required:!1,type:{name:"enum",value:[{value:'"link"'},{value:'"primary"'},{value:'"secondary"'},{value:'"tertiary"'}]}},shortcut:{defaultValue:null,description:"If provided with `showTooltip`, appends the Shortcut label to the tooltip content.\nIf an object is provided, it should contain `display` and `ariaLabel` keys.",name:"shortcut",required:!1,type:{name:"string | { display: string; ariaLabel: string; }"}},icon:{defaultValue:null,description:"If provided, renders an Icon component inside the button.",name:"icon",required:!1,type:{name:"IconType"}},isDestructive:{defaultValue:null,description:"Renders a red text-based button style to indicate destructive behavior.",name:"isDestructive",required:!1,type:{name:"boolean"}},accessibleWhenDisabled:{defaultValue:{value:"false"},description:"Whether to keep the button focusable when disabled.\n\nIn most cases, it is recommended to set this to `true`. Disabling a control without maintaining focusability\ncan cause accessibility issues, by hiding their presence from screen reader users,\nor by preventing focus from returning to a trigger element.\n\nLearn more about the [focusability of disabled controls](https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/#focusabilityofdisabledcontrols)\nin the WAI-ARIA Authoring Practices Guide.",name:"accessibleWhenDisabled",required:!1,type:{name:"boolean"}},showTooltip:{defaultValue:null,description:"If provided, renders a Tooltip component for the button.",name:"showTooltip",required:!1,type:{name:"boolean"}},iconPosition:{defaultValue:{value:"'left'"},description:"If provided with `icon`, sets the position of icon relative to the `text`.",name:"iconPosition",required:!1,type:{name:"enum",value:[{value:'"left"'},{value:'"right"'}]}},iconSize:{defaultValue:null,description:"If provided with `icon`, sets the icon size.\nPlease refer to the Icon component for more details regarding\nthe default value of its `size` prop.",name:"iconSize",required:!1,type:{name:"number"}},isBusy:{defaultValue:null,description:"Indicates activity while a action is being performed.",name:"isBusy",required:!1,type:{name:"boolean"}},tooltipPosition:{defaultValue:null,description:"If provided with `showTooltip`, sets the position of the tooltip.\nPlease refer to the Tooltip component for more details regarding the defaults.",name:"tooltipPosition",required:!1,type:{name:"enum",value:[{value:'"middle"'},{value:'"top"'},{value:'"bottom"'},{value:'"middle center"'},{value:'"middle left"'},{value:'"middle right"'},{value:'"top center"'},{value:'"top left"'},{value:'"top right"'},{value:'"bottom center"'},{value:'"bottom left"'},{value:'"bottom right"'},{value:'"middle center left"'},{value:'"middle center right"'},{value:'"middle center top"'},{value:'"middle center bottom"'},{value:'"middle left left"'},{value:'"middle left right"'},{value:'"middle left top"'},{value:'"middle left bottom"'},{value:'"middle right left"'},{value:'"middle right right"'},{value:'"middle right top"'},{value:'"middle right bottom"'},{value:'"top center left"'},{value:'"top center right"'},{value:'"top center top"'},{value:'"top center bottom"'},{value:'"top left left"'},{value:'"top left right"'},{value:'"top left top"'},{value:'"top left bottom"'},{value:'"top right left"'},{value:'"top right right"'},{value:'"top right top"'},{value:'"top right bottom"'},{value:'"bottom center left"'},{value:'"bottom center right"'},{value:'"bottom center top"'},{value:'"bottom center bottom"'},{value:'"bottom left left"'},{value:'"bottom left right"'},{value:'"bottom left top"'},{value:'"bottom left bottom"'},{value:'"bottom right left"'},{value:'"bottom right right"'},{value:'"bottom right top"'},{value:'"bottom right bottom"'}]}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},tooltipText:{defaultValue:null,description:"",name:"tooltipText",required:!1,type:{name:"string"}},isSelected:{defaultValue:null,description:"",name:"isSelected",required:!1,type:{name:"boolean"}},selectedIconProps:{defaultValue:{value:"{}"},description:"",name:"selectedIconProps",required:!1,type:{name:'Omit<{ icon: Element; size?: number; } & { isPressed?: boolean; } & Omit<SVGProps<SVGSVGElement>, "ref"> & RefAttributes<HTMLElement>, "size" | "icon">'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/circular-option-picker/index.tsx#Option"]={docgenInfo:Option.__docgenInfo,name:"Option",path:"packages/components/src/circular-option-picker/index.tsx#Option"})}catch(__react_docgen_typescript_loader_error){}try{OptionGroup.displayName="OptionGroup",OptionGroup.__docgenInfo={description:"",displayName:"OptionGroup",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},options:{defaultValue:null,description:"",name:"options",required:!0,type:{name:"ReactNode"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/circular-option-picker/index.tsx#OptionGroup"]={docgenInfo:OptionGroup.__docgenInfo,name:"OptionGroup",path:"packages/components/src/circular-option-picker/index.tsx#OptionGroup"})}catch(__react_docgen_typescript_loader_error){}try{ButtonAction.displayName="ButtonAction",ButtonAction.__docgenInfo={description:"",displayName:"ButtonAction",props:{__next40pxDefaultSize:{defaultValue:{value:"false"},description:"Start opting into the larger default height that will become the\ndefault size in a future version.",name:"__next40pxDefaultSize",required:!1,type:{name:"boolean"}},accessibleWhenDisabled:{defaultValue:{value:"false"},description:"Whether to keep the button focusable when disabled.\n\nIn most cases, it is recommended to set this to `true`. Disabling a control without maintaining focusability\ncan cause accessibility issues, by hiding their presence from screen reader users,\nor by preventing focus from returning to a trigger element.\n\nLearn more about the [focusability of disabled controls](https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/#focusabilityofdisabledcontrols)\nin the WAI-ARIA Authoring Practices Guide.",name:"accessibleWhenDisabled",required:!1,type:{name:"boolean"}},children:{defaultValue:null,description:"The button's children.",name:"children",required:!1,type:{name:"ReactNode"}},description:{defaultValue:null,description:"A visually hidden accessible description for the button.",name:"description",required:!1,type:{name:"string"}},icon:{defaultValue:null,description:"If provided, renders an Icon component inside the button.",name:"icon",required:!1,type:{name:"IconType"}},iconPosition:{defaultValue:{value:"'left'"},description:"If provided with `icon`, sets the position of icon relative to the `text`.",name:"iconPosition",required:!1,type:{name:"enum",value:[{value:'"left"'},{value:'"right"'}]}},iconSize:{defaultValue:null,description:"If provided with `icon`, sets the icon size.\nPlease refer to the Icon component for more details regarding\nthe default value of its `size` prop.",name:"iconSize",required:!1,type:{name:"number"}},isBusy:{defaultValue:null,description:"Indicates activity while a action is being performed.",name:"isBusy",required:!1,type:{name:"boolean"}},isDestructive:{defaultValue:null,description:"Renders a red text-based button style to indicate destructive behavior.",name:"isDestructive",required:!1,type:{name:"boolean"}},isPressed:{defaultValue:null,description:"Renders a pressed button style.",name:"isPressed",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"Sets the `aria-label` of the component, if none is provided.\nSets the Tooltip content if `showTooltip` is provided.",name:"label",required:!1,type:{name:"string"}},shortcut:{defaultValue:null,description:"If provided with `showTooltip`, appends the Shortcut label to the tooltip content.\nIf an object is provided, it should contain `display` and `ariaLabel` keys.",name:"shortcut",required:!1,type:{name:"string | { display: string; ariaLabel: string; }"}},showTooltip:{defaultValue:null,description:"If provided, renders a Tooltip component for the button.",name:"showTooltip",required:!1,type:{name:"boolean"}},size:{defaultValue:{value:"'default'"},description:"The size of the button.\n\n- `'default'`: For normal text-label buttons, unless it is a toggle button.\n- `'compact'`: For toggle buttons, icon buttons, and buttons when used in context of either.\n- `'small'`: For icon buttons associated with more advanced or auxiliary features.\n\nIf the deprecated `isSmall` prop is also defined, this prop will take precedence.",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"default"'},{value:'"compact"'}]}},text:{defaultValue:null,description:"If provided, displays the given text inside the button. If the button contains children elements, the text is displayed before them.",name:"text",required:!1,type:{name:"string"}},tooltipPosition:{defaultValue:null,description:"If provided with `showTooltip`, sets the position of the tooltip.\nPlease refer to the Tooltip component for more details regarding the defaults.",name:"tooltipPosition",required:!1,type:{name:"enum",value:[{value:'"middle"'},{value:'"top"'},{value:'"bottom"'},{value:'"middle center"'},{value:'"middle left"'},{value:'"middle right"'},{value:'"top center"'},{value:'"top left"'},{value:'"top right"'},{value:'"bottom center"'},{value:'"bottom left"'},{value:'"bottom right"'},{value:'"middle center left"'},{value:'"middle center right"'},{value:'"middle center top"'},{value:'"middle center bottom"'},{value:'"middle left left"'},{value:'"middle left right"'},{value:'"middle left top"'},{value:'"middle left bottom"'},{value:'"middle right left"'},{value:'"middle right right"'},{value:'"middle right top"'},{value:'"middle right bottom"'},{value:'"top center left"'},{value:'"top center right"'},{value:'"top center top"'},{value:'"top center bottom"'},{value:'"top left left"'},{value:'"top left right"'},{value:'"top left top"'},{value:'"top left bottom"'},{value:'"top right left"'},{value:'"top right right"'},{value:'"top right top"'},{value:'"top right bottom"'},{value:'"bottom center left"'},{value:'"bottom center right"'},{value:'"bottom center top"'},{value:'"bottom center bottom"'},{value:'"bottom left left"'},{value:'"bottom left right"'},{value:'"bottom left top"'},{value:'"bottom left bottom"'},{value:'"bottom right left"'},{value:'"bottom right right"'},{value:'"bottom right top"'},{value:'"bottom right bottom"'}]}},variant:{defaultValue:null,description:"Specifies the button's style.\nThe accepted values are:\n'primary' (the primary button styles)\n'secondary' (the default button styles)\n'tertiary' (the text-based button styles)\n'link' (the link button styles)",name:"variant",required:!1,type:{name:"enum",value:[{value:'"link"'},{value:'"primary"'},{value:'"secondary"'},{value:'"tertiary"'}]}},disabled:{defaultValue:null,description:"Whether the button is disabled. If `true`, this will force a `button` element\nto be rendered, even when an `href` is given.\n\nIn most cases, it is recommended to also set the `accessibleWhenDisabled` prop to `true`.",name:"disabled",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/circular-option-picker/index.tsx#ButtonAction"]={docgenInfo:ButtonAction.__docgenInfo,name:"ButtonAction",path:"packages/components/src/circular-option-picker/index.tsx#ButtonAction"})}catch(__react_docgen_typescript_loader_error){}try{DropdownLinkAction.displayName="DropdownLinkAction",DropdownLinkAction.__docgenInfo={description:"",displayName:"DropdownLinkAction",props:{buttonProps:{defaultValue:null,description:"",name:"buttonProps",required:!1,type:{name:'Omit<WordPressComponentProps<ButtonAsButtonProps, "button", false>, "children">'}},linkText:{defaultValue:null,description:"",name:"linkText",required:!0,type:{name:"string"}},dropdownProps:{defaultValue:null,description:"",name:"dropdownProps",required:!0,type:{name:'Omit<DropdownProps, "className" | "renderToggle">'}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/circular-option-picker/index.tsx#DropdownLinkAction"]={docgenInfo:DropdownLinkAction.__docgenInfo,name:"DropdownLinkAction",path:"packages/components/src/circular-option-picker/index.tsx#DropdownLinkAction"})}catch(__react_docgen_typescript_loader_error){}try{CircularOptionPicker.displayName="CircularOptionPicker",CircularOptionPicker.__docgenInfo={description:"",displayName:"CircularOptionPicker",props:{id:{defaultValue:null,description:"An ID to apply to the component.",name:"id",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"A CSS class to apply to the wrapper element.",name:"className",required:!1,type:{name:"string"}},actions:{defaultValue:null,description:"The action(s) to be rendered after the options,\nsuch as a 'clear' button as seen in `ColorPalette`.\nUsually a `CircularOptionPicker.ButtonAction` or\n`CircularOptionPicker.DropdownLinkAction` component.",name:"actions",required:!1,type:{name:"ReactNode"}},options:{defaultValue:null,description:"The options to be rendered, such as color swatches.\nUsually a `CircularOptionPicker.Option` component.",name:"options",required:!0,type:{name:"ReactNode"}},children:{defaultValue:null,description:"The child elements.",name:"children",required:!1,type:{name:"ReactNode"}},asButtons:{defaultValue:{value:"false"},description:"Whether the control should present as a set of buttons,\neach with its own tab stop.",name:"asButtons",required:!1,type:{name:"boolean"}},loop:{defaultValue:{value:"true"},description:"Prevents keyboard interaction from wrapping around.\nOnly used when `asButtons` is not true.",name:"loop",required:!1,type:{name:"boolean"}},"aria-label":{defaultValue:null,description:"",name:"aria-label",required:!1,type:{name:"string"}},"aria-labelledby":{defaultValue:null,description:"",name:"aria-labelledby",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/circular-option-picker/index.tsx#CircularOptionPicker"]={docgenInfo:CircularOptionPicker.__docgenInfo,name:"CircularOptionPicker",path:"packages/components/src/circular-option-picker/index.tsx#CircularOptionPicker"})}catch(__react_docgen_typescript_loader_error){}},"./packages/components/src/composite/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{e:()=>Composite});var UVQLZ7T5=__webpack_require__("./packages/components/node_modules/@ariakit/react-core/esm/__chunks/UVQLZ7T5.js"),TW35PKTK=__webpack_require__("./packages/components/node_modules/@ariakit/react-core/esm/__chunks/TW35PKTK.js"),build_module=__webpack_require__("./packages/i18n/build-module/index.js"),react=__webpack_require__("./node_modules/react/index.js");const CompositeContext=(0,react.createContext)({}),useCompositeContext=()=>(0,react.useContext)(CompositeContext);var IEKMDIUY=__webpack_require__("./packages/components/node_modules/@ariakit/react-core/esm/__chunks/IEKMDIUY.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const CompositeGroup=(0,react.forwardRef)((function CompositeGroup(props,ref){var _props$store;const context=useCompositeContext(),store=null!==(_props$store=props.store)&&void 0!==_props$store?_props$store:context.store;return(0,jsx_runtime.jsx)(IEKMDIUY.t,{store,...props,ref})}));try{CompositeGroup.displayName="CompositeGroup",CompositeGroup.__docgenInfo={description:"",displayName:"CompositeGroup",props:{render:{defaultValue:null,description:"Allows the component to be rendered as a different HTML element or React\ncomponent. The value can be a React element or a function that takes in the\noriginal component props and gives back a React element with the props\nmerged.",name:"render",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>> | RenderProp<HTMLAttributes<any> & { ref?: Ref<any>; }>"}},children:{defaultValue:null,description:"The contents of the component.",name:"children",required:!1,type:{name:"ReactNode"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/composite/group.tsx#CompositeGroup"]={docgenInfo:CompositeGroup.__docgenInfo,name:"CompositeGroup",path:"packages/components/src/composite/group.tsx#CompositeGroup"})}catch(__react_docgen_typescript_loader_error){}var Y2MAXF6C=__webpack_require__("./packages/components/node_modules/@ariakit/react-core/esm/__chunks/Y2MAXF6C.js");const CompositeGroupLabel=(0,react.forwardRef)((function CompositeGroupLabel(props,ref){var _props$store;const context=useCompositeContext(),store=null!==(_props$store=props.store)&&void 0!==_props$store?_props$store:context.store;return(0,jsx_runtime.jsx)(Y2MAXF6C.$,{store,...props,ref})}));try{CompositeGroupLabel.displayName="CompositeGroupLabel",CompositeGroupLabel.__docgenInfo={description:"",displayName:"CompositeGroupLabel",props:{render:{defaultValue:null,description:"Allows the component to be rendered as a different HTML element or React\ncomponent. The value can be a React element or a function that takes in the\noriginal component props and gives back a React element with the props\nmerged.",name:"render",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>> | RenderProp<HTMLAttributes<any> & { ref?: Ref<any>; }>"}},children:{defaultValue:null,description:"The contents of the component.",name:"children",required:!1,type:{name:"ReactNode"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/composite/group-label.tsx#CompositeGroupLabel"]={docgenInfo:CompositeGroupLabel.__docgenInfo,name:"CompositeGroupLabel",path:"packages/components/src/composite/group-label.tsx#CompositeGroupLabel"})}catch(__react_docgen_typescript_loader_error){}const CompositeHover=(0,react.forwardRef)((function CompositeHover(props,ref){var _props$store;const context=useCompositeContext(),store=null!==(_props$store=props.store)&&void 0!==_props$store?_props$store:context.store;return(0,jsx_runtime.jsx)(IEKMDIUY.t,{store,...props,ref})}));try{CompositeHover.displayName="CompositeHover",CompositeHover.__docgenInfo={description:"",displayName:"CompositeHover",props:{render:{defaultValue:null,description:"Allows the component to be rendered as a different HTML element or React\ncomponent. The value can be a React element or a function that takes in the\noriginal component props and gives back a React element with the props\nmerged.",name:"render",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>> | RenderProp<HTMLAttributes<any> & { ref?: Ref<any>; }>"}},children:{defaultValue:null,description:"The contents of the component.",name:"children",required:!1,type:{name:"ReactNode"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/composite/hover.tsx#CompositeHover"]={docgenInfo:CompositeHover.__docgenInfo,name:"CompositeHover",path:"packages/components/src/composite/hover.tsx#CompositeHover"})}catch(__react_docgen_typescript_loader_error){}var _2GXGCHW6=__webpack_require__("./packages/components/node_modules/@ariakit/react-core/esm/__chunks/2GXGCHW6.js"),_3CCTMYB6=__webpack_require__("./packages/components/node_modules/@ariakit/react-core/esm/__chunks/3CCTMYB6.js");const CompositeItem=(0,react.forwardRef)((function CompositeItem(props,ref){var _props$store;const context=useCompositeContext(),store=null!==(_props$store=props.store)&&void 0!==_props$store?_props$store:context.store,tabbable=_2GXGCHW6.O$(store,(state=>null!==state?.activeId&&!store?.item(state?.activeId)?.element?.isConnected));return(0,jsx_runtime.jsx)(_3CCTMYB6.l,{store,tabbable,...props,ref})}));try{CompositeItem.displayName="CompositeItem",CompositeItem.__docgenInfo={description:"",displayName:"CompositeItem",props:{render:{defaultValue:null,description:"Allows the component to be rendered as a different HTML element or React\ncomponent. The value can be a React element or a function that takes in the\noriginal component props and gives back a React element with the props\nmerged.",name:"render",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>> | RenderProp<HTMLAttributes<any> & { ref?: Ref<any>; }>"}},children:{defaultValue:null,description:"The contents of the component.",name:"children",required:!1,type:{name:"ReactNode"}},accessibleWhenDisabled:{defaultValue:null,description:"Indicates whether the element should be focusable even when it is\n`disabled`.\n\nThis is important when discoverability is a concern. For example:\n\n> A toolbar in an editor contains a set of special smart paste functions\nthat are disabled when the clipboard is empty or when the function is not\napplicable to the current content of the clipboard. It could be helpful to\nkeep the disabled buttons focusable if the ability to discover their\nfunctionality is primarily via their presence on the toolbar.\n\nLearn more on [Focusability of disabled\ncontrols](https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/#focusabilityofdisabledcontrols).",name:"accessibleWhenDisabled",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/composite/item.tsx#CompositeItem"]={docgenInfo:CompositeItem.__docgenInfo,name:"CompositeItem",path:"packages/components/src/composite/item.tsx#CompositeItem"})}catch(__react_docgen_typescript_loader_error){}var _6BE7QOX5=__webpack_require__("./packages/components/node_modules/@ariakit/react-core/esm/__chunks/6BE7QOX5.js");const CompositeRow=(0,react.forwardRef)((function CompositeRow(props,ref){var _props$store;const context=useCompositeContext(),store=null!==(_props$store=props.store)&&void 0!==_props$store?_props$store:context.store;return(0,jsx_runtime.jsx)(_6BE7QOX5.s,{store,...props,ref})}));try{CompositeRow.displayName="CompositeRow",CompositeRow.__docgenInfo={description:"",displayName:"CompositeRow",props:{render:{defaultValue:null,description:"Allows the component to be rendered as a different HTML element or React\ncomponent. The value can be a React element or a function that takes in the\noriginal component props and gives back a React element with the props\nmerged.",name:"render",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>> | RenderProp<HTMLAttributes<any> & { ref?: Ref<any>; }>"}},children:{defaultValue:null,description:"The contents of the component.",name:"children",required:!1,type:{name:"ReactNode"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/composite/row.tsx#CompositeRow"]={docgenInfo:CompositeRow.__docgenInfo,name:"CompositeRow",path:"packages/components/src/composite/row.tsx#CompositeRow"})}catch(__react_docgen_typescript_loader_error){}const CompositeTypeahead=(0,react.forwardRef)((function CompositeTypeahead(props,ref){var _props$store;const context=useCompositeContext(),store=null!==(_props$store=props.store)&&void 0!==_props$store?_props$store:context.store;return(0,jsx_runtime.jsx)(_6BE7QOX5.s,{store,...props,ref})}));try{CompositeTypeahead.displayName="CompositeTypeahead",CompositeTypeahead.__docgenInfo={description:"",displayName:"CompositeTypeahead",props:{render:{defaultValue:null,description:"Allows the component to be rendered as a different HTML element or React\ncomponent. The value can be a React element or a function that takes in the\noriginal component props and gives back a React element with the props\nmerged.",name:"render",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>> | RenderProp<HTMLAttributes<any> & { ref?: Ref<any>; }>"}},children:{defaultValue:null,description:"The contents of the component.",name:"children",required:!1,type:{name:"ReactNode"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/composite/typeahead.tsx#CompositeTypeahead"]={docgenInfo:CompositeTypeahead.__docgenInfo,name:"CompositeTypeahead",path:"packages/components/src/composite/typeahead.tsx#CompositeTypeahead"})}catch(__react_docgen_typescript_loader_error){}const Composite=Object.assign((0,react.forwardRef)((function Composite({activeId,defaultActiveId,setActiveId,focusLoop=!1,focusWrap=!1,focusShift=!1,virtualFocus=!1,orientation="both",rtl=(0,build_module.V8)(),children,disabled=!1,...props},ref){const storeProp=props.store,internalStore=UVQLZ7T5.q({activeId,defaultActiveId,setActiveId,focusLoop,focusWrap,focusShift,virtualFocus,orientation,rtl}),store=null!=storeProp?storeProp:internalStore,contextValue=(0,react.useMemo)((()=>({store})),[store]);return(0,jsx_runtime.jsx)(TW35PKTK.e,{disabled,store,...props,ref,children:(0,jsx_runtime.jsx)(CompositeContext.Provider,{value:contextValue,children})})})),{Group:Object.assign(CompositeGroup,{displayName:"Composite.Group"}),GroupLabel:Object.assign(CompositeGroupLabel,{displayName:"Composite.GroupLabel"}),Item:Object.assign(CompositeItem,{displayName:"Composite.Item"}),Row:Object.assign(CompositeRow,{displayName:"Composite.Row"}),Hover:Object.assign(CompositeHover,{displayName:"Composite.Hover"}),Typeahead:Object.assign(CompositeTypeahead,{displayName:"Composite.Typeahead"}),Context:Object.assign(CompositeContext,{displayName:"Composite.Context"})});try{Composite.displayName="Composite",Composite.__docgenInfo={description:"Renders a widget based on the WAI-ARIA [`composite`](https://w3c.github.io/aria/#composite)\nrole, which provides a single tab stop on the page and arrow key navigation\nthrough the focusable descendants.",displayName:"Composite",props:{activeId:{defaultValue:null,description:"The current active item `id`. The active item is the element within the\ncomposite widget that has either DOM or virtual focus (in case\nthe `virtualFocus` prop is enabled).\n- `null` represents the base composite element (the one with a [composite\n  role](https://w3c.github.io/aria/#composite)). Users will be able to\n  navigate out of it using arrow keys.\n- If `activeId` is initially set to `null`, the base composite element\n  itself will have focus and users will be able to navigate to it using\n  arrow keys.",name:"activeId",required:!1,type:{name:"string"}},defaultActiveId:{defaultValue:null,description:"The composite item id that should be active by default when the composite\nwidget is rendered. If `null`, the composite element itself will have focus\nand users will be able to navigate to it using arrow keys. If `undefined`,\nthe first enabled item will be focused.",name:"defaultActiveId",required:!1,type:{name:"string"}},setActiveId:{defaultValue:null,description:"A callback that gets called when the `activeId` state changes.",name:"setActiveId",required:!1,type:{name:"(activeId: string) => void"}},focusLoop:{defaultValue:{value:"false"},description:"Determines how the focus behaves when the user reaches the end of the\ncomposite widget.\n\nOn one-dimensional composite widgets:\n- `true` loops from the last item to the first item and vice-versa.\n- `horizontal` loops only if `orientation` is `horizontal` or not set.\n- `vertical` loops only if `orientation` is `vertical` or not set.\n- If `activeId` is initially set to `null`, the composite element will\n  be focused in between the last and first items.\n\nOn two-dimensional composite widgets (ie. when using `CompositeRow`):\n- `true` loops from the last row/column item to the first item in the same\n  row/column and vice-versa. If it's the last item in the last row, it\n  moves to the first item in the first row and vice-versa.\n- `horizontal` loops only from the last row item to the first item in the\n  same row.\n- `vertical` loops only from the last column item to the first item in the\n  column row.\n- If `activeId` is initially set to `null`, vertical loop will have no\n  effect as moving down from the last row or up from the first row will\n  focus on the composite element.\n- If `focusWrap` matches the value of `focusLoop`, it'll wrap between the\n  last item in the last row or column and the first item in the first row or\n  column and vice-versa.",name:"focusLoop",required:!1,type:{name:"boolean | Orientation"}},focusWrap:{defaultValue:{value:"false"},description:"**Works only on two-dimensional composite widgets**.\n\nIf enabled, moving to the next item from the last one in a row or column\nwill focus on the first item in the next row or column and vice-versa.\n- `true` wraps between rows and columns.\n- `horizontal` wraps only between rows.\n- `vertical` wraps only between columns.\n- If `focusLoop` matches the value of `focusWrap`, it'll wrap between the\n  last item in the last row or column and the first item in the first row or\n  column and vice-versa.",name:"focusWrap",required:!1,type:{name:"boolean | Orientation"}},focusShift:{defaultValue:{value:"false"},description:"**Works only on two-dimensional composite widgets**.\n\nIf enabled, moving up or down when there's no next item or when the next\nitem is disabled will shift to the item right before it.",name:"focusShift",required:!1,type:{name:"boolean"}},virtualFocus:{defaultValue:{value:"false"},description:"If enabled, the composite element will act as an\n[`aria-activedescendant`](https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/#kbd_focus_activedescendant)\ncontainer instead of [roving\ntabindex](https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/#kbd_roving_tabindex).\nDOM focus will remain on the composite element while its items receive\nvirtual focus.\n\nIn both scenarios, the item in focus will carry the `data-active-item`\nattribute.",name:"virtualFocus",required:!1,type:{name:"boolean"}},orientation:{defaultValue:{value:'"both"'},description:"Defines the orientation of the composite widget. If the composite has a\nsingle row or column (one-dimensional), the `orientation` value determines\nwhich arrow keys can be used to move focus:\n- `both`: all arrow keys work.\n- `horizontal`: only left and right arrow keys work.\n- `vertical`: only up and down arrow keys work.\n\nIt doesn't have any effect on two-dimensional composites.",name:"orientation",required:!1,type:{name:"enum",value:[{value:'"vertical"'},{value:'"horizontal"'},{value:'"both"'}]}},rtl:{defaultValue:{value:"`isRtl()`"},description:'Controls how the previous and next items are determined.\nIf `rtl` is set to `true`, they will be inverted.\n\nThis only affects the composite widget behavior. You still need to set\n`dir="rtl"` on HTML/CSS.',name:"rtl",required:!1,type:{name:"boolean"}},render:{defaultValue:null,description:"Allows the component to be rendered as a different HTML element or React\ncomponent. The value can be a React element or a function that takes in the\noriginal component props and gives back a React element with the props\nmerged.",name:"render",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>> | RenderProp<HTMLAttributes<any> & { ref?: Ref<any>; }>"}},focusable:{defaultValue:null,description:"Makes the component a focusable element. When this element gains keyboard\nfocus, it gets a `data-focus-visible` attribute and triggers the\n`onFocusVisible` prop.\nThe component supports the `disabled` prop even for those elements not\nsupporting the native `disabled` attribute. Disabled elements may be\nstill accessible via keyboard by using the the `accessibleWhenDisabled`\nprop.\nNon-native focusable elements will lose their focusability entirely.\nHowever, native focusable elements will retain their inherent focusability.",name:"focusable",required:!1,type:{name:"boolean"}},disabled:{defaultValue:{value:"false"},description:"Determines if the element is disabled. This sets the `aria-disabled`\nattribute accordingly, enabling support for all elements, including those\nthat don't support the native `disabled` attribute.\n\nThis feature can be combined with the `accessibleWhenDisabled` prop to\nmake disabled elements still accessible via keyboard.\n\n**Note**: For this prop to work, the `focusable` prop must be set to\n`true`, if it's not set by default.",name:"disabled",required:!1,type:{name:"boolean"}},accessibleWhenDisabled:{defaultValue:null,description:"Indicates whether the element should be focusable even when it is\n`disabled`.\n\nThis is important when discoverability is a concern. For example:\n\n> A toolbar in an editor contains a set of special smart paste functions\nthat are disabled when the clipboard is empty or when the function is not\napplicable to the current content of the clipboard. It could be helpful to\nkeep the disabled buttons focusable if the ability to discover their\nfunctionality is primarily via their presence on the toolbar.\n\nLearn more on [Focusability of disabled\ncontrols](https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/#focusabilityofdisabledcontrols).",name:"accessibleWhenDisabled",required:!1,type:{name:"boolean"}},onFocusVisible:{defaultValue:null,description:"Custom event handler invoked when the element gains focus through keyboard\ninteraction or a key press occurs while the element is in focus. This is\nthe programmatic equivalent of the `data-focus-visible` attribute.\n\n**Note**: For this prop to work, the `focusable` prop must be set to `true`\nif it's not set by default.",name:"onFocusVisible",required:!1,type:{name:"BivariantCallback<(event: SyntheticEvent<HTMLElement, Event>) => void>"}},children:{defaultValue:null,description:"The contents of the component.",name:"children",required:!1,type:{name:"ReactNode"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/composite/index.tsx#Composite"]={docgenInfo:Composite.__docgenInfo,name:"Composite",path:"packages/components/src/composite/index.tsx#Composite"})}catch(__react_docgen_typescript_loader_error){}},"./packages/components/src/dropdown/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var clsx__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/clsx/dist/clsx.mjs"),_wordpress_element__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react/index.js"),_wordpress_compose__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./packages/compose/build-module/hooks/use-merge-refs/index.js"),_wordpress_deprecated__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/deprecated/build-module/index.js"),_context__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/components/src/context/use-context-system.js"),_context__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./packages/components/src/context/context-connect.ts"),_utils_hooks__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./packages/components/src/utils/hooks/use-controlled-value.ts"),_popover__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./packages/components/src/popover/index.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js");const UnconnectedDropdown=(props,forwardedRef)=>{const{renderContent,renderToggle,className,contentClassName,expandOnMobile,headerTitle,focusOnMount,popoverProps,onClose,onToggle,style,open,defaultOpen,position,variant}=(0,_context__WEBPACK_IMPORTED_MODULE_1__.A)(props,"Dropdown");void 0!==position&&(0,_wordpress_deprecated__WEBPACK_IMPORTED_MODULE_2__.A)("`position` prop in wp.components.Dropdown",{since:"6.2",alternative:"`popoverProps.placement` prop",hint:"Note that the `position` prop will override any values passed through the `popoverProps.placement` prop."});const[fallbackPopoverAnchor,setFallbackPopoverAnchor]=(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_3__.useState)(null),containerRef=(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_3__.useRef)(),[isOpen,setIsOpen]=(0,_utils_hooks__WEBPACK_IMPORTED_MODULE_4__.j)({defaultValue:defaultOpen,value:open,onChange:onToggle});function close(){onClose?.(),setIsOpen(!1)}const args={isOpen:!!isOpen,onToggle:()=>setIsOpen(!isOpen),onClose:close},popoverPropsHaveAnchor=!!(popoverProps?.anchor||popoverProps?.anchorRef||popoverProps?.getAnchorRect||popoverProps?.anchorRect);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className,ref:(0,_wordpress_compose__WEBPACK_IMPORTED_MODULE_5__.A)([containerRef,forwardedRef,setFallbackPopoverAnchor]),tabIndex:-1,style,children:[renderToggle(args),isOpen&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_popover__WEBPACK_IMPORTED_MODULE_6__.Ay,{position,onClose:close,onFocusOutside:function closeIfFocusOutside(){if(!containerRef.current)return;const{ownerDocument}=containerRef.current,dialog=ownerDocument?.activeElement?.closest('[role="dialog"]');containerRef.current.contains(ownerDocument.activeElement)||dialog&&!dialog.contains(containerRef.current)||close()},expandOnMobile,headerTitle,focusOnMount,offset:13,anchor:popoverPropsHaveAnchor?void 0:fallbackPopoverAnchor,variant,...popoverProps,className:(0,clsx__WEBPACK_IMPORTED_MODULE_7__.A)("components-dropdown__content",popoverProps?.className,contentClassName),children:renderContent(args)})]})};UnconnectedDropdown.displayName="UnconnectedDropdown";const Dropdown=(0,_context__WEBPACK_IMPORTED_MODULE_8__.KZ)(UnconnectedDropdown,"Dropdown"),__WEBPACK_DEFAULT_EXPORT__=Dropdown;try{Dropdown.displayName="Dropdown",Dropdown.__docgenInfo={description:'Renders a button that opens a floating content modal when clicked.\n\n```jsx\nimport { Button, Dropdown } from \'@wordpress/components\';\n\nconst MyDropdown = () => (\n  <Dropdown\n    className="my-container-class-name"\n    contentClassName="my-dropdown-content-classname"\n    popoverProps={ { placement: \'bottom-start\' } }\n    renderToggle={ ( { isOpen, onToggle } ) => (\n      <Button\n        variant="primary"\n        onClick={ onToggle }\n        aria-expanded={ isOpen }\n      >\n        Toggle Dropdown!\n      </Button>\n    ) }\n    renderContent={ () => <div>This is the content of the dropdown.</div> }\n  />\n);\n```',displayName:"Dropdown",props:{className:{defaultValue:null,description:"The className of the global container.",name:"className",required:!1,type:{name:"string"}},contentClassName:{defaultValue:null,description:"If you want to target the dropdown menu for styling purposes,\nyou need to provide a contentClassName because it's not being rendered\nas a child of the container node.",name:"contentClassName",required:!1,type:{name:"string"}},expandOnMobile:{defaultValue:{value:"false"},description:"Opt-in prop to show popovers fullscreen on mobile.",name:"expandOnMobile",required:!1,type:{name:"boolean"}},focusOnMount:{defaultValue:{value:"'firstElement'"},description:'By default, the first tabbable element in the popover will receive focus\nwhen it mounts. This is the same as setting this prop to "firstElement".\nSpecifying a true value will focus the container instead.\nSpecifying a false value disables the focus handling entirely\n(this should only be done when an appropriately accessible\nsubstitute behavior exists).',name:"focusOnMount",required:!1,type:{name:'boolean | "firstElement"'}},headerTitle:{defaultValue:null,description:"Set this to customize the text that is shown in the dropdown's header\nwhen it is fullscreen on mobile.",name:"headerTitle",required:!1,type:{name:"string"}},onClose:{defaultValue:null,description:"A callback invoked when the popover should be closed.",name:"onClose",required:!1,type:{name:"() => void"}},onToggle:{defaultValue:null,description:"A callback invoked when the state of the dropdown changes\nfrom open to closed and vice versa.",name:"onToggle",required:!1,type:{name:"(willOpen: boolean) => void"}},popoverProps:{defaultValue:null,description:"Properties of popoverProps object will be passed as props\nto the Popover component.\nUse this object to access properties/features\nof the Popover component that are not already exposed\nin the Dropdown component,\ne.g.: the ability to have the popover without an arrow.",name:"popoverProps",required:!1,type:{name:'Omit<ComponentPropsWithoutRef<WordPressComponent<ElementType<any, keyof IntrinsicElements>, Omit<WordPressComponentProps<PopoverProps, "div", false>, "onDrag" | ... 55 more ... | "ignoreStrict"> & RefAttributes<...>, boolean>>, "children">'}},renderContent:{defaultValue:null,description:"A callback invoked to render the content of the dropdown menu.\nIts first argument is the same as the renderToggle prop.",name:"renderContent",required:!0,type:{name:"(props: CallbackProps) => ReactNode"}},renderToggle:{defaultValue:null,description:"A callback invoked to render the Dropdown Toggle Button.\n\nThe first argument of the callback is an object\ncontaining the following properties:\n\n- isOpen: whether the dropdown menu is opened or not\n- onToggle: A function switching the dropdown menu's state\nfrom open to closed and vice versa\n- onClose: A function that closes the menu if invoked",name:"renderToggle",required:!0,type:{name:"(props: CallbackProps) => ReactNode"}},style:{defaultValue:null,description:"The style of the global container.",name:"style",required:!1,type:{name:"CSSProperties"}},position:{defaultValue:null,description:"Legacy way to specify the popover's position with respect to its anchor.\nFor details about the possible values, see the `Popover` component's docs.\n_Note: this prop is deprecated. Use the `popoverProps.placement` prop\ninstead._\n@deprecated",name:"position",required:!1,type:{name:"enum",value:[{value:'"middle"'},{value:'"top"'},{value:'"bottom"'},{value:'"middle center"'},{value:'"middle left"'},{value:'"middle right"'},{value:'"top center"'},{value:'"top left"'},{value:'"top right"'},{value:'"bottom center"'},{value:'"bottom left"'},{value:'"bottom right"'},{value:'"middle center left"'},{value:'"middle center right"'},{value:'"middle center top"'},{value:'"middle center bottom"'},{value:'"middle left left"'},{value:'"middle left right"'},{value:'"middle left top"'},{value:'"middle left bottom"'},{value:'"middle right left"'},{value:'"middle right right"'},{value:'"middle right top"'},{value:'"middle right bottom"'},{value:'"top center left"'},{value:'"top center right"'},{value:'"top center top"'},{value:'"top center bottom"'},{value:'"top left left"'},{value:'"top left right"'},{value:'"top left top"'},{value:'"top left bottom"'},{value:'"top right left"'},{value:'"top right right"'},{value:'"top right top"'},{value:'"top right bottom"'},{value:'"bottom center left"'},{value:'"bottom center right"'},{value:'"bottom center top"'},{value:'"bottom center bottom"'},{value:'"bottom left left"'},{value:'"bottom left right"'},{value:'"bottom left top"'},{value:'"bottom left bottom"'},{value:'"bottom right left"'},{value:'"bottom right right"'},{value:'"bottom right top"'},{value:'"bottom right bottom"'}]}},open:{defaultValue:null,description:"The controlled open state of the dropdown.\nMust be used in conjunction with `onToggle`.",name:"open",required:!1,type:{name:"boolean"}},defaultOpen:{defaultValue:null,description:"The open state of the dropdown when initially rendered.\nUse when you do not need to control its open state. It will be overridden\nby the `open` prop if it is specified on the component's first render.",name:"defaultOpen",required:!1,type:{name:"boolean"}},as:{defaultValue:null,description:"The HTML element or React component to render the component as.",name:"as",required:!1,type:{name:'"symbol" | "object" | "select" | "a" | "abbr" | "address" | "area" | "article" | "aside" | "audio" | "b" | "base" | "bdi" | "bdo" | "big" | "blockquote" | "body" | "br" | "button" | ... 516 more ... | ("view" & FunctionComponent<...>)'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/dropdown/index.tsx#Dropdown"]={docgenInfo:Dropdown.__docgenInfo,name:"Dropdown",path:"packages/components/src/dropdown/index.tsx#Dropdown"})}catch(__react_docgen_typescript_loader_error){}}}]);