"use strict";(self.webpackChunkgutenberg=self.webpackChunkgutenberg||[]).push([[7535],{"./packages/components/src/date-time/stories/time.story.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,TimeInput:()=>TimeInput,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _wordpress_element__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/index.js"),_time__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/components/src/date-time/time/index.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/TimePicker",component:_time__WEBPACK_IMPORTED_MODULE_1__.h,subcomponents:{"TimePicker.TimeInput":_time__WEBPACK_IMPORTED_MODULE_1__.h.TimeInput},argTypes:{currentTime:{control:"date"},onChange:{action:"onChange",control:{type:null}}},parameters:{sourceLink:"packages/components/src/date-time",badges:[],controls:{expanded:!0},docs:{canvas:{sourceState:"shown"}}}},Template=({currentTime,onChange,...args})=>{const[time,setTime]=(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_2__.useState)(currentTime);return(0,_wordpress_element__WEBPACK_IMPORTED_MODULE_2__.useEffect)((()=>{setTime(currentTime)}),[currentTime]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_time__WEBPACK_IMPORTED_MODULE_1__.h,{...args,currentTime:time,onChange:newTime=>{setTime(newTime),onChange?.(newTime)}})};Template.displayName="Template";const Default=Template.bind({}),TimeInputTemplate=args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_time__WEBPACK_IMPORTED_MODULE_1__.h.TimeInput,{...args});TimeInputTemplate.displayName="TimeInputTemplate";const TimeInput=TimeInputTemplate.bind({});TimeInput.args={label:"Time"},TimeInput.parameters={controls:{include:[]}},Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"({\n  currentTime,\n  onChange,\n  ...args\n}) => {\n  const [time, setTime] = useState(currentTime);\n  useEffect(() => {\n    setTime(currentTime);\n  }, [currentTime]);\n  return <TimePicker {...args} currentTime={time} onChange={newTime => {\n    setTime(newTime);\n    onChange?.(newTime);\n  }} />;\n}",...Default.parameters?.docs?.source}}},TimeInput.parameters={...TimeInput.parameters,docs:{...TimeInput.parameters?.docs,source:{originalSource:"args => {\n  return <TimePicker.TimeInput {...args} />;\n}",...TimeInput.parameters?.docs?.source},description:{story:"The time input can be used in isolation as `<TimePicker.TimeInput />`. In this case, the `value` will be passed\nas an object in 24-hour format (`{ hours: number, minutes: number }`).",...TimeInput.parameters?.docs?.description}}};try{TimeInput.displayName="TimeInput",TimeInput.__docgenInfo={description:"The time input can be used in isolation as `<TimePicker.TimeInput />`. In this case, the `value` will be passed\nas an object in 24-hour format (`{ hours: number, minutes: number }`).",displayName:"TimeInput",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/components/src/date-time/stories/time.story.tsx#TimeInput"]={docgenInfo:TimeInput.__docgenInfo,name:"TimeInput",path:"packages/components/src/date-time/stories/time.story.tsx#TimeInput"})}catch(__react_docgen_typescript_loader_error){}}}]);